parameters:
# If you want a project to be deployed as a package, make sure it is in this list.
  packageProjects:
    1: FGS.Collections.Extensions.Pagination
    2: FGS.Collections.Extensions.Pagination.Abstractions
    3: FGS.ComponentModel.DataAnnotations
    4: FGS.ComponentModel.DataAnnotations.Extensions
    5: FGS.Configuration.Abstractions
    6: FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv
    8: FGS.Extensions.Diagnostics.HealthChecks.EntityFramework
    9: FGS.Extensions.Logging.Serilog
    10: FGS.FaultHandling.Abstractions
    11: FGS.FaultHandling.Polly
    12: FGS.FaultHandling.Predicates.Mssql
    13: FGS.FaultHandling.Predicates.Win32
    14: FGS.FaultHandling.Primitives
    15: FGS.Interception.Abstractions
    16: FGS.Interception.Annotations.FaultHandling
    17: FGS.Interception.Annotations.Time
    18: FGS.Interception.DynamicProxy
    19: FGS.Interceptors.FaultHandling
    20: FGS.Interceptors.Time
    21: FGS.Linq.Expressions
    22: FGS.Primitives.Extensions
    23: FGS.Primitives.Time
    24: FGS.Primitives.Time.Abstractions
    25: FGS.Reflection.Extensions
    26: FGS.Rx.Extensions
    27: FGS.Rx.Extensions.Abstractions
    28: FGS.Tests.Support
    29: FGS.Tests.Support.AspNetCore.Mvc
    34: FGS.Tests.Support.AutoFixture.Mocking
    35: FGS.Tests.Support.AutoFixture.Mocking.Options
    37: FGS.AspNetCore.Hosting.Extensions.Logging.Serilog
    38: FGS.AspNetCore.Http.Extensions.AWS.ALB
    39: FGS.AspNetCore.Http.Extensions.RequestStopwatch
    40: FGS.AspNetCore.Mvc.ModelBinding
    41: FGS.AspNetCore.Mvc.ModelBinding.Validation
    42: FGS.Autofac.AspNetCore.Mvc.Routing
    43: FGS.Autofac.CompositionRoot
    44: FGS.Autofac.CompositionRoot.Abstractions
    45: FGS.Autofac.DynamicScoping
    46: FGS.Autofac.DynamicScoping.Abstractions
    50: FGS.Autofac.Options
    51: FGS.Autofac.Registration.Extensions
    52: FGS.Collections.Extensions
    53: FGS.Extensions.Hosting.Middleware.Abstractions
    54: FGS.Extensions.Hosting.Middleware
    56: FGS.Extensions.Hosting.Logging.Serilog
    57: FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking
    58: FGS.Extensions.Hosting.Middleware.DelayedStart
    59: FGS.Linq.Extensions.AutoMapper
    60: FGS.Linq.Extensions.AutoMapper7
    61: FGS.Linq.Extensions.Pagination.Abstractions
    62: FGS.Linq.Extensions.Pagination
    63: FGS.Linq.Extensions.EntityFramework6
    64: FGS.Linq.Extensions.EntityFrameworkCore
    65: FGS.Linq.Extensions.Pagination.EntityFramework6
    66: FGS.Linq.Extensions.Pagination.EntityFrameworkCore
    67: FGS.Collections.Extensions.OneOf.Units
    68: FGS.Linq.Extensions.OneOf.EntityFramework6
    69: FGS.Linq.Extensions.OneOf.EntityFrameworkCore
    70: FGS.OneOf.Extensions
    71: FGS.Autofac4.Interception.DynamicProxy
    72: FGS.Autofac4.Interceptors.FaultHandling
    73: FGS.Autofac4.Interceptors.Time
    74: FGS.Tests.Support.Autofac4.Mocking
    75: FGS.Tests.Support.Autofac4.Mocking.Configuration
    76: FGS.Tests.Support.Autofac4.Mocking.Logging
    77: FGS.Tests.Support.Autofac4.Mocking.Options
    78: FGS.Extensions.DependencyInjection.Autofac4
    79: FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac4
    80: FGS.Extensions.Hosting.DependencyInjection.Autofac4

stages:

- stage: Deploy
  displayName: Deploy
  jobs:
  - ${{ each project in parameters.packageProjects }}:
    - job: Build_and_Push_Package__${{ project.key }}
      displayName: Build & Push Package for "${{ project.value }}"
      pool:
        vmImage: 'windows-latest'

      steps:

      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: '>=4.9.1'

      - pwsh: |
            nuget sources Update -Name nuget.org -Source https://api.nuget.org/v3/index.json

      - task: DotNetCoreCLI@2
        displayName: dotnet pack "${{ project.value }}"
        inputs:
          command: pack
          packagesToPack: "src/${{ project.value }}/${{ project.value }}.csproj"
          outputDir: "$(Build.ArtifactStagingDirectory)"
          versioningScheme: byBuildNumber
          arguments: --configuration Release

      - task: NuGetCommand@2
        displayName: nuget push "${{ project.value }}"
        inputs:
          command: push
          packagesToPush: "$(Build.ArtifactStagingDirectory)/*.nupkg"
          nuGetFeedType: external
          publishFeedCredentials: "NuGet foxguardsolutions Push All FGS.*"
