{
  "api/index.html": {
    "href": "api/index.html",
    "title": "FoxGuard Foundation Libraries | FoxGuard Foundation Libraries",
    "keywords": "FoxGuard Foundation Libraries About These are libraries that FoxGuard has developed over the course of several years of internal commercially-driven software engineering projects. For more information about the project, see the project's GitHub . Getting started Use the tree to the left in order to navigate the API documentation, or use the search functionality to find a specific topic."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | FoxGuard Foundation Libraries",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | FoxGuard Foundation Libraries",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "api/FGS.Primitives.Extensions.DateTimeOffsetExtensions.html": {
    "href": "api/FGS.Primitives.Extensions.DateTimeOffsetExtensions.html",
    "title": "Class DateTimeOffsetExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class DateTimeOffsetExtensions Inheritance Object DateTimeOffsetExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Primitives.Extensions Assembly : FGS.Primitives.Extensions.dll Syntax public static class DateTimeOffsetExtensions Fields | Improve this Doc View Source UnixEpoch Declaration public static readonly DateTimeOffset UnixEpoch Field Value Type Description DateTimeOffset Methods | Improve this Doc View Source FloorToDay(DateTimeOffset) Declaration public static DateTimeOffset FloorToDay(this DateTimeOffset dateTimeOffset) Parameters Type Name Description DateTimeOffset dateTimeOffset Returns Type Description DateTimeOffset | Improve this Doc View Source FloorToSecond(DateTimeOffset) Declaration public static DateTimeOffset FloorToSecond(this DateTimeOffset dateTimeOffset) Parameters Type Name Description DateTimeOffset dateTimeOffset Returns Type Description DateTimeOffset | Improve this Doc View Source RoundToSecond(DateTimeOffset) Declaration public static DateTimeOffset RoundToSecond(this DateTimeOffset dateTimeOffset) Parameters Type Name Description DateTimeOffset dateTimeOffset Returns Type Description DateTimeOffset | Improve this Doc View Source ToUnixTimestampSeconds(DateTimeOffset) Declaration public static double ToUnixTimestampSeconds(this DateTimeOffset value) Parameters Type Name Description DateTimeOffset value Returns Type Description Double"
  },
  "api/FGS.FaultHandling.Polly.Retry.RetryPolicyFactory.html": {
    "href": "api/FGS.FaultHandling.Polly.Retry.RetryPolicyFactory.html",
    "title": "Class RetryPolicyFactory | FoxGuard Foundation Libraries",
    "keywords": "Class RetryPolicyFactory Represents a factory of IRetryPolicy instances based on Polly. Inheritance Object RetryPolicyFactory Implements IRetryPolicyFactory Namespace : FGS.FaultHandling.Polly.Retry Assembly : FGS.FaultHandling.Polly.dll Syntax public sealed class RetryPolicyFactory : object, IRetryPolicyFactory Constructors | Improve this Doc View Source RetryPolicyFactory(IOptionsSnapshot<FaultHandlingConfiguration>, IRetryBackoffCalculator, Func<ISyncPolicy, IAsyncPolicy, IRetryPolicy>, ILogger<RetryPolicyFactory>) Initializes a new instance of the RetryPolicyFactory class. Declaration public RetryPolicyFactory(IOptionsSnapshot<FaultHandlingConfiguration> configuration, IRetryBackoffCalculator backoffCalculator, Func<ISyncPolicy, IAsyncPolicy, IRetryPolicy> wrapPolicies, ILogger<RetryPolicyFactory> logger) Parameters Type Name Description IOptionsSnapshot < FaultHandlingConfiguration > configuration A snapshot of the FaultHandlingConfiguration used to configure policies returned by this factory. IRetryBackoffCalculator backoffCalculator An implementation of IRetryBackoffCalculator used to calculate backoff delay between retries. Func < ISyncPolicy , IAsyncPolicy , IRetryPolicy > wrapPolicies A factory that is used to combine a pair of synchronous and asynchronous Polly policies into an IRetryPolicy . ILogger < RetryPolicyFactory > logger The used to log retry attempts. Methods | Improve this Doc View Source Create(IEnumerable<Func<Exception, Boolean>>) Declaration public IRetryPolicy Create(IEnumerable<Func<Exception, bool>> exceptionPredicates) Parameters Type Name Description IEnumerable < Func < Exception , Boolean >> exceptionPredicates Returns Type Description IRetryPolicy Implements IRetryPolicyFactory Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Linq.Extensions.OneOf.EntityFramework.html": {
    "href": "api/FGS.Linq.Extensions.OneOf.EntityFramework.html",
    "title": "Namespace FGS.Linq.Extensions.OneOf.EntityFramework | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.OneOf.EntityFramework Classes OneOfQueryableExtensions Extends with a materialization methods that describe their failure conditions using discriminated unions."
  },
  "api/FGS.Linq.Expressions.ParameterReplacer.html": {
    "href": "api/FGS.Linq.Expressions.ParameterReplacer.html",
    "title": "Class ParameterReplacer | FoxGuard Foundation Libraries",
    "keywords": "Class ParameterReplacer Provides the ability to replace expression tree parameters with other expressions. Inheritance Object ParameterReplacer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Linq.Expressions Assembly : FGS.Linq.Expressions.dll Syntax public static class ParameterReplacer Remarks Taken and modified from: https://stackoverflow.com/questions/11159697/replace-parameter-in-lambda-expression . Methods | Improve this Doc View Source Replace<TInput, TOutput>(Expression<TInput>, ParameterExpression, Expression) Produces an expression identical to expression , except with all occurrences of the source parameter replaced with the target expression. Declaration public static Expression<TOutput> Replace<TInput, TOutput>(Expression<TInput> expression, ParameterExpression source, Expression target) Parameters Type Name Description Expression <TInput> expression The expression whose contents will be partially replaced. ParameterExpression source The expression which will be sought within expression and replaced with target . Expression target The expression which will be substituted for target when it is found within expression . Returns Type Description Expression <TOutput> An expression that has been transformed from expression in order to have all occurrences of source replaced with target . Type Parameters Name Description TInput The type of delegate that expression is an expression of. TOutput The type of delegate that the result will be an expression of."
  },
  "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.SerilogLoggerFactory.html": {
    "href": "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.SerilogLoggerFactory.html",
    "title": "Class SerilogLoggerFactory | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogLoggerFactory Implements so that we can inject Serilog Logger. Inheritance Object SerilogLoggerFactory Namespace : FGS.AspNetCore.Hosting.Extensions.Logging.Serilog Assembly : FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.dll Syntax public sealed class SerilogLoggerFactory : ILoggerFactory Remarks Registered with dependency injection as part of using SerilogWebHostBuilderExtensions . Methods | Improve this Doc View Source AddProvider(ILoggerProvider) Adds an to the logging system. Declaration public void AddProvider(ILoggerProvider provider) Parameters Type Name Description ILoggerProvider provider The . | Improve this Doc View Source CreateLogger(String) Creates a new instance. Declaration public Microsoft.Extensions.Logging.ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName The category name for messages produced by the logger. Returns Type Description Extensions.Logging.ILogger The . | Improve this Doc View Source Dispose() Disposes the provider. Declaration public void Dispose() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.ParseMethodInvokingModelBinder.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.ParseMethodInvokingModelBinder.html",
    "title": "Class ParseMethodInvokingModelBinder | FoxGuard Foundation Libraries",
    "keywords": "Class ParseMethodInvokingModelBinder An implementation of that defers its underlying implementation to a given static Parse method with a signature shaped like primitive Parse methods such as . Inheritance Object ParseMethodInvokingModelBinder Namespace : FGS.AspNetCore.Mvc.ModelBinding Assembly : FGS.AspNetCore.Mvc.ModelBinding.dll Syntax public class ParseMethodInvokingModelBinder : IModelBinder Constructors | Improve this Doc View Source ParseMethodInvokingModelBinder(MethodInfo) Creates a new instance of ParseMethodInvokingModelBinder . Declaration public ParseMethodInvokingModelBinder(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Represents the Parse method to which parsing logic is deferred to. Methods | Improve this Doc View Source BindModelAsync(ModelBindingContext) Declaration public Task BindModelAsync(ModelBindingContext bindingContext) Parameters Type Name Description ModelBindingContext bindingContext Returns Type Description Task Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Linq.Expressions.html": {
    "href": "api/FGS.Linq.Expressions.html",
    "title": "Namespace FGS.Linq.Expressions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Expressions Classes ParameterReplacer Provides the ability to replace expression tree parameters with other expressions. QueryProviderExtensions Provides extension methods for IQueryProvider ."
  },
  "api/FGS.FaultHandling.Primitives.Retry.html": {
    "href": "api/FGS.FaultHandling.Primitives.Retry.html",
    "title": "Namespace FGS.FaultHandling.Primitives.Retry | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Primitives.Retry Classes ExponentialRetryBackoffCalculator Calculates the duration of a wait between retries of an operation, using an exponential formula based on the retry attempt ordinal. NoOpRetryPolicy An implementation of IRetryPolicy that doesn't do anything. It doesn't even retry anything. ObservableRetryPolicyDecorator An implementation of IRetryPolicy that decorates an inner implementation and allows an observer to be aware of when an execution attempt (including retries) is performed. RetryPolicyCoordinator An implementation of IRetryPolicyCoordinator that satisfies requests for IRetryPolicy by checking first-time exceptions against IExceptionRetryPredicate instances, in order to determine whether or not a retrying retry policy is returned to the caller."
  },
  "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartHostingMiddleware.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartHostingMiddleware.html",
    "title": "Class DelayedStartHostingMiddleware | FoxGuard Foundation Libraries",
    "keywords": "Class DelayedStartHostingMiddleware Implements a configurable startup delay as IHostingMiddleware . Inheritance Object DelayedStartHostingMiddleware Implements IHostingMiddleware Namespace : FGS.Extensions.Hosting.Middleware.DelayedStart Assembly : FGS.Extensions.Hosting.Middleware.DelayedStart.dll Syntax public sealed class DelayedStartHostingMiddleware : object, IHostingMiddleware Constructors | Improve this Doc View Source DelayedStartHostingMiddleware(DelayedStartOptions) Intializes a new instance of the DelayedStartHostingMiddleware class, using the provided options as its configuration. Declaration public DelayedStartHostingMiddleware(DelayedStartOptions options) Parameters Type Name Description DelayedStartOptions options The configuration to use. Implements IHostingMiddleware Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.html": {
    "href": "api/FGS.FaultHandling.Abstractions.html",
    "title": "Namespace FGS.FaultHandling.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Abstractions Classes FaultHandlingConfiguration Fault-handling configuration."
  },
  "api/FGS.AspNetCore.Http.Extensions.AWS.ALB.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.AWS.ALB.html",
    "title": "Namespace FGS.AspNetCore.Http.Extensions.AWS.ALB | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Http.Extensions.AWS.ALB Classes AwsAlbApplicationBuilderExtensions Extends with functionality to configure middleware that forwards proxied HTTP headers."
  },
  "api/FGS.Tests.Support.TestCategories.AcceptanceAttribute.html": {
    "href": "api/FGS.Tests.Support.TestCategories.AcceptanceAttribute.html",
    "title": "Class AcceptanceAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class AcceptanceAttribute Inheritance Object AcceptanceAttribute Namespace : FGS.Tests.Support.TestCategories Assembly : FGS.Tests.Support.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class AcceptanceAttribute : CategoryAttribute Constructors | Improve this Doc View Source AcceptanceAttribute() Tests the full system to see whether the application's functionality satisfies the specification. Declaration public AcceptanceAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Collections.Extensions.Pagination.Abstractions.Page-1.html": {
    "href": "api/FGS.Collections.Extensions.Pagination.Abstractions.Page-1.html",
    "title": "Class Page<T> | FoxGuard Foundation Libraries",
    "keywords": "Class Page<T> Represents a page of items taken from a larger set of items. Inheritance Object Page<T> Implements IReadOnlyList <T> IReadOnlyCollection <T> IEnumerable <T> IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Collections.Extensions.Pagination.Abstractions Assembly : FGS.Collections.Extensions.Pagination.Abstractions.dll Syntax public sealed class Page<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of items in the page. Constructors | Improve this Doc View Source Page(IEnumerable<T>, PaginationSpecification, Boolean) Initializes a new instance of the Page<T> class. Declaration public Page(IEnumerable<T> items, PaginationSpecification paginationSpecification, bool hasNextPage) Parameters Type Name Description IEnumerable <T> items The items on this page. PaginationSpecification paginationSpecification The specification of how the items for this page were selected. Boolean hasNextPage Whether or not future pages are expected, given the original source and an incremented PaginationSpecification . Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source HasNextPage Gets a value indicating whether or not future pages are expected, given the original source and an incremented PaginationSpecification . Declaration public bool HasNextPage { get; } Property Value Type Description Boolean | Improve this Doc View Source IsFull Gets a value indicating whether or not this page has the maximum number of items per page allowed by the PaginationSpecification . Declaration public bool IsFull { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T | Improve this Doc View Source Items Gets the items on this page. Declaration public IReadOnlyList<T> Items { get; } Property Value Type Description IReadOnlyList <T> | Improve this Doc View Source PaginationSpecification Gets the specification of how the items for this page were selected. Declaration public PaginationSpecification PaginationSpecification { get; } Property Value Type Description PaginationSpecification Explicit Interface Implementations | Improve this Doc View Source IEnumerable<T>.GetEnumerator() Declaration IEnumerator<T> IEnumerable<T>.GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods EnumerableExtensions.Yield<T>(T) OneOfQueryExpressionExtensions.SelectMany<TSource, TSuccess, TError, TResult>(IEnumerable<TSource>, Func<TSource, OneOf<TSuccess, TError>>, Func<TSource, TSuccess, TResult>) EnumerableExtensions.DistinctBy<T, TIdentity>(IEnumerable<T>, Func<T, TIdentity>)"
  },
  "api/FGS.Linq.Extensions.Pagination.Abstractions.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.Abstractions.html",
    "title": "Namespace FGS.Linq.Extensions.Pagination.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.Pagination.Abstractions Classes PageQuery<T> Represents a query of a page of items taken from a larger set of items."
  },
  "api/FGS.Tests.Support.AutoFixtureExtensions.html": {
    "href": "api/FGS.Tests.Support.AutoFixtureExtensions.html",
    "title": "Class AutoFixtureExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutoFixtureExtensions Extends with functionality to improve its ergonomics. Inheritance Object AutoFixtureExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Tests.Support Assembly : FGS.Tests.Support.dll Syntax public static class AutoFixtureExtensions Methods | Improve this Doc View Source CreateInstanceOfType(Fixture, Type) Creates an instance of the given type , using the given fixture . Declaration public static object CreateInstanceOfType(this Fixture fixture, Type type) Parameters Type Name Description Fixture fixture The to use to create the result. Type type The Type of result to create. Returns Type Description Object An instance of the type represented by type . | Improve this Doc View Source CreateIntBetween(Fixture, Int32, Int32) Creates a random Int32 , that is clamped to be no less than minValue and no greater than maxValue . Declaration public static int CreateIntBetween(this Fixture fixture, int minValue, int maxValue) Parameters Type Name Description Fixture fixture The to use to create the result. Int32 minValue The lower-bound of possible result numbers. Int32 maxValue The upper-bound of possible result numbers. Returns Type Description Int32 A random Int32 . | Improve this Doc View Source CreateIntOfMinValue(Fixture, Int32) Creates a random Int32 that is clamped to be no less than minValue . Declaration public static int CreateIntOfMinValue(this Fixture fixture, int minValue) Parameters Type Name Description Fixture fixture The to use to create the result. Int32 minValue The lower-bound of possible result numbers. Returns Type Description Int32 A random Int32 . | Improve this Doc View Source CreateSmallPositiveRandomNumber(Fixture) Creates a random small positive UInt16 , no larger than 15 . Declaration public static ushort CreateSmallPositiveRandomNumber(this Fixture fixture) Parameters Type Name Description Fixture fixture The to use to create the result. Returns Type Description UInt16 A random small positive number. | Improve this Doc View Source CreateTinyPositiveRandomNumber(Fixture) Creates a random tiny positive UInt16 , no larger than 7 . Declaration public static ushort CreateTinyPositiveRandomNumber(this Fixture fixture) Parameters Type Name Description Fixture fixture The to use to create the result. Returns Type Description UInt16 A random tiny positive number. | Improve this Doc View Source CreateUndefinedEnumValue<TEnum>(Fixture) Creates a random value purporting to be a value of the enum TEnum , but in fact falls outside the range of the enum. Declaration public static TEnum CreateUndefinedEnumValue<TEnum>(this Fixture fixture) where TEnum : struct Parameters Type Name Description Fixture fixture The to use to create the result. Returns Type Description TEnum A value purporting to be a value of the enum TEnum . Type Parameters Name Description TEnum The enum to return the result cast to."
  },
  "api/FGS.Configuration.Abstractions.IConnectionString.html": {
    "href": "api/FGS.Configuration.Abstractions.IConnectionString.html",
    "title": "Interface IConnectionString | FoxGuard Foundation Libraries",
    "keywords": "Interface IConnectionString Represents a pair of connection string and provider name. Namespace : FGS.Configuration.Abstractions Assembly : FGS.Configuration.Abstractions.dll Syntax public interface IConnectionString Properties | Improve this Doc View Source ConnectionString Gets the value of the connection string. Declaration string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source ProviderName Gets the name of the ADO.NET provider to be used for creating connections for the given connection string value. Declaration string ProviderName { get; } Property Value Type Description String Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.Base64UrlEncodedByteArrayModelBinder.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.Base64UrlEncodedByteArrayModelBinder.html",
    "title": "Class Base64UrlEncodedByteArrayModelBinder | FoxGuard Foundation Libraries",
    "keywords": "Class Base64UrlEncodedByteArrayModelBinder An implementation of for base-64 encoded byte arrays that supports both of ASP.NET Core's contemporary and legacy implementations of URL encoding of such. Inheritance Object Base64UrlEncodedByteArrayModelBinder Namespace : FGS.AspNetCore.Mvc.ModelBinding Assembly : FGS.AspNetCore.Mvc.ModelBinding.dll Syntax public class Base64UrlEncodedByteArrayModelBinder : IModelBinder Methods | Improve this Doc View Source BindModelAsync(ModelBindingContext) Declaration public Task BindModelAsync(ModelBindingContext bindingContext) Parameters Type Name Description ModelBindingContext bindingContext Returns Type Description Task Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.AutoFixture.Mocking.html": {
    "href": "api/FGS.Tests.Support.AutoFixture.Mocking.html",
    "title": "Namespace FGS.Tests.Support.AutoFixture.Mocking | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.AutoFixture.Mocking Classes AutoFixtureExtensions Extends with functionality for registering mocks."
  },
  "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostSpy.html": {
    "href": "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostSpy.html",
    "title": "Class HostSpy | FoxGuard Foundation Libraries",
    "keywords": "Class HostSpy Provides a singleton-bound mechanism for a deferred resolution of to have its invocations spied upon. Inheritance Object HostSpy Namespace : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking Assembly : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.dll Syntax public sealed class HostSpy : IHost Remarks Not thread-safe. Examples In your test fixture, register this class with your dependency resolution mechanism of choice. Then, be sure to call Reset() between tests. Constructors | Improve this Doc View Source HostSpy(IServiceProvider) Initializes a new instance of the HostSpy class. Declaration public HostSpy(IServiceProvider services) Parameters Type Name Description IServiceProvider services The services that should be exposed by the . Properties | Improve this Doc View Source Services Declaration public IServiceProvider Services { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source StartAsyncCallCount Gets the number of times that has been invoked. Declaration public static int StartAsyncCallCount { get; } Property Value Type Description Int32 | Improve this Doc View Source StopAsyncCallCount Gets the number of times that has been invoked. Declaration public static int StopAsyncCallCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Reset() Resets the invocation counters. Declaration public static void Reset() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.TestCategories.IntegrationAttribute.html": {
    "href": "api/FGS.Tests.Support.TestCategories.IntegrationAttribute.html",
    "title": "Class IntegrationAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class IntegrationAttribute Inheritance Object IntegrationAttribute Namespace : FGS.Tests.Support.TestCategories Assembly : FGS.Tests.Support.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class IntegrationAttribute : CategoryAttribute Constructors | Improve this Doc View Source IntegrationAttribute() Combines units of code and tests that the resulting combination functions correctly. Declaration public IntegrationAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.Abstractions.IInterceptor.html": {
    "href": "api/FGS.Interception.Abstractions.IInterceptor.html",
    "title": "Interface IInterceptor | FoxGuard Foundation Libraries",
    "keywords": "Interface IInterceptor Defines a discrete unit of behavior executed as part of the process of intercepting the execution of a member of a type. Namespace : FGS.Interception.Abstractions Assembly : FGS.Interception.Abstractions.dll Syntax public interface IInterceptor Methods | Improve this Doc View Source Intercept(IInvocation) The implementation that is invoked to intercept a member with a synchronous signature. Declaration void Intercept(IInvocation invocation) Parameters Type Name Description IInvocation invocation Represents a method invocation that has been intercepted. | Improve this Doc View Source InterceptAsync(IAsyncInvocation) The implementation that is invoked to intercept a member with an asynchronous signature. Declaration Task InterceptAsync(IAsyncInvocation invocation) Parameters Type Name Description IAsyncInvocation invocation Represents an asynchronous method invocation that has been intercepted. Returns Type Description Task A Task that contains the continuation remaining from end of the intercepted invocation. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.Interceptors.FaultHandling.html": {
    "href": "api/FGS.Autofac.Interceptors.FaultHandling.html",
    "title": "Namespace FGS.Autofac.Interceptors.FaultHandling | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.Interceptors.FaultHandling Classes FaultHandlingModule Registers interception such that types annotated with RetryOnFaultAttribute will have their virtual members intercepted by RetryInterceptor , which will retry failed operations with an exponential back-off calculated by ExponentialRetryBackoffCalculator . Assumes that zero or more instances of IExceptionRetryPredicate are registered, which help shape the retry behavior. Assumes an is resolvable, with a section named FaultHandling that is mappable to FaultHandlingConfiguration ."
  },
  "api/FGS.Linq.Extensions.AutoMapper.html": {
    "href": "api/FGS.Linq.Extensions.AutoMapper.html",
    "title": "Namespace FGS.Linq.Extensions.AutoMapper | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.AutoMapper Classes AutoMapperQueryableExtensions Extends IQueryable<T> with the ability to transform it into a query of a different type, using AutoMapper."
  },
  "api/FGS.Autofac.CompositionRoot.Abstractions.IModulesProvider.html": {
    "href": "api/FGS.Autofac.CompositionRoot.Abstractions.IModulesProvider.html",
    "title": "Interface IModulesProvider | FoxGuard Foundation Libraries",
    "keywords": "Interface IModulesProvider Represents the ability to enumerate Autofac modules that should be registered with an Autofac container builder. Namespace : FGS.Autofac.CompositionRoot.Abstractions Assembly : FGS.Autofac.CompositionRoot.Abstractions.dll Syntax public interface IModulesProvider Methods | Improve this Doc View Source GetModules() Gets the Autofac modules that should be registered with an Autofac container builder. Declaration IEnumerable<IModule> GetModules() Returns Type Description IEnumerable < IModule > The Autofac modules that should be registered with an Autofac container builder. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.ComponentModel.DataAnnotations.SafePhoneNumberAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.SafePhoneNumberAttribute.html",
    "title": "Class SafePhoneNumberAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class SafePhoneNumberAttribute Safely validates a phone number. Inheritance Object SafePhoneNumberAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax public sealed class SafePhoneNumberAttribute : DataTypeAttribute Remarks Enforces a timeout when matching a phone number to the regex to prevent a denial of service attack. See https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS for more info. Constructors | Improve this Doc View Source SafePhoneNumberAttribute() Declaration public SafePhoneNumberAttribute() Methods | Improve this Doc View Source IsValid(Object) Determines whether the specified value matches the pattern of a phone number. Declaration public override bool IsValid(object value) Parameters Type Name Description Object value The value to validate. Returns Type Description Boolean true if the specified value is valid or null; otherwise, false. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.RequiredIfTrueValidationAdapterProvider.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.RequiredIfTrueValidationAdapterProvider.html",
    "title": "Class RequiredIfTrueValidationAdapterProvider | FoxGuard Foundation Libraries",
    "keywords": "Class RequiredIfTrueValidationAdapterProvider Wire this into dependency injection in order for RequiredIfTrueAttribute to be adapted to have its correct implementation. Inheritance Object RequiredIfTrueValidationAdapterProvider Implements IValidationAttributeAdapterProvider Namespace : FGS.AspNetCore.Mvc.ModelBinding.Validation Assembly : FGS.AspNetCore.Mvc.ModelBinding.Validation.dll Syntax public class RequiredIfTrueValidationAdapterProvider : ValidationAttributeAdapterProvider, IValidationAttributeAdapterProvider Remarks Taken and modified from: https://github.com/rpgkaiser/FoolProof.Core/blob/268c8afc60dc020089ea03920b1499162b0987b4/FoolProof.Core/Utilities/ValidationAdapterProvider.cs . Examples services.AddSingleton<IValidationAttributeAdapterProvider, RequiredIfTrueValidationAdapterProvider>(); Implements IValidationAttributeAdapterProvider Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.Retry.IExceptionRetryPredicate.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.IExceptionRetryPredicate.html",
    "title": "Interface IExceptionRetryPredicate | FoxGuard Foundation Libraries",
    "keywords": "Interface IExceptionRetryPredicate Represents conditional logic as to whether or not an operation that failed from a given exception should be retried. Namespace : FGS.FaultHandling.Abstractions.Retry Assembly : FGS.FaultHandling.Abstractions.dll Syntax public interface IExceptionRetryPredicate Methods | Improve this Doc View Source ShouldRetry(Exception) Determines whether or not an operation that failed from ex should be retried. Declaration bool ShouldRetry(Exception ex) Parameters Type Name Description Exception ex The Exception that operation failed with. Returns Type Description Boolean true if the operation should be retried, false if it should not be retried. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.TestCategories.StaticAnalysisAttribute.html": {
    "href": "api/FGS.Tests.Support.TestCategories.StaticAnalysisAttribute.html",
    "title": "Class StaticAnalysisAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class StaticAnalysisAttribute Inheritance Object StaticAnalysisAttribute Namespace : FGS.Tests.Support.TestCategories Assembly : FGS.Tests.Support.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class StaticAnalysisAttribute : CategoryAttribute Constructors | Improve this Doc View Source StaticAnalysisAttribute() Tests code for a given quality by analyzing its structure instead of executing it. Declaration public StaticAnalysisAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.Interception.DynamicProxy.CustomInterceptionModuleBase.html": {
    "href": "api/FGS.Autofac.Interception.DynamicProxy.CustomInterceptionModuleBase.html",
    "title": "Class CustomInterceptionModuleBase | FoxGuard Foundation Libraries",
    "keywords": "Class CustomInterceptionModuleBase An abstraction representing an Autofac module that dynamically wires up interceptors to resolved types. Inheritance Object CustomInterceptionModuleBase AttributeBasedInterceptionModule<TAttribute, TInterceptor> Namespace : FGS.Autofac.Interception.DynamicProxy Assembly : FGS.Autofac.Interception.DynamicProxy.dll Syntax public abstract class CustomInterceptionModuleBase : Module Methods | Improve this Doc View Source AttachToComponentRegistration(IComponentRegistry, IComponentRegistration) Declaration protected override sealed void AttachToComponentRegistration(IComponentRegistry componentRegistry, IComponentRegistration registration) Parameters Type Name Description IComponentRegistry componentRegistry IComponentRegistration registration | Improve this Doc View Source CreateProxyGenerationHook(Type) Creates a for the type originalImplementationType . Declaration protected abstract IProxyGenerationHook CreateProxyGenerationHook(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType The type whose instances are being intercepted. Returns Type Description IProxyGenerationHook | Improve this Doc View Source DescribeInterceptorServices(Type) Determines the set of that represent distinctly resolvable instances of that are meant to intercept instances of originalImplementationType . Declaration protected abstract IEnumerable<Service> DescribeInterceptorServices(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType The type whose instances are being intercepted. Returns Type Description IEnumerable < Service > | Improve this Doc View Source ShouldInterceptType(Type) Determines whether or not instances of originalImplementationType should be intercepted. Declaration protected abstract bool ShouldInterceptType(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType The type whose instances might be intercepted. Returns Type Description Boolean Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.FakedServiceScopeHostBuilderFactory.html": {
    "href": "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.FakedServiceScopeHostBuilderFactory.html",
    "title": "Class FakedServiceScopeHostBuilderFactory | FoxGuard Foundation Libraries",
    "keywords": "Class FakedServiceScopeHostBuilderFactory Provides the ability to create a fake which is robust enough for common testing scenarios. Inheritance Object FakedServiceScopeHostBuilderFactory Namespace : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking Assembly : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.dll Syntax public static class FakedServiceScopeHostBuilderFactory : object Methods | Improve this Doc View Source Create(Action<IServiceCollection>) Creates a fake which is robust enough for common testing scenarios. Declaration public static IHostBuilder Create(Action<IServiceCollection> configureServices = null) Parameters Type Name Description Action < IServiceCollection > configureServices An optional parameter to allow callers to configure additional services that will participate in dependency injection. Returns Type Description IHostBuilder A fake which is robust enough for common testing scenarios."
  },
  "api/FGS.Linq.Extensions.Pagination.Abstractions.PageQuery-1.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.Abstractions.PageQuery-1.html",
    "title": "Class PageQuery<T> | FoxGuard Foundation Libraries",
    "keywords": "Class PageQuery<T> Represents a query of a page of items taken from a larger set of items. Inheritance Object PageQuery<T> Namespace : FGS.Linq.Extensions.Pagination.Abstractions Assembly : FGS.Linq.Extensions.Pagination.Abstractions.dll Syntax public class PageQuery<T> : object Type Parameters Name Description T The type of items in the page. Constructors | Improve this Doc View Source PageQuery(IQueryable<T>, PaginationSpecification, IQueryable<Boolean>) Initializes a new instance of the PageQuery<T> class. Declaration public PageQuery(IQueryable<T> items, PaginationSpecification paginationSpecification, IQueryable<bool> hasNextPage) Parameters Type Name Description IQueryable <T> items The query of the items on this page. PaginationSpecification paginationSpecification The specification of how the items for this page are selected. IQueryable < Boolean > hasNextPage A query of single evaluating whether or not future pages are expected, given the original source and an incremented PaginationSpecification . Properties | Improve this Doc View Source HasNextPage Gets a query that evaluates a single value that indicates whether or not future pages are expected, given the original source and an incremented PaginationSpecification . Declaration public IQueryable<bool> HasNextPage { get; } Property Value Type Description IQueryable < Boolean > | Improve this Doc View Source Items Gets a query of the items on this page. Declaration public IQueryable<T> Items { get; } Property Value Type Description IQueryable <T> | Improve this Doc View Source PaginationSpecification Gets the specification of how the items for this page are selected. Declaration public PaginationSpecification PaginationSpecification { get; } Property Value Type Description PaginationSpecification Extension Methods PageQueryExtensions.MaterializeAsync<T>(PageQuery<T>) PageQueryExtensions.MaterializeAsync<T>(PageQuery<T>) EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Rx.Extensions.html": {
    "href": "api/FGS.Rx.Extensions.html",
    "title": "Namespace FGS.Rx.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Rx.Extensions Classes HistoricalReactiveProcessor Represents the capability to take a collection of timestamped events, process it with Rx operators, and await the materialization of the result back into a collection."
  },
  "api/FGS.Interception.DynamicProxy.InvocationAdapter.html": {
    "href": "api/FGS.Interception.DynamicProxy.InvocationAdapter.html",
    "title": "Class InvocationAdapter | FoxGuard Foundation Libraries",
    "keywords": "Class InvocationAdapter Inheritance Object InvocationAdapterBase InvocationAdapter Implements IInvocation IInvocationCommon Inherited Members InvocationAdapterBase.Adapted InvocationAdapterBase.GetArgumentValue(Int32) InvocationAdapterBase.GetConcreteMethod() InvocationAdapterBase.GetConcreteMethodInvocationTarget() InvocationAdapterBase.SetArgumentValue(Int32, Object) InvocationAdapterBase.Arguments InvocationAdapterBase.GenericArguments InvocationAdapterBase.InvocationTarget InvocationAdapterBase.Method InvocationAdapterBase.MethodInvocationTarget InvocationAdapterBase.Proxy InvocationAdapterBase.ReturnValue InvocationAdapterBase.TargetType Namespace : FGS.Interception.DynamicProxy Assembly : FGS.Interception.DynamicProxy.dll Syntax public sealed class InvocationAdapter : InvocationAdapterBase, IInvocation, IInvocationCommon Constructors | Improve this Doc View Source InvocationAdapter(Castle.DynamicProxy.IInvocation) Initializes a new instance of the InvocationAdapter class. Declaration public InvocationAdapter(Castle.DynamicProxy.IInvocation adapted) Parameters Type Name Description Castle.DynamicProxy.IInvocation adapted The underlying implementation that is being adapted. Methods | Improve this Doc View Source Proceed() Proceeds the call to the next interceptor in line, and ultimately to the target method. Declaration public void Proceed() Remarks To get or set the invocation return value, use the ReturnValue property. Since interface proxies without a target don't have the target implementation to proceed to, it is important, that the last interceptor does not call this method, otherwise a NotImplementedException will be thrown. Implements IInvocation IInvocationCommon Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.Middleware.DelayedStart.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.DelayedStart.html",
    "title": "Namespace FGS.Extensions.Hosting.Middleware.DelayedStart | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Hosting.Middleware.DelayedStart Classes DelayedStartHostBuilderExtensions Extends with functionality for configuring a delayed startup. DelayedStartHostingMiddleware Implements a configurable startup delay as IHostingMiddleware . DelayedStartOptions Provides configuration options for DelayedStartHostingMiddleware ."
  },
  "api/FGS.FaultHandling.Primitives.Retry.NoOpRetryPolicy.html": {
    "href": "api/FGS.FaultHandling.Primitives.Retry.NoOpRetryPolicy.html",
    "title": "Class NoOpRetryPolicy | FoxGuard Foundation Libraries",
    "keywords": "Class NoOpRetryPolicy An implementation of IRetryPolicy that doesn't do anything. It doesn't even retry anything. Inheritance Object NoOpRetryPolicy Implements IRetryPolicy Namespace : FGS.FaultHandling.Primitives.Retry Assembly : FGS.FaultHandling.Primitives.dll Syntax public sealed class NoOpRetryPolicy : object, IRetryPolicy Methods | Improve this Doc View Source Execute(Action) Declaration public void Execute(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Execute<TResult>(Func<TResult>) Declaration public TResult Execute<TResult>(Func<TResult> action) Parameters Type Name Description Func <TResult> action Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ExecuteAsync(Func<Task>) Declaration public Task ExecuteAsync(Func<Task> action) Parameters Type Name Description Func < Task > action Returns Type Description Task | Improve this Doc View Source ExecuteAsync<TResult>(Func<Task<TResult>>) Declaration public Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> action) Parameters Type Name Description Func < Task <TResult>> action Returns Type Description Task <TResult> Type Parameters Name Description TResult Implements IRetryPolicy Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Primitives.Retry.RetryPolicyCoordinator.html": {
    "href": "api/FGS.FaultHandling.Primitives.Retry.RetryPolicyCoordinator.html",
    "title": "Class RetryPolicyCoordinator | FoxGuard Foundation Libraries",
    "keywords": "Class RetryPolicyCoordinator An implementation of IRetryPolicyCoordinator that satisfies requests for IRetryPolicy by checking first-time exceptions against IExceptionRetryPredicate instances, in order to determine whether or not a retrying retry policy is returned to the caller. Inheritance Object RetryPolicyCoordinator Implements IRetryPolicyCoordinator Namespace : FGS.FaultHandling.Primitives.Retry Assembly : FGS.FaultHandling.Primitives.dll Syntax public sealed class RetryPolicyCoordinator : object, IRetryPolicyCoordinator Constructors | Improve this Doc View Source RetryPolicyCoordinator(IRetryPolicyFactory, Func<NoOpRetryPolicy>, IEnumerable<IExceptionRetryPredicate>) Initializes a new instance of the RetryPolicyCoordinator class. Declaration public RetryPolicyCoordinator(IRetryPolicyFactory retryPolicyFactory, Func<NoOpRetryPolicy> noOpFactory, IEnumerable<IExceptionRetryPredicate> exceptionPredicates) Parameters Type Name Description IRetryPolicyFactory retryPolicyFactory A factory that is used to retrieve instances of IRetryPolicy that can be used to retry operations. Func < NoOpRetryPolicy > noOpFactory A factory that is used to retrieve instances of NoOpRetryPolicy which can be used to prevent operations from being retried. IEnumerable < IExceptionRetryPredicate > exceptionPredicates The conditions indicating whether or not an operation that failed from a given exception should be retried. Methods | Improve this Doc View Source RequestPolicy() Creates an instance of IRetryPolicy . Declaration public IRetryPolicy RequestPolicy() Returns Type Description IRetryPolicy Returns an IRetryPolicy . Implements IRetryPolicyCoordinator Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.DynamicProxy.InvocationAdapterBase.html": {
    "href": "api/FGS.Interception.DynamicProxy.InvocationAdapterBase.html",
    "title": "Class InvocationAdapterBase | FoxGuard Foundation Libraries",
    "keywords": "Class InvocationAdapterBase Inheritance Object InvocationAdapterBase AsyncInvocationAdapter InvocationAdapter Implements IInvocationCommon Namespace : FGS.Interception.DynamicProxy Assembly : FGS.Interception.DynamicProxy.dll Syntax public abstract class InvocationAdapterBase : object, IInvocationCommon Properties | Improve this Doc View Source Adapted Declaration protected Castle.DynamicProxy.IInvocation Adapted { get; } Property Value Type Description Castle.DynamicProxy.IInvocation | Improve this Doc View Source Arguments Declaration public object[] Arguments { get; } Property Value Type Description Object [] | Improve this Doc View Source GenericArguments Declaration public Type[] GenericArguments { get; } Property Value Type Description Type [] | Improve this Doc View Source InvocationTarget Declaration public object InvocationTarget { get; } Property Value Type Description Object | Improve this Doc View Source Method Declaration public MethodInfo Method { get; } Property Value Type Description MethodInfo | Improve this Doc View Source MethodInvocationTarget Declaration public MethodInfo MethodInvocationTarget { get; } Property Value Type Description MethodInfo | Improve this Doc View Source Proxy Declaration public object Proxy { get; } Property Value Type Description Object | Improve this Doc View Source ReturnValue Declaration public object ReturnValue { get; set; } Property Value Type Description Object | Improve this Doc View Source TargetType Declaration public Type TargetType { get; } Property Value Type Description Type Methods | Improve this Doc View Source GetArgumentValue(Int32) Declaration public object GetArgumentValue(int index) Parameters Type Name Description Int32 index Returns Type Description Object | Improve this Doc View Source GetConcreteMethod() Declaration public MethodInfo GetConcreteMethod() Returns Type Description MethodInfo | Improve this Doc View Source GetConcreteMethodInvocationTarget() Declaration public MethodInfo GetConcreteMethodInvocationTarget() Returns Type Description MethodInfo | Improve this Doc View Source SetArgumentValue(Int32, Object) Declaration public void SetArgumentValue(int index, object value) Parameters Type Name Description Int32 index Object value Implements IInvocationCommon Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.EntityFrameworkHealthCheck-1.html": {
    "href": "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.EntityFrameworkHealthCheck-1.html",
    "title": "Class EntityFrameworkHealthCheck<TDbContext> | FoxGuard Foundation Libraries",
    "keywords": "Class EntityFrameworkHealthCheck<TDbContext> Inheritance Object EntityFrameworkHealthCheck<TDbContext> Namespace : FGS.Extensions.Diagnostics.HealthChecks.EntityFramework Assembly : FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.dll Syntax public sealed class EntityFrameworkHealthCheck<TDbContext> : IHealthCheck where TDbContext : DbContext Type Parameters Name Description TDbContext Methods | Improve this Doc View Source CheckHealthAsync(HealthCheckContext, CancellationToken) Declaration public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HealthCheckContext context CancellationToken cancellationToken Returns Type Description Task < HealthCheckResult > Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.Middleware.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.html",
    "title": "Namespace FGS.Extensions.Hosting.Middleware | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Hosting.Middleware Classes HostBuilderExtensions Extends with functionality for configuring the usage of instances of IHostingMiddleware to intercept calls to the later-built ."
  },
  "api/FGS.Autofac.Options.OptionsContainerBuilderExtensions.html": {
    "href": "api/FGS.Autofac.Options.OptionsContainerBuilderExtensions.html",
    "title": "Class OptionsContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class OptionsContainerBuilderExtensions Extension methods for adding Options services to the Autofac-based DI container. Inheritance Object OptionsContainerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Autofac.Options Assembly : FGS.Autofac.Options.dll Syntax public static class OptionsContainerBuilderExtensions Remarks Taken and modified from: https://github.com/aspnet/Extensions/blob/e311a440d51cddd8f645160d9e27a574c77955a1/src/Options/Options/src/OptionsServiceCollectionExtensions.cs . Methods | Improve this Doc View Source AddOptions(ContainerBuilder) Adds services required for using Options. Declaration public static ContainerBuilder AddOptions(this ContainerBuilder containerBuilder) Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Returns Type Description ContainerBuilder The so that additional calls can be chained. | Improve this Doc View Source AddOptions<TOptions>(ContainerBuilder) Gets an Options builder that forwards Configure calls for the same TOptions to the underlying service collection. Declaration public static AutofacOptionsBuilder<TOptions> AddOptions<TOptions>(this ContainerBuilder containerBuilder) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Returns Type Description AutofacOptionsBuilder <TOptions> The so that configure calls can be chained in it. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source AddOptions<TOptions>(ContainerBuilder, String) Gets an Options builder that forwards Configure calls for the same named TOptions to the underlying service collection. Declaration public static AutofacOptionsBuilder<TOptions> AddOptions<TOptions>(this ContainerBuilder containerBuilder, string name) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. Returns Type Description AutofacOptionsBuilder <TOptions> The so that configure calls can be chained in it. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, Action<TOptions>) Registers an action used to configure a particular type of Options. Note: These are run before all PostConfigure<TOptions>(ContainerBuilder, Action<TOptions>) . Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, String, Action<TOptions>) Registers an action used to configure a particular type of Options. Note: These are run before all PostConfigure<TOptions>(ContainerBuilder, Action<TOptions>) . Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, string name, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source ConfigureAll<TOptions>(ContainerBuilder, Action<TOptions>) Registers an action used to configure all instances of a particular type of Options. Declaration public static ContainerBuilder ConfigureAll<TOptions>(this ContainerBuilder containerBuilder, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source ConfigureOptions(ContainerBuilder, Object) Registers an object that will have all of its I[Post]ConfigureOptions registered. Declaration public static ContainerBuilder ConfigureOptions(this ContainerBuilder containerBuilder, object configureInstance) Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Object configureInstance The instance that will configure Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. | Improve this Doc View Source ConfigureOptions(ContainerBuilder, Type) Registers a type that will have all of its I[Post]ConfigureOptions registered. Declaration public static ContainerBuilder ConfigureOptions(this ContainerBuilder containerBuilder, Type configureType) Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Type configureType The type that will configure Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. | Improve this Doc View Source ConfigureOptions<TConfigureOptions>(ContainerBuilder) Registers a type that will have all of its I[Post]ConfigureOptions registered. Declaration public static ContainerBuilder ConfigureOptions<TConfigureOptions>(this ContainerBuilder containerBuilder) where TConfigureOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TConfigureOptions The type that will configure Options. | Improve this Doc View Source PostConfigure<TOptions>(ContainerBuilder, Action<TOptions>) Registers an action used to initialize a particular type of Options. Note: These are run after all Configure<TOptions>(ContainerBuilder, Action<TOptions>) . Declaration public static ContainerBuilder PostConfigure<TOptions>(this ContainerBuilder containerBuilder, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configured. | Improve this Doc View Source PostConfigure<TOptions>(ContainerBuilder, String, Action<TOptions>) Registers an action used to configure a particular type of Options. Note: These are run after all Configure<TOptions>(ContainerBuilder, Action<TOptions>) . Declaration public static ContainerBuilder PostConfigure<TOptions>(this ContainerBuilder containerBuilder, string name, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configure. | Improve this Doc View Source PostConfigureAll<TOptions>(ContainerBuilder, Action<TOptions>) Registers an action used to post configure all instances of a particular type of Options. Note: These are run after all Configure<TOptions>(ContainerBuilder, Action<TOptions>) . Declaration public static ContainerBuilder PostConfigureAll<TOptions>(this ContainerBuilder containerBuilder, Action<TOptions> configureOptions) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The Options type to be configured."
  },
  "api/FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac.AutofacWebHostBuilderExtensions.html": {
    "href": "api/FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac.AutofacWebHostBuilderExtensions.html",
    "title": "Class AutofacWebHostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutofacWebHostBuilderExtensions Extension methods for the interface. Inheritance Object AutofacWebHostBuilderExtensions Namespace : FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac Assembly : FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac.dll Syntax public static class AutofacWebHostBuilderExtensions : object Remarks Taken and modified from: https://github.com/autofac/Autofac.AspNetCore/blob/e8254995519b96c568de194371edad4d2c20db0e/src/Autofac.Integration.AspNetCore/AutofacWebHostBuilderExtensions.cs . Methods | Improve this Doc View Source UseAutofacWithModulesProvider<TModulesProvider>(IWebHostBuilder, Action<IModule>, Action<ContainerBuilder>) Adds a custom implementation of Autofac's to the being built by builder . Declaration public static IWebHostBuilder UseAutofacWithModulesProvider<TModulesProvider>(this IWebHostBuilder builder, Action<IModule> forEachModule = null, Action<ContainerBuilder> configurationAction = null) where TModulesProvider : IModulesProvider, new() Parameters Type Name Description IWebHostBuilder builder The instance being configured. Action < IModule > forEachModule An optional action used to configure each being added to the container. Action < ContainerBuilder > configurationAction An optional action used to configure the container. Returns Type Description IWebHostBuilder The existing instance. Type Parameters Name Description TModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered. Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseAutofacWithModulesProvider<MyAutofacModulesProvider>() .UseStartup<Startup>();"
  },
  "api/FGS.Tests.Support.AutoFixtureFactory.html": {
    "href": "api/FGS.Tests.Support.AutoFixtureFactory.html",
    "title": "Class AutoFixtureFactory | FoxGuard Foundation Libraries",
    "keywords": "Class AutoFixtureFactory Provides a factory method for creating a configured . Inheritance Object AutoFixtureFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Tests.Support Assembly : FGS.Tests.Support.dll Syntax public static class AutoFixtureFactory Methods | Improve this Doc View Source Create() Creates a new instance of , which has been configured with , had removed, and had added to it. Declaration public static Fixture Create() Returns Type Description Fixture A configured instance of ."
  },
  "api/FGS.Collections.Extensions.Pagination.Abstractions.PaginationSpecification.html": {
    "href": "api/FGS.Collections.Extensions.Pagination.Abstractions.PaginationSpecification.html",
    "title": "Struct PaginationSpecification | FoxGuard Foundation Libraries",
    "keywords": "Struct PaginationSpecification Specifies how a set of items can be subdivided into sequential pages, and then a specific page of them individually selected. Implements IEquatable < PaginationSpecification > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : FGS.Collections.Extensions.Pagination.Abstractions Assembly : FGS.Collections.Extensions.Pagination.Abstractions.dll Syntax public struct PaginationSpecification : IEquatable<PaginationSpecification> Constructors | Improve this Doc View Source PaginationSpecification(Int32, Int32) Initializes a new instance of the PaginationSpecification struct. Declaration public PaginationSpecification(int pageNumber, int pageSize) Parameters Type Name Description Int32 pageNumber The 0-based ordinal of the page to be selected. Int32 pageSize The size of pages to subdivide the source into. Properties | Improve this Doc View Source PageNumber Gets the 0-based ordinal of the page to be selected. Declaration public int PageNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source PageSize Gets the size of pages to subdivide the source into. Declaration public int PageSize { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Equals(PaginationSpecification) Declaration public bool Equals(PaginationSpecification other) Parameters Type Name Description PaginationSpecification other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source FirstPageOfSize(Int32) Initializes and returns a new instance of the PaginationSpecification struct, pointing to the first page and where pages are of size pageSize . Declaration public static PaginationSpecification FirstPageOfSize(int pageSize) Parameters Type Name Description Int32 pageSize The size of pages to subdivide the source into. Returns Type Description PaginationSpecification A newly initialized instance of the PaginationSpecification struct. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Next() Generates the PaginationSpecification that points to the next page of the same size as the current one. Declaration public PaginationSpecification Next() Returns Type Description PaginationSpecification A newly initialized instance of the PaginationSpecification struct, which points at the next page. | Improve this Doc View Source Previous() Generates the PaginationSpecification that points to the previous page of the same size as the current one, or null if this is the first page. Declaration public PaginationSpecification? Previous() Returns Type Description Nullable < PaginationSpecification > A newly initialized instance of the PaginationSpecification struct, which points at the previous page if one exists, or null if it does not. Operators | Improve this Doc View Source Equality(PaginationSpecification, PaginationSpecification) Checks two instances of PaginationSpecification for equality. Declaration public static bool operator ==(PaginationSpecification left, PaginationSpecification right) Parameters Type Name Description PaginationSpecification left PaginationSpecification right Returns Type Description Boolean A value indicating whether or not the two instances of PaginationSpecification are equal to each other. | Improve this Doc View Source Inequality(PaginationSpecification, PaginationSpecification) Checks two instances of PaginationSpecification for equality, and returns the opposite of such. Declaration public static bool operator !=(PaginationSpecification left, PaginationSpecification right) Parameters Type Name Description PaginationSpecification left PaginationSpecification right Returns Type Description Boolean A value indicating the opposite of whether or not the two instances of PaginationSpecification are equal to each other. Implements System.IEquatable<T> Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.AutoFixture.Mocking.Options.html": {
    "href": "api/FGS.Tests.Support.AutoFixture.Mocking.Options.html",
    "title": "Namespace FGS.Tests.Support.AutoFixture.Mocking.Options | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.AutoFixture.Mocking.Options Classes AutoFixtureExtensions Extends with the ability to register mocked implementations of and friends."
  },
  "api/FGS.FaultHandling.Polly.Retry.PollyRetryPolicyAdapter.html": {
    "href": "api/FGS.FaultHandling.Polly.Retry.PollyRetryPolicyAdapter.html",
    "title": "Class PollyRetryPolicyAdapter | FoxGuard Foundation Libraries",
    "keywords": "Class PollyRetryPolicyAdapter Implements an IRetryPolicy using Polly. Inheritance Object PollyRetryPolicyAdapter Implements IRetryPolicy Namespace : FGS.FaultHandling.Polly.Retry Assembly : FGS.FaultHandling.Polly.dll Syntax public sealed class PollyRetryPolicyAdapter : object, IRetryPolicy Constructors | Improve this Doc View Source PollyRetryPolicyAdapter(Polly.ISyncPolicy, Polly.IAsyncPolicy) Initializes a new instance of the PollyRetryPolicyAdapter class. Declaration public PollyRetryPolicyAdapter(Polly.ISyncPolicy syncPolicy, Polly.IAsyncPolicy asyncPolicy) Parameters Type Name Description Polly.ISyncPolicy syncPolicy The synchronous half of the policy's implementation. Polly.IAsyncPolicy asyncPolicy The asynchronous half of the policy's implementation. Methods | Improve this Doc View Source Execute(Action) Declaration public void Execute(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Execute<TResult>(Func<TResult>) Declaration public TResult Execute<TResult>(Func<TResult> action) Parameters Type Name Description Func <TResult> action Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ExecuteAsync(Func<Task>) Declaration public Task ExecuteAsync(Func<Task> action) Parameters Type Name Description Func < Task > action Returns Type Description Task | Improve this Doc View Source ExecuteAsync<TResult>(Func<Task<TResult>>) Declaration public Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> action) Parameters Type Name Description Func < Task <TResult>> action Returns Type Description Task <TResult> Type Parameters Name Description TResult Implements IRetryPolicy Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.OneOf.Extensions.OneOfExtensions.html": {
    "href": "api/FGS.OneOf.Extensions.OneOfExtensions.html",
    "title": "Class OneOfExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class OneOfExtensions Inheritance Object OneOfExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.OneOf.Extensions Assembly : FGS.OneOf.Extensions.dll Syntax public static class OneOfExtensions Methods | Improve this Doc View Source ContinueOnSuccessWith<TSuccessOriginal, TError, TSuccessNew>(OneOf<TSuccessOriginal, TError>, Func<TSuccessOriginal, OneOf<TSuccessNew, TError>>) Declaration public static OneOf<TSuccessNew, TError> ContinueOnSuccessWith<TSuccessOriginal, TError, TSuccessNew>(this OneOf<TSuccessOriginal, TError> original, Func<TSuccessOriginal, OneOf<TSuccessNew, TError>> continuation) Parameters Type Name Description FGS.OneOf <TSuccessOriginal, TError> original Func <TSuccessOriginal, FGS.OneOf <TSuccessNew, TError>> continuation Returns Type Description FGS.OneOf <TSuccessNew, TError> Type Parameters Name Description TSuccessOriginal TError TSuccessNew | Improve this Doc View Source SelectErrorString<TSuccess, TErrorOriginal>(OneOf<TSuccess, TErrorOriginal>, Func<TErrorOriginal, String>) Declaration public static OneOf<TSuccess, Error<string>> SelectErrorString<TSuccess, TErrorOriginal>(this OneOf<TSuccess, TErrorOriginal> source, Func<TErrorOriginal, string> projection) Parameters Type Name Description FGS.OneOf <TSuccess, TErrorOriginal> source Func <TErrorOriginal, String > projection Returns Type Description FGS.OneOf <TSuccess, Error < String >> Type Parameters Name Description TSuccess TErrorOriginal"
  },
  "api/FGS.Autofac.DynamicScoping.ContainerBuilderFactory.html": {
    "href": "api/FGS.Autofac.DynamicScoping.ContainerBuilderFactory.html",
    "title": "Class ContainerBuilderFactory | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderFactory Provides the ability to create a . Inheritance Object ContainerBuilderFactory Namespace : FGS.Autofac.DynamicScoping Assembly : FGS.Autofac.DynamicScoping.dll Syntax public static class ContainerBuilderFactory : object Methods | Improve this Doc View Source Create<TAutofacModulesProvider>(Scope) Creates a , which has been populated via TAutofacModulesProvider , and had all instances of IOverridableHttpScopeAutofacModule configured to have the scope of httpScope . Declaration public static ContainerBuilder Create<TAutofacModulesProvider>(Scope httpScope) where TAutofacModulesProvider : IModulesProvider, new() Parameters Type Name Description Scope httpScope The Scope that all web-dependent registrations should be registered in. Returns Type Description ContainerBuilder The created and populated . Type Parameters Name Description TAutofacModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Configuration.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Configuration.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with the ability to register an empty implementation of and friends. Inheritance Object ContainerBuilderExtensions Namespace : FGS.Tests.Support.Autofac.Mocking.Configuration Assembly : FGS.Tests.Support.Autofac.Mocking.Configuration.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source RegisterNullConfiguration(ContainerBuilder, Scope) Registers an empty implementation of and friends with the builder . Declaration public static void RegisterNullConfiguration(this ContainerBuilder builder, Scope scope = Scope.Singleton) Parameters Type Name Description ContainerBuilder builder The into which to add the registration. Scope scope The lifetime management semantics by which the components will be resolved."
  },
  "api/FGS.Autofac.CompositionRoot.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Autofac.CompositionRoot.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with functionality to populate it en-masse from implementations of IModulesProvider . Inheritance Object ContainerBuilderExtensions Namespace : FGS.Autofac.CompositionRoot Assembly : FGS.Autofac.CompositionRoot.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source Populate<TAutofacModulesProvider>(ContainerBuilder, Action<IModule>) Populates the given containerBuilder with all the modules provided by TAutofacModulesProvider , optionally applying logic from forEachModule on each module before adding it to the containerBuilder . Declaration public static void Populate<TAutofacModulesProvider>(this ContainerBuilder containerBuilder, Action<IModule> forEachModule = null) where TAutofacModulesProvider : IModulesProvider, new() Parameters Type Name Description ContainerBuilder containerBuilder The container builder to be populated with modules. Action < IModule > forEachModule An optional action used to configure each being added to the container builder. Type Parameters Name Description TAutofacModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered."
  },
  "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.html": {
    "href": "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.html",
    "title": "Namespace FGS.Extensions.Diagnostics.HealthChecks.EntityFramework | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Diagnostics.HealthChecks.EntityFramework Classes EntityFrameworkHealthCheck<TDbContext> HealthChecksBuilderExtensions Extends with the ability to add a that checks an Entity Framework 6 database context."
  },
  "api/FGS.Autofac.Interception.DynamicProxy.AttributeBasedInterceptionModule-2.html": {
    "href": "api/FGS.Autofac.Interception.DynamicProxy.AttributeBasedInterceptionModule-2.html",
    "title": "Class AttributeBasedInterceptionModule<TAttribute, TInterceptor> | FoxGuard Foundation Libraries",
    "keywords": "Class AttributeBasedInterceptionModule<TAttribute, TInterceptor> Inheritance Object CustomInterceptionModuleBase AttributeBasedInterceptionModule<TAttribute, TInterceptor> Inherited Members CustomInterceptionModuleBase.AttachToComponentRegistration(IComponentRegistry, IComponentRegistration) Namespace : FGS.Autofac.Interception.DynamicProxy Assembly : FGS.Autofac.Interception.DynamicProxy.dll Syntax public sealed class AttributeBasedInterceptionModule<TAttribute, TInterceptor> : CustomInterceptionModuleBase where TAttribute : Attribute where TInterceptor : IInterceptor Type Parameters Name Description TAttribute TInterceptor Methods | Improve this Doc View Source CreateProxyGenerationHook(Type) Declaration protected override IProxyGenerationHook CreateProxyGenerationHook(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType Returns Type Description IProxyGenerationHook Overrides CustomInterceptionModuleBase.CreateProxyGenerationHook(Type) | Improve this Doc View Source DescribeInterceptorServices(Type) Declaration protected override IEnumerable<Service> DescribeInterceptorServices(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType Returns Type Description IEnumerable < Service > Overrides CustomInterceptionModuleBase.DescribeInterceptorServices(Type) | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description ContainerBuilder builder | Improve this Doc View Source ShouldInterceptType(Type) Declaration protected override bool ShouldInterceptType(Type originalImplementationType) Parameters Type Name Description Type originalImplementationType Returns Type Description Boolean Overrides CustomInterceptionModuleBase.ShouldInterceptType(Type) Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicyFactory.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicyFactory.html",
    "title": "Interface IRetryPolicyFactory | FoxGuard Foundation Libraries",
    "keywords": "Interface IRetryPolicyFactory Represents a factory of IRetryPolicy instances that takes exception predicates as a parameter. Namespace : FGS.FaultHandling.Abstractions.Retry Assembly : FGS.FaultHandling.Abstractions.dll Syntax public interface IRetryPolicyFactory Methods | Improve this Doc View Source Create(IEnumerable<Func<Exception, Boolean>>) Creates an instance of IRetryPolicy . Declaration IRetryPolicy Create(IEnumerable<Func<Exception, bool>> exceptionPredicates) Parameters Type Name Description IEnumerable < Func < Exception , Boolean >> exceptionPredicates Predicates of which one of which must evaluate to true for the returned IRetryPolicy to execute a retry. Returns Type Description IRetryPolicy Returns an IRetryPolicy . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Collections.Extensions.OneOf.Units.html": {
    "href": "api/FGS.Collections.Extensions.OneOf.Units.html",
    "title": "Namespace FGS.Collections.Extensions.OneOf.Units | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Collections.Extensions.OneOf.Units Structs MoreThanOneElement A unit type for usage in discriminated unions. Signifies that only one element was expected, but more than one were found. NoElements A unit type for usage in discriminated unions. Signifies that an element was expected, but none were found."
  },
  "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkIisEnvConfigurationExtensions.html": {
    "href": "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkIisEnvConfigurationExtensions.html",
    "title": "Class AwsElasticBeanstalkIisEnvConfigurationExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AwsElasticBeanstalkIisEnvConfigurationExtensions Extension methods for adding AwsElasticBeanstalkIisEnvConfigurationProvider to an application's . Inheritance Object AwsElasticBeanstalkIisEnvConfigurationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv Assembly : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.dll Syntax public static class AwsElasticBeanstalkIisEnvConfigurationExtensions Remarks Based on: https://github.com/aspnet/Extensions/blob/67394a5c9f92832d31d871c124763bc6231c9009/src/Configuration/Config.Json/src/JsonConfigurationExtensions.cs Methods | Improve this Doc View Source AddAwsElasticBeanstalkIisEnvConfiguration(IConfigurationBuilder) Adds the AWS Elastic Beanstalk IIS Env configuration provider to builder . Declaration public static IConfigurationBuilder AddAwsElasticBeanstalkIisEnvConfiguration(this IConfigurationBuilder builder) Parameters Type Name Description IConfigurationBuilder builder The to add to. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddAwsElasticBeanstalkIisEnvConfiguration(IConfigurationBuilder, IFileProvider, Boolean, Boolean) Adds an AWS Elastic Beanstalk IIS Env configuration source to builder . Declaration public static IConfigurationBuilder AddAwsElasticBeanstalkIisEnvConfiguration(this IConfigurationBuilder builder, IFileProvider provider, bool optional, bool reloadOnChange) Parameters Type Name Description IConfigurationBuilder builder The to add to. IFileProvider provider The to use to access the underlying \"container configuration\" file. Boolean optional Whether the underlying \"container configuration\" file is optional. Boolean reloadOnChange Whether the configuration should be reloaded if the underlying \"container configuration\" file changes. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddAwsElasticBeanstalkIisEnvConfiguration(IConfigurationBuilder, Action<AwsElasticBeanstalkContainerConfigurationConfigurationSource>) Adds an AWS Elastic Beanstalk IIS Env configuration source to builder . Declaration public static IConfigurationBuilder AddAwsElasticBeanstalkIisEnvConfiguration(this IConfigurationBuilder builder, Action<AwsElasticBeanstalkContainerConfigurationConfigurationSource> configureSource) Parameters Type Name Description IConfigurationBuilder builder The to add to. Action < AwsElasticBeanstalkContainerConfigurationConfigurationSource > configureSource Configures the source. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddAwsElasticBeanstalkIisEnvConfiguration(IConfigurationBuilder, Boolean) Adds the AWS Elastic Beanstalk IIS Env configuration provider to builder . Declaration public static IConfigurationBuilder AddAwsElasticBeanstalkIisEnvConfiguration(this IConfigurationBuilder builder, bool optional) Parameters Type Name Description IConfigurationBuilder builder The to add to. Boolean optional Whether the underlying \"container configuration\" file is optional. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddAwsElasticBeanstalkIisEnvConfiguration(IConfigurationBuilder, Boolean, Boolean) Adds the AWS Elastic Beanstalk IIS Env configuration provider to builder . Declaration public static IConfigurationBuilder AddAwsElasticBeanstalkIisEnvConfiguration(this IConfigurationBuilder builder, bool optional, bool reloadOnChange) Parameters Type Name Description IConfigurationBuilder builder The to add to. Boolean optional Whether the underlying \"container configuration\" file is optional. Boolean reloadOnChange Whether the configuration should be reloaded if the underlying \"container configuration\" file changes. Returns Type Description IConfigurationBuilder The ."
  },
  "api/FGS.Collections.Extensions.OneOf.Units.MoreThanOneElement.html": {
    "href": "api/FGS.Collections.Extensions.OneOf.Units.MoreThanOneElement.html",
    "title": "Struct MoreThanOneElement | FoxGuard Foundation Libraries",
    "keywords": "Struct MoreThanOneElement A unit type for usage in discriminated unions. Signifies that only one element was expected, but more than one were found. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : FGS.Collections.Extensions.OneOf.Units Assembly : FGS.Collections.Extensions.OneOf.Units.dll Syntax public struct MoreThanOneElement Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Reflection.Extensions.MemberInfoExtensions.html": {
    "href": "api/FGS.Reflection.Extensions.MemberInfoExtensions.html",
    "title": "Class MemberInfoExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class MemberInfoExtensions Provides functionality to assist with reading information about the members of types. Inheritance Object MemberInfoExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Reflection.Extensions Assembly : FGS.Reflection.Extensions.dll Syntax public static class MemberInfoExtensions Remarks Taken and modified from: https://github.com/ninject/Ninject/blob/cc00946b1484db3c8d1c80c0c44e91beabc6b5be/src/Ninject/Infrastructure/Language/ExtensionsForMemberInfo.cs Methods | Improve this Doc View Source HasAttribute(MemberInfo, Type) Determines whether the specified member has a given type of attribute. Declaration public static bool HasAttribute(this MemberInfo member, Type type) Parameters Type Name Description MemberInfo member The member being inquired about. Type type The type of the attribute that is sought. Returns Type Description Boolean true if the specified member has the attribute; otherwise false . | Improve this Doc View Source HasAttribute<T>(MemberInfo) Determines whether the specified member has a given type of attribute. Declaration public static bool HasAttribute<T>(this MemberInfo member) Parameters Type Name Description MemberInfo member The member being inquired about. Returns Type Description Boolean true if the specified member has the attribute; otherwise false . Type Parameters Name Description T The type of the attribute that is sought. | Improve this Doc View Source IsPrivate(PropertyInfo) Determines whether represents a private property. Declaration public static bool IsPrivate(this PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo The property info. Returns Type Description Boolean true if the specified property is private; otherwise false . | Improve this Doc View Source TryGetDeclaringProperty(ParameterInfo, out PropertyInfo) Maps from a property-set-value parameter to the declaring property. Declaration public static bool TryGetDeclaringProperty(this ParameterInfo pi, out PropertyInfo prop) Parameters Type Name Description ParameterInfo pi Parameter to the property setter. PropertyInfo prop The property info on which the setter is specified. Returns Type Description Boolean true if the parameter is a property setter; otherwise false ."
  },
  "api/FGS.Linq.Extensions.OneOf.EntityFramework.OneOfQueryableExtensions.html": {
    "href": "api/FGS.Linq.Extensions.OneOf.EntityFramework.OneOfQueryableExtensions.html",
    "title": "Class OneOfQueryableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class OneOfQueryableExtensions Extends with a materialization methods that describe their failure conditions using discriminated unions. Inheritance Object OneOfQueryableExtensions Namespace : FGS.Linq.Extensions.OneOf.EntityFramework Assembly : FGS.Linq.Extensions.OneOf.EntityFrameworkCore.dll Syntax public static class OneOfQueryableExtensions : object Methods | Improve this Doc View Source MaterializeFirstOrReasonWhyNot<T>(IQueryable<T>, CancellationToken) Asynchronously returns the first element from the query represented by source , and returns NoElements if there are no elements. Declaration public static Task<OneOf<T, NoElements>> MaterializeFirstOrReasonWhyNot<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task < FGS.Linq.Extensions.OneOf <T, NoElements >> A task that represents the asynchronous operation. The task result contains the first element from the input query, or the reason why it could be returned. Type Parameters Name Description T The type of items that source queries for. | Improve this Doc View Source MaterializeSingleOrReasonWhyNot<T>(IQueryable<T>, CancellationToken) Asynchronously returns a single element from the query represented by source , returns NoElements if there are no elements, returns MoreThanOneElement if there is more than one element. Declaration public static Task<OneOf<T, NoElements, MoreThanOneElement>> MaterializeSingleOrReasonWhyNot<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task < FGS.Linq.Extensions.OneOf <T, NoElements , MoreThanOneElement >> A task that represents the asynchronous operation. The task result contains the single element from the input query, or the reason why it could be returned. Type Parameters Name Description T The type of items that source queries for."
  },
  "api/FGS.Interceptors.FaultHandling.Retry.RetryInterceptor.html": {
    "href": "api/FGS.Interceptors.FaultHandling.Retry.RetryInterceptor.html",
    "title": "Class RetryInterceptor | FoxGuard Foundation Libraries",
    "keywords": "Class RetryInterceptor An implementation of IInterceptor that uses an IRetryPolicyCoordinator to execute (and potentially retry) an invocation. Inheritance Object RetryInterceptor Implements IInterceptor Namespace : FGS.Interceptors.FaultHandling.Retry Assembly : FGS.Interceptors.FaultHandling.dll Syntax public sealed class RetryInterceptor : object, IInterceptor Constructors | Improve this Doc View Source RetryInterceptor(IRetryPolicyCoordinator) Initializes a new instance of the RetryInterceptor class. Declaration public RetryInterceptor(IRetryPolicyCoordinator retryPolicyCoordinator) Parameters Type Name Description IRetryPolicyCoordinator retryPolicyCoordinator An instance of IRetryPolicyCoordinator that is used to invoke (and potentially retry) an invocation. Methods | Improve this Doc View Source Intercept(IInvocation) The implementation that is invoked to intercept a member with a synchronous signature. Declaration public void Intercept(IInvocation invocation) Parameters Type Name Description IInvocation invocation Represents a method invocation that has been intercepted. | Improve this Doc View Source InterceptAsync(IAsyncInvocation) Declaration public Task InterceptAsync(IAsyncInvocation invocation) Parameters Type Name Description IAsyncInvocation invocation Returns Type Description Task Implements IInterceptor Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Configuration.Abstractions.LiteralConnectionString.html": {
    "href": "api/FGS.Configuration.Abstractions.LiteralConnectionString.html",
    "title": "Class LiteralConnectionString | FoxGuard Foundation Libraries",
    "keywords": "Class LiteralConnectionString Represents a pair of connection string and provider name, whose literal values are known at instantiation. Inheritance Object LiteralConnectionString Implements IConnectionString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Configuration.Abstractions Assembly : FGS.Configuration.Abstractions.dll Syntax public class LiteralConnectionString : IConnectionString Constructors | Improve this Doc View Source LiteralConnectionString(String, String) Initializes a new instance of the LiteralConnectionString class. Declaration public LiteralConnectionString(string connectionString, string providerName) Parameters Type Name Description String connectionString The value of the connection string. String providerName The name of the ADO.NET provider to be used for creating connections for the given connection string value. Properties | Improve this Doc View Source ConnectionString Gets the value of the connection string. Declaration public string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source ProviderName Gets the name of the ADO.NET provider to be used for creating connections for the given connection string value. Declaration public string ProviderName { get; } Property Value Type Description String Implements IConnectionString Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Linq.Extensions.EntityFramework.html": {
    "href": "api/FGS.Linq.Extensions.EntityFramework.html",
    "title": "Namespace FGS.Linq.Extensions.EntityFramework | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.EntityFramework Classes MaterializingQueryableExtensions Extends with a facade of materialization methods."
  },
  "api/FGS.OneOf.Extensions.html": {
    "href": "api/FGS.OneOf.Extensions.html",
    "title": "Namespace FGS.OneOf.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.OneOf.Extensions Classes OneOfExtensions OneOfQueryExpressionExtensions"
  },
  "api/FGS.Extensions.Hosting.Logging.Serilog.html": {
    "href": "api/FGS.Extensions.Hosting.Logging.Serilog.html",
    "title": "Namespace FGS.Extensions.Hosting.Logging.Serilog | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Hosting.Logging.Serilog Classes SerilogHostBuilderExtensions Extends with functionality to configure Serilog. SerilogLoggerFactory Implements so that we can inject Serilog Logger."
  },
  "api/FGS.Interceptors.Time.html": {
    "href": "api/FGS.Interceptors.Time.html",
    "title": "Namespace FGS.Interceptors.Time | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interceptors.Time Classes FreezeTimeInterceptor An implementation of IInterceptor that uses a retrievable IFreezableClock to freeze time before an inbound invocation, and then unfreeze after the invocation has been completed."
  },
  "api/FGS.Autofac.Interceptors.Time.FreezeTimeModule.html": {
    "href": "api/FGS.Autofac.Interceptors.Time.FreezeTimeModule.html",
    "title": "Class FreezeTimeModule | FoxGuard Foundation Libraries",
    "keywords": "Class FreezeTimeModule Registers the FreezeTimeInterceptor to intercept virtual members of types annotated with the FreezeTimeAttribute . This causes resolved IClock instances to reflect a frozen instant in time for the duration of the intercepted call. Inheritance Object FreezeTimeModule Namespace : FGS.Autofac.Interceptors.Time Assembly : FGS.Autofac.Interceptors.Time.dll Syntax public sealed class FreezeTimeModule : Module Methods | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description ContainerBuilder builder Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Linq.Extensions.Pagination.EntityFramework.PageQueryExtensions.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.EntityFramework.PageQueryExtensions.html",
    "title": "Class PageQueryExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class PageQueryExtensions Extends PageQuery<T> with materialization functionality. Inheritance Object PageQueryExtensions Namespace : FGS.Linq.Extensions.Pagination.EntityFramework Assembly : FGS.Linq.Extensions.Pagination.EntityFrameworkCore.dll Syntax public static class PageQueryExtensions : object Methods | Improve this Doc View Source MaterializeAsync<T>(PageQuery<T>) Asynchronously materializes self into a . Declaration public static Task<Page<T>> MaterializeAsync<T>(this PageQuery<T> self) Parameters Type Name Description PageQuery <T> self The source representation of a paginated query that will be materialized. Returns Type Description Task < Page <T>> A task that represents the asynchronous operation. The task result contains a that contains elements from the input query. Type Parameters Name Description T The type of item on the page."
  },
  "api/FGS.Extensions.Hosting.Logging.Serilog.SerilogLoggerFactory.html": {
    "href": "api/FGS.Extensions.Hosting.Logging.Serilog.SerilogLoggerFactory.html",
    "title": "Class SerilogLoggerFactory | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogLoggerFactory Implements so that we can inject Serilog Logger. Inheritance Object SerilogLoggerFactory Namespace : FGS.Extensions.Hosting.Logging.Serilog Assembly : FGS.Extensions.Hosting.Logging.Serilog.dll Syntax public sealed class SerilogLoggerFactory : ILoggerFactory Remarks Registered with dependency injection as part of using SerilogHostBuilderExtensions . Methods | Improve this Doc View Source AddProvider(ILoggerProvider) Adds an to the logging system. Declaration public void AddProvider(ILoggerProvider provider) Parameters Type Name Description ILoggerProvider provider The . | Improve this Doc View Source CreateLogger(String) Creates a new instance. Declaration public Microsoft.Extensions.Logging.ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName The category name for messages produced by the logger. Returns Type Description Extensions.Logging.ILogger The . | Improve this Doc View Source Dispose() Disposes the provider. Declaration public void Dispose() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Rx.Extensions.Abstractions.html": {
    "href": "api/FGS.Rx.Extensions.Abstractions.html",
    "title": "Namespace FGS.Rx.Extensions.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Rx.Extensions.Abstractions Interfaces IHistoricalReactiveProcessor Represents the capability to take a collection of timestamped events, process it with Rx operators, and await the materialization of the result back into a collection."
  },
  "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.AppBuilderExtensions.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.AppBuilderExtensions.html",
    "title": "Class AppBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AppBuilderExtensions Extends with functionality to configure middleware that will time web requests with a stopwatch. Inheritance Object AppBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.AspNetCore.Http.Extensions.RequestStopwatch Assembly : FGS.AspNetCore.Http.Extensions.RequestStopwatch.dll Syntax public static class AppBuilderExtensions Methods | Improve this Doc View Source UseRequestStopwatch(IApplicationBuilder) Adds RequestStopwatchMiddleware to the request pipeline. Declaration public static void UseRequestStopwatch(this IApplicationBuilder app) Parameters Type Name Description IApplicationBuilder app Remarks Make sure RequestStopwatchMiddleware is resolvable from dependency injection. Use AddRequestStopwatch(IServiceCollection) if needed. Examples app.UseRequestStopwatch();"
  },
  "api/FGS.FaultHandling.Predicates.Mssql.html": {
    "href": "api/FGS.FaultHandling.Predicates.Mssql.html",
    "title": "Namespace FGS.FaultHandling.Predicates.Mssql | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Predicates.Mssql Classes SqlExceptionRetryPredicate Indicates whether the given exception, or its inner exception, is a with a for which we want to attempt to retry the operation."
  },
  "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.html": {
    "href": "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.html",
    "title": "Namespace FGS.AspNetCore.Hosting.Extensions.Logging.Serilog | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Hosting.Extensions.Logging.Serilog Classes SerilogLoggerFactory Implements so that we can inject Serilog Logger. SerilogWebHostBuilderExtensions Extends with functionality to configure Serilog."
  },
  "api/FGS.Tests.Support.TestCategories.FunctionalAttribute.html": {
    "href": "api/FGS.Tests.Support.TestCategories.FunctionalAttribute.html",
    "title": "Class FunctionalAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class FunctionalAttribute Inheritance Object FunctionalAttribute Namespace : FGS.Tests.Support.TestCategories Assembly : FGS.Tests.Support.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class FunctionalAttribute : CategoryAttribute Constructors | Improve this Doc View Source FunctionalAttribute() Checks a particular feature for correctness by comparing the results for a given input against the specification. Declaration public FunctionalAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.Annotations.Time.html": {
    "href": "api/FGS.Interception.Annotations.Time.html",
    "title": "Namespace FGS.Interception.Annotations.Time | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interception.Annotations.Time Classes FreezeTimeAttribute Indicates that the target type or member should be intercepted with time-freezing semantics."
  },
  "api/FGS.Configuration.Abstractions.html": {
    "href": "api/FGS.Configuration.Abstractions.html",
    "title": "Namespace FGS.Configuration.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Configuration.Abstractions Classes ConfigurationExtensions Extends with functionality to read a IConnectionString . LiteralConnectionString Represents a pair of connection string and provider name, whose literal values are known at instantiation. Interfaces IConnectionString Represents a pair of connection string and provider name."
  },
  "api/FGS.Tests.Support.TestCategories.html": {
    "href": "api/FGS.Tests.Support.TestCategories.html",
    "title": "Namespace FGS.Tests.Support.TestCategories | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.TestCategories Classes AcceptanceAttribute FunctionalAttribute IntegrationAttribute StaticAnalysisAttribute UnitAttribute"
  },
  "api/FGS.AspNetCore.Http.Extensions.AWS.ALB.AwsAlbApplicationBuilderExtensions.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.AWS.ALB.AwsAlbApplicationBuilderExtensions.html",
    "title": "Class AwsAlbApplicationBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AwsAlbApplicationBuilderExtensions Extends with functionality to configure middleware that forwards proxied HTTP headers. Inheritance Object AwsAlbApplicationBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.AspNetCore.Http.Extensions.AWS.ALB Assembly : FGS.AspNetCore.Http.Extensions.AWS.ALB.dll Syntax public static class AwsAlbApplicationBuilderExtensions Methods | Improve this Doc View Source UseForwardedHeadersFromAwsApplicationLoadBalancer(IApplicationBuilder, Boolean, Boolean) Forwards proxied headers on to current request, for cases when proxy is expected to be an AWS Application Load Balancer. Declaration public static IApplicationBuilder UseForwardedHeadersFromAwsApplicationLoadBalancer(this IApplicationBuilder app, bool tlsOffloaded = true, bool hostIsRewritten = false) Parameters Type Name Description IApplicationBuilder app The application being configured. Boolean tlsOffloaded Indicates whether or not the AWS ALB is configured to offload TLS, and therefor whether or not to expect the X-Forwarded-Proto header. The default is true . Boolean hostIsRewritten Indicates whether or not the AWS ALB is configured to rewrite the Host header, and therefor whether or not to expect the X-Forwarded-Host header. The default is false . Returns Type Description IApplicationBuilder An instance of so that configuration calls can be chained. Remarks This adapter on top of is needed when the application is running behind an AWS Application Load Balancer and the consumer wishes to leverage forwarded headers. It is notable that the underlying middleware does not activate unless it is configured in a way that precisely matches incoming requests, which is tricky because AWS ALBs only forward headers based on how they themselves are configured. This helper bridges the gap between the two by allowing a consumer to express expected headers in terms relating to how the AWS ALB is configured. ⚠WARNING: The implementation of this explicitly configures the underlying middleware to trust the forwarding headers regardless as to network source of the connection. This could pose a spoofing risk on untrusted networks. Examples app.UseForwardedHeadersFromAwsApplicationLoadBalancer();"
  },
  "api/FGS.Autofac.Registration.Extensions.html": {
    "href": "api/FGS.Autofac.Registration.Extensions.html",
    "title": "Namespace FGS.Autofac.Registration.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.Registration.Extensions Classes ContainerBuilderExtensions Extends with helpers that reduce the overhead of certain common registration patterns. RegistrationBuilderExtensions Extends with functionality that makes parameterizing resolved instances easier to configure."
  },
  "api/FGS.Primitives.Time.Abstractions.html": {
    "href": "api/FGS.Primitives.Time.Abstractions.html",
    "title": "Namespace FGS.Primitives.Time.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Primitives.Time.Abstractions Interfaces IClock IFreezableClock"
  },
  "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.RouteValuesLooseEqualityComparer.html": {
    "href": "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.RouteValuesLooseEqualityComparer.html",
    "title": "Class RouteValuesLooseEqualityComparer | FoxGuard Foundation Libraries",
    "keywords": "Class RouteValuesLooseEqualityComparer An implementation of that ignores type differences between members of comparands. Inheritance Object RouteValuesLooseEqualityComparer Namespace : FGS.Tests.Support.AspNetCore.Mvc.Routing Assembly : FGS.Tests.Support.AspNetCore.Mvc.dll Syntax public sealed class RouteValuesLooseEqualityComparer : IEqualityComparer<object> Constructors | Improve this Doc View Source RouteValuesLooseEqualityComparer() Initializes a new instance of the RouteValuesLooseEqualityComparer class. Declaration public RouteValuesLooseEqualityComparer() Fields | Improve this Doc View Source Instance Declaration public static readonly RouteValuesLooseEqualityComparer Instance Field Value Type Description RouteValuesLooseEqualityComparer Methods | Improve this Doc View Source Equals(Object, Object) Declaration public bool Equals(object expected, object actual) Parameters Type Name Description Object expected Object actual Returns Type Description Boolean Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.Interceptors.Time.html": {
    "href": "api/FGS.Autofac.Interceptors.Time.html",
    "title": "Namespace FGS.Autofac.Interceptors.Time | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.Interceptors.Time Classes FreezeTimeModule Registers the FreezeTimeInterceptor to intercept virtual members of types annotated with the FreezeTimeAttribute . This causes resolved IClock instances to reflect a frozen instant in time for the duration of the intercepted call."
  },
  "api/FGS.Linq.Extensions.AutoMapper.AutoMapperQueryableExtensions.html": {
    "href": "api/FGS.Linq.Extensions.AutoMapper.AutoMapperQueryableExtensions.html",
    "title": "Class AutoMapperQueryableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutoMapperQueryableExtensions Extends IQueryable<T> with the ability to transform it into a query of a different type, using AutoMapper. Inheritance Object AutoMapperQueryableExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Linq.Extensions.AutoMapper Assembly : FGS.Linq.Extensions.AutoMapper7.dll Syntax public static class AutoMapperQueryableExtensions Methods | Improve this Doc View Source Map<TSource, TDestination>(IQueryable<TSource>, IMapper) Projects a query into a new output type, using mapper . Declaration public static IQueryable<TDestination> Map<TSource, TDestination>(this IQueryable<TSource> source, IMapper mapper) Parameters Type Name Description IQueryable <TSource> source The original query that is being transformed. IMapper mapper The mapper that converts the query. Returns Type Description IQueryable <TDestination> A query of items of type TDestination . Type Parameters Name Description TSource The type of items in the source query. TDestination The type of items in the result query."
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.StringCleanupAttribute.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.StringCleanupAttribute.html",
    "title": "Class StringCleanupAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class StringCleanupAttribute Indicates that the given model member should be bound with StringCleanupModelBinder . Inheritance Object StringCleanupAttribute Namespace : FGS.AspNetCore.Mvc.ModelBinding Assembly : FGS.AspNetCore.Mvc.ModelBinding.dll Syntax public class StringCleanupAttribute : ModelBinderAttribute Constructors | Improve this Doc View Source StringCleanupAttribute() Creates a new instance of StringCleanupAttribute . Declaration public StringCleanupAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartOptions.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartOptions.html",
    "title": "Class DelayedStartOptions | FoxGuard Foundation Libraries",
    "keywords": "Class DelayedStartOptions Provides configuration options for DelayedStartHostingMiddleware . Inheritance Object DelayedStartOptions Namespace : FGS.Extensions.Hosting.Middleware.DelayedStart Assembly : FGS.Extensions.Hosting.Middleware.DelayedStart.dll Syntax public class DelayedStartOptions : object Properties | Improve this Doc View Source Delay Gets or sets the amount of time that startup will be delayed. Declaration public TimeSpan Delay { get; set; } Property Value Type Description TimeSpan Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Logging.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Logging.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with the ability to register null-patterned implementations of and friends. Inheritance Object ContainerBuilderExtensions Namespace : FGS.Tests.Support.Autofac.Mocking.Logging Assembly : FGS.Tests.Support.Autofac.Mocking.Logging.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source RegisterNullLogging(ContainerBuilder, Scope) Registers a null-pattern implementation of and friends with the builder . Declaration public static void RegisterNullLogging(this ContainerBuilder builder, Scope scope = Scope.Singleton) Parameters Type Name Description ContainerBuilder builder The into which to add the registrations. Scope scope The lifetime management semantics by which the components will be resolved."
  },
  "api/FGS.Extensions.Hosting.Logging.Serilog.SerilogHostBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Hosting.Logging.Serilog.SerilogHostBuilderExtensions.html",
    "title": "Class SerilogHostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogHostBuilderExtensions Extends with functionality to configure Serilog. Inheritance Object SerilogHostBuilderExtensions Namespace : FGS.Extensions.Hosting.Logging.Serilog Assembly : FGS.Extensions.Hosting.Logging.Serilog.dll Syntax public static class SerilogHostBuilderExtensions : object Methods | Improve this Doc View Source UseSerilog(IHostBuilder, Action<HostBuilderContext, LoggerConfiguration>, Boolean) Sets Serilog as the logging provider. Declaration public static IHostBuilder UseSerilog(this IHostBuilder builder, Action<HostBuilderContext, LoggerConfiguration> configureLogger, bool preserveStaticLogger = false) Parameters Type Name Description IHostBuilder builder The host builder to configure. Action < HostBuilderContext , LoggerConfiguration > configureLogger The delegate for configuring the that will be used to construct a . Boolean preserveStaticLogger Indicates whether to preserve the value of . Returns Type Description IHostBuilder The host builder. Remarks A is supplied so that configuration and hosting information can be used. The logger will be shut down when application services are disposed. | Improve this Doc View Source UseSerilog(IHostBuilder, Serilog.ILogger, Boolean) Sets Serilog as the logging provider. Declaration public static IHostBuilder UseSerilog(this IHostBuilder builder, Serilog.ILogger logger = null, bool dispose = false) Parameters Type Name Description IHostBuilder builder The host builder to configure. Serilog.ILogger logger The Serilog logger; if not supplied, the static will be used. Boolean dispose When true, dispose logger when the framework disposes the provider. If the logger is not specified but dispose is true, the method will be called on the static class instead. Returns Type Description IHostBuilder The host builder. Examples public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .UseSerilog() .UseStartup<Startup>(); | Improve this Doc View Source UseSerilogExternallyRegistered(IHostBuilder) Sets Serilog as the logging provider, using an already-registered . Declaration public static IHostBuilder UseSerilogExternallyRegistered(this IHostBuilder builder) Parameters Type Name Description IHostBuilder builder The host builder to configure. Returns Type Description IHostBuilder The host builder. Examples public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .UseSerilogExternallyRegistered() .UseStartup<Startup>();"
  },
  "api/FGS.ComponentModel.DataAnnotations.SafeEmailAddressAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.SafeEmailAddressAttribute.html",
    "title": "Class SafeEmailAddressAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class SafeEmailAddressAttribute Safely validates an email address. Inheritance Object SafeEmailAddressAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)] public sealed class SafeEmailAddressAttribute : DataTypeAttribute Remarks Enforces a timeout when matching an email address to the regex to prevent a denial of service attack. See https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS for more info. Constructors | Improve this Doc View Source SafeEmailAddressAttribute() Declaration public SafeEmailAddressAttribute() Methods | Improve this Doc View Source IsValid(Object) Determines whether the specified value matches the pattern of a valid email address. Declaration public override bool IsValid(object value) Parameters Type Name Description Object value The value to validate. Returns Type Description Boolean true if the specified value is valid or null; otherwise, false. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Primitives.Time.html": {
    "href": "api/FGS.Primitives.Time.html",
    "title": "Namespace FGS.Primitives.Time | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Primitives.Time Classes FreezableClock SystemClock"
  },
  "api/FGS.FaultHandling.Predicates.Win32.Win32ExceptionRetryPredicate.html": {
    "href": "api/FGS.FaultHandling.Predicates.Win32.Win32ExceptionRetryPredicate.html",
    "title": "Class Win32ExceptionRetryPredicate | FoxGuard Foundation Libraries",
    "keywords": "Class Win32ExceptionRetryPredicate Indicates whether the given exception, or its inner exception, is a , for which we want to attempt to retry the operation. Inheritance Object Win32ExceptionRetryPredicate Implements IExceptionRetryPredicate Namespace : FGS.FaultHandling.Predicates.Win32 Assembly : FGS.FaultHandling.Predicates.Win32.dll Syntax public sealed class Win32ExceptionRetryPredicate : object, IExceptionRetryPredicate Methods | Improve this Doc View Source ShouldRetry(Exception) Declaration public bool ShouldRetry(Exception ex) Parameters Type Name Description Exception ex Returns Type Description Boolean Implements IExceptionRetryPredicate Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Logging.Serilog.SerilogLoggerProvider.html": {
    "href": "api/FGS.Extensions.Logging.Serilog.SerilogLoggerProvider.html",
    "title": "Class SerilogLoggerProvider | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogLoggerProvider An that pipes events through Serilog. Inheritance Object SerilogLoggerProvider Implements ILogEventEnricher Namespace : FGS.Extensions.Logging.Serilog Assembly : FGS.Extensions.Logging.Serilog.dll Syntax public sealed class SerilogLoggerProvider : ILoggerProvider, ILogEventEnricher Remarks Taken and modified from: https://github.com/serilog/serilog-extensions-logging/blob/767f884a1dafb033a8232c6c8e61b8f4bf5db6ed/src/Serilog.Extensions.Logging/Extensions/Logging/SerilogLoggerProvider.cs . Constructors | Improve this Doc View Source SerilogLoggerProvider(Serilog.ILogger, Boolean) Initializes a new instance of the SerilogLoggerProvider class. Declaration public SerilogLoggerProvider(Serilog.ILogger logger = null, bool dispose = false) Parameters Type Name Description Serilog.ILogger logger A Serilog logger to pipe events through; if null, the static class will be used. Boolean dispose If true, the provided logger or static log class will be disposed/closed when the provider is disposed. Methods | Improve this Doc View Source BeginScope<T>(T) Declaration public IDisposable BeginScope<T>(T state) Parameters Type Name Description T state Returns Type Description IDisposable Type Parameters Name Description T | Improve this Doc View Source CreateLogger(String) Declaration public Extensions.Logging.ILogger CreateLogger(string name) Parameters Type Name Description String name Returns Type Description Extensions.Logging.ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Enrich(LogEvent, ILogEventPropertyFactory) Declaration public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters Type Name Description LogEvent logEvent ILogEventPropertyFactory propertyFactory Implements ILogEventEnricher Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.html": {
    "href": "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.html",
    "title": "Namespace FGS.Tests.Support.AspNetCore.Mvc.Routing | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.AspNetCore.Mvc.Routing Classes MockUrlHelperExtensions Extends with functionality to help setup and verify invocations, except in terms of the extension methods of that are provided by . RouteValuesLooseEqualityComparer An implementation of that ignores type differences between members of comparands."
  },
  "api/FGS.Tests.Support.Extensions.html": {
    "href": "api/FGS.Tests.Support.Extensions.html",
    "title": "Namespace FGS.Tests.Support.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Extensions Classes EnumerableExtensions Provides functionality for interacting with collections."
  },
  "api/FGS.Reflection.Extensions.EmbeddedResourceLoader.html": {
    "href": "api/FGS.Reflection.Extensions.EmbeddedResourceLoader.html",
    "title": "Class EmbeddedResourceLoader | FoxGuard Foundation Libraries",
    "keywords": "Class EmbeddedResourceLoader Provides functionality that helps assist with loading assembly-embedded resources. Inheritance Object EmbeddedResourceLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Reflection.Extensions Assembly : FGS.Reflection.Extensions.dll Syntax public static class EmbeddedResourceLoader Methods | Improve this Doc View Source GetEmbeddedResource(String, String) Gets the contents of a resource embedded in the current assembly. Declaration public static string GetEmbeddedResource(string resourceNamespace, string name) Parameters Type Name Description String resourceNamespace The namespace to retrieve the resource from. String name The name of the resource. Returns Type Description String The contents of the requested resource."
  },
  "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.html": {
    "href": "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.html",
    "title": "Namespace FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv Classes AwsElasticBeanstalkContainerConfigurationConfigurationSource Represents a that retrieves data from the \"IIS Environment\" values in a \"container configuration\" file as part of an AWS Elastic Beanstalk instance. AwsElasticBeanstalkIisEnvConfigurationExtensions Extension methods for adding AwsElasticBeanstalkIisEnvConfigurationProvider to an application's . AwsElasticBeanstalkIisEnvConfigurationProvider An implementation of that extracts \"IIS Environment\" configuration data and uses that as the actual configuration data being provided by this provider."
  },
  "api/FGS.Autofac.Registration.Extensions.RegistrationBuilderExtensions.html": {
    "href": "api/FGS.Autofac.Registration.Extensions.RegistrationBuilderExtensions.html",
    "title": "Class RegistrationBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class RegistrationBuilderExtensions Extends with functionality that makes parameterizing resolved instances easier to configure. Inheritance Object RegistrationBuilderExtensions Namespace : FGS.Autofac.Registration.Extensions Assembly : FGS.Autofac.Registration.Extensions.dll Syntax public static class RegistrationBuilderExtensions : object Methods | Improve this Doc View Source WithParameterTypedFrom<TLimit, TReflectionActivatorData, TStyle, TParameter>(IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle>, Func<IComponentContext, TParameter>) Augments the registration registration to contain a parameter that will be matched to a target based on its type TParameter , and resolved using valueProvider . Declaration public static IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> WithParameterTypedFrom<TLimit, TReflectionActivatorData, TStyle, TParameter>(this IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> registration, Func<IComponentContext, TParameter> valueProvider) where TReflectionActivatorData : ReflectionActivatorData Parameters Type Name Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> registration The registration into which the parameter is being added. Func < IComponentContext , TParameter> valueProvider The factory that creates or retrieves the value of the parameter being added. Returns Type Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> The registration, so that additional configuration calls can be chained. Type Parameters Name Description TLimit Registration limit type. TReflectionActivatorData Activator data type. TStyle Registration style. TParameter The type of the value of the parameter being added. | Improve this Doc View Source WithParameterTypedFromAndNamed<TLimit, TReflectionActivatorData, TStyle, TParameter>(IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle>, String, Func<IComponentContext, TParameter>) Augments the registration registration to contain a parameter that will be matched to a target based on its type TParameter , resolved using valueProvider , and named name . Declaration public static IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> WithParameterTypedFromAndNamed<TLimit, TReflectionActivatorData, TStyle, TParameter>(this IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> registration, string name, Func<IComponentContext, TParameter> valueProvider) where TReflectionActivatorData : ReflectionActivatorData Parameters Type Name Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> registration The registration into which the parameter is being added. String name The name of the parameter being added. Func < IComponentContext , TParameter> valueProvider The factory that creates or retrieves the value of the parameter being added. Returns Type Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> The registration, so that additional configuration calls can be chained. Type Parameters Name Description TLimit Registration limit type. TReflectionActivatorData Activator data type. TStyle Registration style. TParameter The type of the value of the parameter being added. | Improve this Doc View Source WithProperty<TLimit, TActivatorData, TStyle, TPropertyValue>(IRegistrationBuilder<TLimit, TActivatorData, TStyle>, String, Func<IComponentContext, TPropertyValue>) Augments the registration registration to contain a parameter that will be matched to a target property based on its name propertyName , resolved using propertyValueResolver . Declaration public static IRegistrationBuilder<TLimit, TActivatorData, TStyle> WithProperty<TLimit, TActivatorData, TStyle, TPropertyValue>(this IRegistrationBuilder<TLimit, TActivatorData, TStyle> registration, string propertyName, Func<IComponentContext, TPropertyValue> propertyValueResolver) where TActivatorData : ReflectionActivatorData Parameters Type Name Description IRegistrationBuilder <TLimit, TActivatorData, TStyle> registration The registration into which the parameter is being added. String propertyName The name of the property the parameter is for. Func < IComponentContext , TPropertyValue> propertyValueResolver The factory that creates or retrieves the value of the parameter being added. Returns Type Description IRegistrationBuilder <TLimit, TActivatorData, TStyle> The registration, so that additional configuration calls can be chained. Type Parameters Name Description TLimit Registration limit type. TActivatorData Activator data type. TStyle Registration style. TPropertyValue The type of the value of the parameter being added. Should be assignable to the target property."
  },
  "api/FGS.ComponentModel.DataAnnotations.SafeUrlAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.SafeUrlAttribute.html",
    "title": "Class SafeUrlAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class SafeUrlAttribute Safely validates a Url. Inheritance Object SafeUrlAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)] public sealed class SafeUrlAttribute : DataTypeAttribute Remarks Enforces a timeout when matching a Url to the regex to prevent a denial of service attack. See https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS for more info. Constructors | Improve this Doc View Source SafeUrlAttribute() Declaration public SafeUrlAttribute() Methods | Improve this Doc View Source IsValid(Object) Determines whether the specified value matches the pattern of a Url. Declaration public override bool IsValid(object value) Parameters Type Name Description Object value The value to validate. Returns Type Description Boolean true if the specified value is valid or null; otherwise, false. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.HttpContextExtensions.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class HttpContextExtensions Extends with functionality to query the current web request's stopwatch. Inheritance Object HttpContextExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.AspNetCore.Http.Extensions.RequestStopwatch Assembly : FGS.AspNetCore.Http.Extensions.RequestStopwatch.dll Syntax public static class HttpContextExtensions Methods | Improve this Doc View Source GetRequestStopwatchElapsed(HttpContext) Gets the current Elapsed value of the Stopwatch that has been embedded into the of the current request by an instance of RequestStopwatchMiddleware . Declaration public static TimeSpan? GetRequestStopwatchElapsed(this HttpContext self) Parameters Type Name Description HttpContext self The containing the Stopwatch to be queried. Returns Type Description Nullable < TimeSpan > Remarks Requires that self contains a well-known instance of Stopwatch , such as that introduced and managed by a RequestStopwatchMiddleware ."
  },
  "api/FGS.Autofac.Options.AutofacOptionsBuilder-1.html": {
    "href": "api/FGS.Autofac.Options.AutofacOptionsBuilder-1.html",
    "title": "Class AutofacOptionsBuilder<TOptions> | FoxGuard Foundation Libraries",
    "keywords": "Class AutofacOptionsBuilder<TOptions> Used to configure TOptions instances. Inheritance Object AutofacOptionsBuilder<TOptions> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Autofac.Options Assembly : FGS.Autofac.Options.dll Syntax public class AutofacOptionsBuilder<TOptions> where TOptions : class Type Parameters Name Description TOptions The type of Options being requested. Remarks Taken and modified from: https://github.com/aspnet/Extensions/blob/e311a440d51cddd8f645160d9e27a574c77955a1/src/Options/Options/src/OptionsBuilder.cs . Constructors | Improve this Doc View Source AutofacOptionsBuilder(ContainerBuilder, String) Initializes a new instance of the AutofacOptionsBuilder<TOptions> class. Declaration public AutofacOptionsBuilder(ContainerBuilder containerBuilder, string name) Parameters Type Name Description ContainerBuilder containerBuilder The ContainerBuilder for the Options being configured. String name The name of the TOptions instance. If null , is used. Properties | Improve this Doc View Source ContainerBuilder Gets the for the Options being configured. Declaration public ContainerBuilder ContainerBuilder { get; } Property Value Type Description ContainerBuilder | Improve this Doc View Source Name Gets the default name of the TOptions instance. Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Configure(Action<TOptions>) Registers an action used to configure a particular type of Options. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure(Action<TOptions> configureOptions) Parameters Type Name Description Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. | Improve this Doc View Source Configure<TDep>(Action<TOptions, TDep>) Registers an action used to configure a particular type of Options, wherein the action takes a single additional dependency parameter. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure<TDep>(Action<TOptions, TDep> configureOptions) where TDep : class Parameters Type Name Description Action <TOptions, TDep> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep The type of a dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source Configure<TDep1, TDep2>(Action<TOptions, TDep1, TDep2>) Registers an action used to configure a particular type of Options, wherein the action takes two additional dependency parameters. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure<TDep1, TDep2>(Action<TOptions, TDep1, TDep2> configureOptions) where TDep1 : class where TDep2 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source Configure<TDep1, TDep2, TDep3>(Action<TOptions, TDep1, TDep2, TDep3>) Registers an action used to configure a particular type of Options, wherein the action takes three additional dependency parameters. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure<TDep1, TDep2, TDep3>(Action<TOptions, TDep1, TDep2, TDep3> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source Configure<TDep1, TDep2, TDep3, TDep4>(Action<TOptions, TDep1, TDep2, TDep3, TDep4>) Registers an action used to configure a particular type of Options, wherein the action takes four additional dependency parameters. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure<TDep1, TDep2, TDep3, TDep4>(Action<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class where TDep4 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. TDep4 The type of the fourth dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source Configure<TDep1, TDep2, TDep3, TDep4, TDep5>(Action<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5>) Registers an action used to configure a particular type of Options, wherein the action takes five additional dependency parameters. Note: These are run before all PostConfigure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> Configure<TDep1, TDep2, TDep3, TDep4, TDep5>(Action<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class where TDep4 : class where TDep5 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. TDep4 The type of the fourth dependency resolved and passed to configureOptions when it is executed. TDep5 The type of the fifth dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source PostConfigure(Action<TOptions>) Registers an action used to configure a particular type of Options. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure(Action<TOptions> configureOptions) Parameters Type Name Description Action <TOptions> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. | Improve this Doc View Source PostConfigure<TDep>(Action<TOptions, TDep>) Registers an action used to configure a particular type of Options, wherein the action takes a single additional dependency parameter. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure<TDep>(Action<TOptions, TDep> configureOptions) where TDep : class Parameters Type Name Description Action <TOptions, TDep> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep The type of a dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source PostConfigure<TDep1, TDep2>(Action<TOptions, TDep1, TDep2>) Registers an action used to configure a particular type of Options, wherein the action takes two additional dependency parameters. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure<TDep1, TDep2>(Action<TOptions, TDep1, TDep2> configureOptions) where TDep1 : class where TDep2 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source PostConfigure<TDep1, TDep2, TDep3>(Action<TOptions, TDep1, TDep2, TDep3>) Registers an action used to configure a particular type of Options, wherein the action takes three additional dependency parameters. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure<TDep1, TDep2, TDep3>(Action<TOptions, TDep1, TDep2, TDep3> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source PostConfigure<TDep1, TDep2, TDep3, TDep4>(Action<TOptions, TDep1, TDep2, TDep3, TDep4>) Registers an action used to configure a particular type of Options, wherein the action takes four additional dependency parameters. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure<TDep1, TDep2, TDep3, TDep4>(Action<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class where TDep4 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. TDep4 The type of the fourth dependency resolved and passed to configureOptions when it is executed. | Improve this Doc View Source PostConfigure<TDep1, TDep2, TDep3, TDep4, TDep5>(Action<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5>) Registers an action used to configure a particular type of Options, wherein the action takes five additional dependency parameters. Note: These are run after all Configure(Action<TOptions>) . Declaration public virtual AutofacOptionsBuilder<TOptions> PostConfigure<TDep1, TDep2, TDep3, TDep4, TDep5>(Action<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions) where TDep1 : class where TDep2 : class where TDep3 : class where TDep4 : class where TDep5 : class Parameters Type Name Description Action <TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions The action used to configure the Options. Returns Type Description AutofacOptionsBuilder <TOptions> Returns an AutofacOptionsBuilder<TOptions> , so that additional configuration calls can be chained. Type Parameters Name Description TDep1 The type of the first dependency resolved and passed to configureOptions when it is executed. TDep2 The type of the second dependency resolved and passed to configureOptions when it is executed. TDep3 The type of the third dependency resolved and passed to configureOptions when it is executed. TDep4 The type of the fourth dependency resolved and passed to configureOptions when it is executed. TDep5 The type of the fifth dependency resolved and passed to configureOptions when it is executed. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.Abstractions.html": {
    "href": "api/FGS.Interception.Abstractions.html",
    "title": "Namespace FGS.Interception.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interception.Abstractions Interfaces IAsyncInvocation Represents an asynchronous method invocation that has been intercepted. IInterceptor Defines a discrete unit of behavior executed as part of the process of intercepting the execution of a member of a type. IInvocation Represents a method invocation that has been intercepted. IInvocationCommon Represents the commonalities between synchronous and asynchronous method invocations that are being intercepted."
  },
  "api/FGS.Linq.Expressions.QueryProviderExtensions.html": {
    "href": "api/FGS.Linq.Expressions.QueryProviderExtensions.html",
    "title": "Class QueryProviderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class QueryProviderExtensions Provides extension methods for IQueryProvider . Inheritance Object QueryProviderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Linq.Expressions Assembly : FGS.Linq.Expressions.dll Syntax public static class QueryProviderExtensions Methods | Improve this Doc View Source CreateScalarQuery<TResult>(IQueryProvider, Expression<Func<TResult>>) Wraps a non- IQueryable<T> query as a subselect and returns it as an IQueryable<T> . Declaration public static IQueryable<TResult> CreateScalarQuery<TResult>(this IQueryProvider queryProvider, Expression<Func<TResult>> selectExpression) Parameters Type Name Description IQueryProvider queryProvider The IQueryProvider that can translate expression trees into queries against an underlying storage mechanism. Expression < Func <TResult>> selectExpression An expression that selects a single value or anonymous object that is projected via expressions that can be converted into one or more subqueries. Returns Type Description IQueryable <TResult> An IQueryable<T> that selects a single row of one or more values that are projected by subqueries. Type Parameters Name Description TResult The type of the single row that will be in the result of the query. Remarks Taken and modified from: https://stackoverflow.com/a/8996021. Callers are responsible for authoring subqueries in such a way that the given queryProvider can interpret it."
  },
  "api/FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac.html": {
    "href": "api/FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac.html",
    "title": "Namespace FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Hosting.Extensions.DependencyInjection.Autofac Classes AutofacWebHostBuilderExtensions Extension methods for the interface."
  },
  "api/FGS.ComponentModel.DataAnnotations.Extensions.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.Extensions.html",
    "title": "Namespace FGS.ComponentModel.DataAnnotations.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.ComponentModel.DataAnnotations.Extensions Classes EnumExtensions Extends enums with the ability to retrieve value-specific metadata. ModelExtensions Extends all objects with the ability to retrieve model metadata."
  },
  "api/FGS.FaultHandling.Primitives.Retry.ObservableRetryPolicyDecorator.html": {
    "href": "api/FGS.FaultHandling.Primitives.Retry.ObservableRetryPolicyDecorator.html",
    "title": "Class ObservableRetryPolicyDecorator | FoxGuard Foundation Libraries",
    "keywords": "Class ObservableRetryPolicyDecorator An implementation of IRetryPolicy that decorates an inner implementation and allows an observer to be aware of when an execution attempt (including retries) is performed. Inheritance Object ObservableRetryPolicyDecorator Implements IRetryPolicy Namespace : FGS.FaultHandling.Primitives.Retry Assembly : FGS.FaultHandling.Primitives.dll Syntax public sealed class ObservableRetryPolicyDecorator : object, IRetryPolicy Constructors | Improve this Doc View Source ObservableRetryPolicyDecorator(IRetryPolicy, Action) Initializes a new instance of the ObservableRetryPolicyDecorator class. Declaration public ObservableRetryPolicyDecorator(IRetryPolicy decorated, Action afterExecute) Parameters Type Name Description IRetryPolicy decorated The decorated implementation of IRetryPolicy that is to be observed. Action afterExecute The that will be called in order to signal to the observer than an execution attempt has been performed. Methods | Improve this Doc View Source Execute(Action) Declaration public void Execute(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Execute<TResult>(Func<TResult>) Declaration public TResult Execute<TResult>(Func<TResult> action) Parameters Type Name Description Func <TResult> action Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ExecuteAsync(Func<Task>) Declaration public Task ExecuteAsync(Func<Task> action) Parameters Type Name Description Func < Task > action Returns Type Description Task | Improve this Doc View Source ExecuteAsync<TResult>(Func<Task<TResult>>) Declaration public Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> action) Parameters Type Name Description Func < Task <TResult>> action Returns Type Description Task <TResult> Type Parameters Name Description TResult Implements IRetryPolicy Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.ComponentModel.DataAnnotations.PasswordPolicyAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.PasswordPolicyAttribute.html",
    "title": "Class PasswordPolicyAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class PasswordPolicyAttribute Marks a member as having a minimum-length as per a password complexity policy. Inheritance Object PasswordPolicyAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax public class PasswordPolicyAttribute : MinLengthAttribute Constructors | Improve this Doc View Source PasswordPolicyAttribute(Int32) Initializes a new instance of the PasswordPolicyAttribute class. Declaration public PasswordPolicyAttribute(int length = 12) Parameters Type Name Description Int32 length The minimum required length of the annotated member. Defaults to 12 . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.CompositionRoot.html": {
    "href": "api/FGS.Autofac.CompositionRoot.html",
    "title": "Namespace FGS.Autofac.CompositionRoot | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.CompositionRoot Classes ContainerBuilderExtensions Extends with functionality to populate it en-masse from implementations of IModulesProvider ."
  },
  "api/FGS.Collections.Extensions.EnumerableExtensions.html": {
    "href": "api/FGS.Collections.Extensions.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class EnumerableExtensions Extends IEnumerable<T> with functionality that supplements the frameworks in-built collection querying mechanisms. Inheritance Object EnumerableExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Collections.Extensions Assembly : FGS.Collections.Extensions.dll Syntax public static class EnumerableExtensions Methods | Improve this Doc View Source DistinctBy<T, TIdentity>(IEnumerable<T>, Func<T, TIdentity>) Returns distinct elements from a sequence by using identitySelector to compare values. Declaration public static IEnumerable<T> DistinctBy<T, TIdentity>(this IEnumerable<T> source, Func<T, TIdentity> identitySelector) Parameters Type Name Description IEnumerable <T> source The sequence to remove duplicate elements from. Func <T, TIdentity> identitySelector A projection that produces values that are used for determining uniqueness. Returns Type Description IEnumerable <T> An IEnumerable<T> that contains distinct elements from the source sequence. Type Parameters Name Description T The type of the elements of source . TIdentity Remarks Taken and modified from: http://stackoverflow.com/questions/4607485/linq-distinct-use-delegate-for-equality-comparer ."
  },
  "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.html",
    "title": "Namespace FGS.AspNetCore.Http.Extensions.RequestStopwatch | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Http.Extensions.RequestStopwatch Classes AppBuilderExtensions Extends with functionality to configure middleware that will time web requests with a stopwatch. HttpContextExtensions Extends with functionality to query the current web request's stopwatch. RequestStopwatchMiddleware Request middleware that creates and manages a stopwatch to time the current request. ServiceCollectionExtensions Extends with functionality to register middleware that wraps web requests with stopwatches."
  },
  "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostCallingHostingMiddleware.html": {
    "href": "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostCallingHostingMiddleware.html",
    "title": "Class HostCallingHostingMiddleware | FoxGuard Foundation Libraries",
    "keywords": "Class HostCallingHostingMiddleware Implements an IHostingMiddleware that DOES continue execution into nested middleware. Inheritance Object HostCallingHostingMiddleware Implements IHostingMiddleware Namespace : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking Assembly : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.dll Syntax public sealed class HostCallingHostingMiddleware : object, IHostingMiddleware Implements IHostingMiddleware Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.Retry.IRetryBackoffCalculator.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.IRetryBackoffCalculator.html",
    "title": "Interface IRetryBackoffCalculator | FoxGuard Foundation Libraries",
    "keywords": "Interface IRetryBackoffCalculator Represents a calculation for how long the retry of an operation should be delayed based on which retry attempt ordinal it is. Namespace : FGS.FaultHandling.Abstractions.Retry Assembly : FGS.FaultHandling.Abstractions.dll Syntax public interface IRetryBackoffCalculator Methods | Improve this Doc View Source CalculateBackoff(Int32) Determines how long the retry of an operation should be delayed based on which retry attempt ordinal it is. Declaration TimeSpan CalculateBackoff(int retryAttempt) Parameters Type Name Description Int32 retryAttempt The ordinal of which retry attempt the backoff should be calculated for. Returns Type Description TimeSpan A TimeSpan representing the amount of time that should be waited before the next retry attempt. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.DependencyInjection.Autofac.html": {
    "href": "api/FGS.Extensions.Hosting.DependencyInjection.Autofac.html",
    "title": "Namespace FGS.Extensions.Hosting.DependencyInjection.Autofac | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Hosting.DependencyInjection.Autofac Classes AutofacHostBuilderExtensions Extension methods for the interface."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with functionality for registering mocks. Inheritance Object ContainerBuilderExtensions Namespace : FGS.Tests.Support.Autofac.Mocking Assembly : FGS.Tests.Support.Autofac.Mocking.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source RegisterMock<T>(ContainerBuilder, Scope) Registers a mocked T with the builder . Declaration public static Mock<T> RegisterMock<T>(this ContainerBuilder builder, Scope scope) where T : class Parameters Type Name Description ContainerBuilder builder The into which to register the mock. Scope scope The lifetime management semantics by which the component will be resolved. Returns Type Description Mock <T> A so that additional configuration calls may be chained. Type Parameters Name Description T The type of object to mock. Remarks The mocked object is registered with a deferred style, such that callers may continue to configure the mock until it is resolved. | Improve this Doc View Source RegisterUnboundMock(ContainerBuilder, Type, Scope) Registers mocks of the unbound generic type represented by unboundGeneric . Declaration public static void RegisterUnboundMock(this ContainerBuilder builder, Type unboundGeneric, Scope scope) Parameters Type Name Description ContainerBuilder builder The into which to register the mocks. Type unboundGeneric The type of unbound generic to generate mock registrations for. Scope scope The lifetime management semantics by which the component will be resolved."
  },
  "api/FGS.Linq.Extensions.Pagination.PaginationQueryableExtensions.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.PaginationQueryableExtensions.html",
    "title": "Class PaginationQueryableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class PaginationQueryableExtensions Extends with pagination capabilities. Inheritance Object PaginationQueryableExtensions Namespace : FGS.Linq.Extensions.Pagination Assembly : FGS.Linq.Extensions.Pagination.dll Syntax public static class PaginationQueryableExtensions : object Methods | Improve this Doc View Source Paginate<T>(IQueryable<T>, PaginationSpecification) Returns a query of a paginated subsection of the original source , paginated based on paginationSpecification . Declaration public static PageQuery<T> Paginate<T>(this IQueryable<T> source, PaginationSpecification paginationSpecification) Parameters Type Name Description IQueryable <T> source The query of items to paginate. PaginationSpecification paginationSpecification Specifies how the source should be paginated. Returns Type Description PageQuery <T> A PageQuery<T> representing the paginated results. Type Parameters Name Description T The type of items to paginate. Remarks Assumes source.Provider.Provider is able to translate and evaluate queries generated via ."
  },
  "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkIisEnvConfigurationProvider.html": {
    "href": "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkIisEnvConfigurationProvider.html",
    "title": "Class AwsElasticBeanstalkIisEnvConfigurationProvider | FoxGuard Foundation Libraries",
    "keywords": "Class AwsElasticBeanstalkIisEnvConfigurationProvider An implementation of that extracts \"IIS Environment\" configuration data and uses that as the actual configuration data being provided by this provider. Inheritance Object AwsElasticBeanstalkIisEnvConfigurationProvider Namespace : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv Assembly : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.dll Syntax public class AwsElasticBeanstalkIisEnvConfigurationProvider : JsonConfigurationProvider Constructors | Improve this Doc View Source AwsElasticBeanstalkIisEnvConfigurationProvider(AwsElasticBeanstalkContainerConfigurationConfigurationSource) Initializes a new instance of the AwsElasticBeanstalkIisEnvConfigurationProvider class. Declaration public AwsElasticBeanstalkIisEnvConfigurationProvider(AwsElasticBeanstalkContainerConfigurationConfigurationSource source) Parameters Type Name Description AwsElasticBeanstalkContainerConfigurationConfigurationSource source The source of the settings. Methods | Improve this Doc View Source Load(Stream) Loads the JSON data from a stream, but then extracts from it the \"IIS Environment\" configuration as the actual configuration data being provided by this provider. Declaration public override void Load(Stream stream) Parameters Type Name Description Stream stream The stream to read. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.Autofac.Mocking.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.html",
    "title": "Namespace FGS.Tests.Support.Autofac.Mocking | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Autofac.Mocking Classes ContainerBuilderExtensions Extends with functionality for registering mocks."
  },
  "api/FGS.Primitives.Extensions.html": {
    "href": "api/FGS.Primitives.Extensions.html",
    "title": "Namespace FGS.Primitives.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Primitives.Extensions Classes DateTimeOffsetExtensions StringExtension"
  },
  "api/FGS.FaultHandling.Primitives.Retry.ExponentialRetryBackoffCalculator.html": {
    "href": "api/FGS.FaultHandling.Primitives.Retry.ExponentialRetryBackoffCalculator.html",
    "title": "Class ExponentialRetryBackoffCalculator | FoxGuard Foundation Libraries",
    "keywords": "Class ExponentialRetryBackoffCalculator Calculates the duration of a wait between retries of an operation, using an exponential formula based on the retry attempt ordinal. Inheritance Object ExponentialRetryBackoffCalculator Implements IRetryBackoffCalculator Namespace : FGS.FaultHandling.Primitives.Retry Assembly : FGS.FaultHandling.Primitives.dll Syntax public sealed class ExponentialRetryBackoffCalculator : object, IRetryBackoffCalculator Methods | Improve this Doc View Source CalculateBackoff(Int32) Calculates the duration of a wait between retries of an operation, using an exponential formula based on the retry attempt ordinal. Declaration public TimeSpan CalculateBackoff(int retryAttempt) Parameters Type Name Description Int32 retryAttempt The ordinal of which retry attempt the backoff should be calculated for. Returns Type Description TimeSpan A representing the amount of time that should be waited before the next retry attempt. Implements IRetryBackoffCalculator Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.AutoFixture.Mocking.Options.AutoFixtureExtensions.html": {
    "href": "api/FGS.Tests.Support.AutoFixture.Mocking.Options.AutoFixtureExtensions.html",
    "title": "Class AutoFixtureExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutoFixtureExtensions Extends with the ability to register mocked implementations of and friends. Inheritance Object AutoFixtureExtensions Namespace : FGS.Tests.Support.AutoFixture.Mocking.Options Assembly : FGS.Tests.Support.AutoFixture.Mocking.Options.dll Syntax public static class AutoFixtureExtensions : object Methods | Improve this Doc View Source RegisterMockOptions<TOptions>(IFixture) Registers mock Options services (of type TOptions ) into fixture , all of which will always return a static anonymous TOptions value. Declaration public static void RegisterMockOptions<TOptions>(this IFixture fixture) where TOptions : class, new() Parameters Type Name Description IFixture fixture The into which to add the registrations. Type Parameters Name Description TOptions The type of Options value to wire up. | Improve this Doc View Source RegisterMockOptions<TOptions>(IFixture, TOptions) Registers mock Options services (of type TOptions ) into fixture , all of which will always return the value of optionsValue . Declaration public static void RegisterMockOptions<TOptions>(this IFixture fixture, TOptions optionsValue) where TOptions : class, new() Parameters Type Name Description IFixture fixture The into which to add the registrations. TOptions optionsValue The Options value that will always be returned by the matching Options services. Type Parameters Name Description TOptions The type of Options value to wire up. | Improve this Doc View Source RegisterMockOptions<TOptions>(IFixture, Func<TOptions>) Registers mock Options services (of type TOptions ) into fixture , all of which will always execute optionsProvider and return the result. Declaration public static void RegisterMockOptions<TOptions>(this IFixture fixture, Func<TOptions> optionsProvider) where TOptions : class, new() Parameters Type Name Description IFixture fixture The into which to add the registrations. Func <TOptions> optionsProvider A factory that creates or retrieves the Options value each time it is requested. Type Parameters Name Description TOptions The type of Options value to wire up."
  },
  "api/FGS.ComponentModel.DataAnnotations.RequiredIfTrueAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.RequiredIfTrueAttribute.html",
    "title": "Class RequiredIfTrueAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class RequiredIfTrueAttribute Marks a member as possibly being required, dependent on the value of a sibling member. Inheritance Object RequiredIfTrueAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class RequiredIfTrueAttribute : ValidationAttribute Remarks Taken and modified from: https://github.com/StefanKern/foolproof/blob/1996fa42dbbcad228c6bca7f790c905252bb4514/Foolproof/RequiredIf.cs . Constructors | Improve this Doc View Source RequiredIfTrueAttribute(String) Initializes a new instance of the RequiredIfTrueAttribute class. Declaration public RequiredIfTrueAttribute(string dependentProperty) Parameters Type Name Description String dependentProperty The name of the sibling property which must be true for the annotated member to be required. Fields | Improve this Doc View Source ClientTypeName Declaration public const string ClientTypeName = \"RequiredIf\" Field Value Type Description String Properties | Improve this Doc View Source ClientValidationParameters Gets data exposed for use by adapters that will relay it to client-side validation frameworks. Declaration public Dictionary<string, object> ClientValidationParameters { get; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source DependentProperty Gets the name of the sibling property which must be true for the annotated member to be required. Declaration public string DependentProperty { get; } Property Value Type Description String | Improve this Doc View Source DependentPropertyDisplayName Gets or sets the human-friendly way to render the name of the dependent sibling property in generated validation messages. Declaration public string DependentPropertyDisplayName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FormatErrorMessage(String) Declaration public override string FormatErrorMessage(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source IsValid(Object, ValidationContext) Declaration protected override ValidationResult IsValid(object value, ValidationContext validationContext) Parameters Type Name Description Object value ValidationContext validationContext Returns Type Description ValidationResult | Improve this Doc View Source IsValidGivenDependentPropertyValue(Object, Object) Determines whether or not the given value is valid based on the given dependentPropertyValue . Declaration protected static bool IsValidGivenDependentPropertyValue(object value, object dependentPropertyValue) Parameters Type Name Description Object value The value of the annotated member being validated. Object dependentPropertyValue The value of the sibling member that factors into validation. Returns Type Description Boolean Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Primitives.Extensions.StringExtension.html": {
    "href": "api/FGS.Primitives.Extensions.StringExtension.html",
    "title": "Class StringExtension | FoxGuard Foundation Libraries",
    "keywords": "Class StringExtension Inheritance Object StringExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Primitives.Extensions Assembly : FGS.Primitives.Extensions.dll Syntax public static class StringExtension Methods | Improve this Doc View Source Reverse(String) Declaration public static string Reverse(this string stringToReverse) Parameters Type Name Description String stringToReverse Returns Type Description String | Improve this Doc View Source TrimLeadingWhitespaceAndCharacters(String, Char[]) Declaration public static string TrimLeadingWhitespaceAndCharacters(this string stringToTrim, char[] charsToTrim) Parameters Type Name Description String stringToTrim Char [] charsToTrim Returns Type Description String | Improve this Doc View Source TrimWhitespaceAndCharacters(String, Char[]) Declaration public static string TrimWhitespaceAndCharacters(this string stringToTrim, char[] charsToTrim) Parameters Type Name Description String stringToTrim Char [] charsToTrim Returns Type Description String"
  },
  "api/FGS.Collections.Extensions.Pagination.EnumerableExtensions.html": {
    "href": "api/FGS.Collections.Extensions.Pagination.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class EnumerableExtensions Extends with functionality to facilitate pagination. Inheritance Object EnumerableExtensions Namespace : FGS.Collections.Extensions.Pagination Assembly : FGS.Collections.Extensions.Pagination.dll Syntax public static class EnumerableExtensions : object Methods | Improve this Doc View Source Paginate<T>(IEnumerable<T>, PaginationSpecification) Returns a paginated subsection of the original items , paginated based on paginationSpecification . Declaration public static Page<T> Paginate<T>(this IEnumerable<T> items, PaginationSpecification paginationSpecification) Parameters Type Name Description IEnumerable <T> items The items to paginate. PaginationSpecification paginationSpecification Specifies how the items should be paginated. Returns Type Description Page <T> A page of items of type T . Type Parameters Name Description T The type of items to paginate."
  },
  "api/FGS.Extensions.DependencyInjection.Autofac.ModulesProviderBasedAutofacServiceProviderFactory-1.html": {
    "href": "api/FGS.Extensions.DependencyInjection.Autofac.ModulesProviderBasedAutofacServiceProviderFactory-1.html",
    "title": "Class ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> | FoxGuard Foundation Libraries",
    "keywords": "Class ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> A factory for creating an Autofac-based . Inheritance Object ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> Namespace : FGS.Extensions.DependencyInjection.Autofac Assembly : FGS.Extensions.DependencyInjection.Autofac.dll Syntax public class ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> : IServiceProviderFactory<IServiceCollection> where TModulesProvider : IModulesProvider, new() Type Parameters Name Description TModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered. Remarks Taken and modified from: https://github.com/autofac/Autofac.Extensions.DependencyInjection/blob/36d487749ef7184357bbc4d162bf425b8474eb36/src/Autofac.Extensions.DependencyInjection/AutofacServiceProviderFactory.cs . Constructors | Improve this Doc View Source ModulesProviderBasedAutofacServiceProviderFactory(Action<IModule>, Action<ContainerBuilder>) Initializes a new instance of the ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> class. Declaration public ModulesProviderBasedAutofacServiceProviderFactory(Action<IModule> forEachModule = null, Action<ContainerBuilder> configurationAction = null) Parameters Type Name Description Action < IModule > forEachModule Action for each that can provide additional configuration before it is registered. Action < ContainerBuilder > configurationAction Action on a that adds component registrations to the container. Methods | Improve this Doc View Source CreateBuilder(IServiceCollection) Creates a container builder from an . Declaration public IServiceCollection CreateBuilder(IServiceCollection services) Parameters Type Name Description IServiceCollection services The collection of services. Returns Type Description IServiceCollection A service collection that can be used to create an . | Improve this Doc View Source CreateServiceProvider(IServiceCollection) Creates an from the given set of services. Declaration public IServiceProvider CreateServiceProvider(IServiceCollection services) Parameters Type Name Description IServiceCollection services The the services to create an from. Returns Type Description IServiceProvider An . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.Middleware.HostBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class HostBuilderExtensions Extends with functionality for configuring the usage of instances of IHostingMiddleware to intercept calls to the later-built . Inheritance Object HostBuilderExtensions Namespace : FGS.Extensions.Hosting.Middleware Assembly : FGS.Extensions.Hosting.Middleware.dll Syntax public static class HostBuilderExtensions : object Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseStartup<Startup>() .UseHostingMiddleware<MyHostingMiddleware>(); Methods | Improve this Doc View Source UseHostingMiddleware<THostingMiddleware>(IHostBuilder, Func<IServiceProvider, THostingMiddleware>) Adds hosting middleware functionality to the web host startup & graceful shutdown process, relying on an instance of THostingMiddleware to provide interceptor behavior. Declaration public static IHostBuilder UseHostingMiddleware<THostingMiddleware>(this IHostBuilder hostBuilder, Func<IServiceProvider, THostingMiddleware> hostingMiddlewareFactory = null) where THostingMiddleware : IHostingMiddleware Parameters Type Name Description IHostBuilder hostBuilder An instance of the program initialization abstraction that is to be modified. Func < IServiceProvider , THostingMiddleware> hostingMiddlewareFactory Optionally creates or retrieves an instance of THostingMiddleware to use. If not specified, an instance will be requested from the . Returns Type Description IHostBuilder A program initialization abstraction that has been augmented to apply a IHostingMiddleware to the eventually-created . Type Parameters Name Description THostingMiddleware The type of IHostingMiddleware that will be used to intercept web host startup & graceful shutdown. Remarks Multiple calls to this will apply multiple layers of the hosting middleware stack, each one specific to that invocation and desired middleware."
  },
  "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.RequestStopwatchMiddleware.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.RequestStopwatchMiddleware.html",
    "title": "Class RequestStopwatchMiddleware | FoxGuard Foundation Libraries",
    "keywords": "Class RequestStopwatchMiddleware Request middleware that creates and manages a stopwatch to time the current request. Inheritance Object RequestStopwatchMiddleware Namespace : FGS.AspNetCore.Http.Extensions.RequestStopwatch Assembly : FGS.AspNetCore.Http.Extensions.RequestStopwatch.dll Syntax public sealed class RequestStopwatchMiddleware : IMiddleware Remarks The current value of the current request's stopwatch can be retrieved using HttpContextExtensions . Constructors | Improve this Doc View Source RequestStopwatchMiddleware(ILoggerFactory) Initializes a new instance of the RequestStopwatchMiddleware class. Declaration public RequestStopwatchMiddleware(ILoggerFactory loggerFactory) Parameters Type Name Description ILoggerFactory loggerFactory Methods | Improve this Doc View Source InvokeAsync(HttpContext, RequestDelegate) Declaration public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters Type Name Description HttpContext context RequestDelegate next Returns Type Description Task Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.DynamicProxy.InterceptorAdapter-2.html": {
    "href": "api/FGS.Interception.DynamicProxy.InterceptorAdapter-2.html",
    "title": "Class InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> | FoxGuard Foundation Libraries",
    "keywords": "Class InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> Adapts our TInterceptor interceptor as an implementation of . Inheritance Object InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> Namespace : FGS.Interception.DynamicProxy Assembly : FGS.Interception.DynamicProxy.dll Syntax public sealed class InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> : Castle.DynamicProxy.IInterceptor where TInterceptor : IInterceptor Type Parameters Name Description TInterceptor The implementation type of IInterceptor being adapted. TInterceptorInstantiationData The type of data that should be provided to the underlying TInterceptor when it is being instantiated. Constructors | Improve this Doc View Source InterceptorAdapter(Func<Castle.DynamicProxy.IInvocation, TInterceptorInstantiationData>, Func<TInterceptorInstantiationData, TInterceptor>, Func<Castle.DynamicProxy.IInvocation, IInvocation>, Func<Castle.DynamicProxy.IInvocation, IAsyncInvocation>) Initializes a new instance of the InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> class. Declaration public InterceptorAdapter(Func<Castle.DynamicProxy.IInvocation, TInterceptorInstantiationData> interceptorInstantiationDataFactory, Func<TInterceptorInstantiationData, TInterceptor> adaptedFactory, Func<Castle.DynamicProxy.IInvocation, IInvocation> invocationAdapterFactory, Func<Castle.DynamicProxy.IInvocation, IAsyncInvocation> asyncInvocationAdapterFactory) Parameters Type Name Description Func < Castle.DynamicProxy.IInvocation , TInterceptorInstantiationData> interceptorInstantiationDataFactory A factory that can retrieve or create an instance of TInterceptorInstantiationData from an inbound . Func <TInterceptorInstantiationData, TInterceptor> adaptedFactory A factory that can retrieve or create an instance of TInterceptor based on a given TInterceptorInstantiationData . Func < Castle.DynamicProxy.IInvocation , IInvocation > invocationAdapterFactory A factory that can retrieve or create an instance of IInvocation based on an inbound . Func < Castle.DynamicProxy.IInvocation , IAsyncInvocation > asyncInvocationAdapterFactory A factory that can retrieve or create an instance of IAsyncInvocation based on an inbound . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.Base64UrlEncodedByteArrayAttribute.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.Base64UrlEncodedByteArrayAttribute.html",
    "title": "Class Base64UrlEncodedByteArrayAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class Base64UrlEncodedByteArrayAttribute Indicates that the given model member should be bound with Base64UrlEncodedByteArrayModelBinder . Inheritance Object Base64UrlEncodedByteArrayAttribute Namespace : FGS.AspNetCore.Mvc.ModelBinding Assembly : FGS.AspNetCore.Mvc.ModelBinding.dll Syntax public class Base64UrlEncodedByteArrayAttribute : ModelBinderAttribute Constructors | Improve this Doc View Source Base64UrlEncodedByteArrayAttribute() Creates a new instances of Base64UrlEncodedByteArrayAttribute . Declaration public Base64UrlEncodedByteArrayAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.Registration.Extensions.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Autofac.Registration.Extensions.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with helpers that reduce the overhead of certain common registration patterns. Inheritance Object ContainerBuilderExtensions Namespace : FGS.Autofac.Registration.Extensions Assembly : FGS.Autofac.Registration.Extensions.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source RegisterDecorator<TDecorator, TImplementation, TService>(ContainerBuilder, Scope) Registers a decorated service - of type TImplementation and decorated by type TDecorator - as an implementation of TService , in the scope of scope . Declaration public static IRegistrationBuilder<TService, SimpleActivatorData, SingleRegistrationStyle> RegisterDecorator<TDecorator, TImplementation, TService>(this ContainerBuilder builder, Scope scope) where TDecorator : TService where TImplementation : TService Parameters Type Name Description ContainerBuilder builder The to add the registrations to. Scope scope Indicates the lifetime management semantics by which the components will be resolved. Returns Type Description IRegistrationBuilder <TService, SimpleActivatorData , SingleRegistrationStyle > The of the outer-most component, so that additional registration calls can be chained. Type Parameters Name Description TDecorator The type that decorates the underlying implementation. TImplementation The underlying implementation. TService The service being implemented. | Improve this Doc View Source RegisterDecorator<TDecorator2, TDecorator1, TImplementation, TService>(ContainerBuilder, Scope) Registers a doubly-decorated service - of type TImplementation , decorated by types TDecorator1 and TDecorator2 - as an implementation of TService , in the scope of scope . Declaration public static IRegistrationBuilder<TService, SimpleActivatorData, SingleRegistrationStyle> RegisterDecorator<TDecorator2, TDecorator1, TImplementation, TService>(this ContainerBuilder builder, Scope scope) where TDecorator2 : TService where TDecorator1 : TService where TImplementation : TService Parameters Type Name Description ContainerBuilder builder The to add the registrations to. Scope scope Indicates the lifetime management semantics by which the components will be resolved. Returns Type Description IRegistrationBuilder <TService, SimpleActivatorData , SingleRegistrationStyle > The of the outer-most component, so that additional registration calls can be chained. Type Parameters Name Description TDecorator2 The outer-most type that decorates components in this registration. TDecorator1 The type that decorates the inner-most component in this registration. TImplementation The underlying inner-most implementation. TService The service being implemented. | Improve this Doc View Source RegisterFactoryFromIndexLookup<TKey, TService>(ContainerBuilder) Registers a -based factory as a wrapper around an erstwhile resolvable . This allows consumers to take advantage semantics without directly coupling to Autofac's types. Declaration public static IRegistrationBuilder<Func<TKey, TService>, SimpleActivatorData, SingleRegistrationStyle> RegisterFactoryFromIndexLookup<TKey, TService>(this ContainerBuilder builder) Parameters Type Name Description ContainerBuilder builder The to add registrations to. Returns Type Description IRegistrationBuilder < Func <TKey, TService>, SimpleActivatorData , SingleRegistrationStyle > The , so that additional registration calls can be chained. Type Parameters Name Description TKey The type of keys in the index being wrapped. TService The type of services (values) in the index being wrapped."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Configuration.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Configuration.html",
    "title": "Namespace FGS.Tests.Support.Autofac.Mocking.Configuration | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Autofac.Mocking.Configuration Classes ContainerBuilderExtensions Extends with the ability to register an empty implementation of and friends."
  },
  "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartHostBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.DelayedStart.DelayedStartHostBuilderExtensions.html",
    "title": "Class DelayedStartHostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class DelayedStartHostBuilderExtensions Extends with functionality for configuring a delayed startup. Inheritance Object DelayedStartHostBuilderExtensions Namespace : FGS.Extensions.Hosting.Middleware.DelayedStart Assembly : FGS.Extensions.Hosting.Middleware.DelayedStart.dll Syntax public static class DelayedStartHostBuilderExtensions : object Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseStartup<Startup>() .WithDelayedStart(TimeSpan.FromSeconds(5)); Methods | Improve this Doc View Source WithDelayedStart(IHostBuilder, TimeSpan) Adds hosting middleware functionality to the web host startup process which will delay the startup by the provided amount of time. Declaration public static IHostBuilder WithDelayedStart(this IHostBuilder hostBuilder, TimeSpan delay) Parameters Type Name Description IHostBuilder hostBuilder An instance of the program initialization abstraction that is to be modified. TimeSpan delay The amount of time that startup will be delayed. Returns Type Description IHostBuilder The program initialization abstraction which has been augmented to apply a delayed start. Remarks Multiple calls to this will apply consecutive delays."
  },
  "api/FGS.ComponentModel.DataAnnotations.CveAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.CveAttribute.html",
    "title": "Class CveAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class CveAttribute Marks a member as requiring formatting that fits a Mitre CVE ID. Inheritance Object CveAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax public class CveAttribute : RegularExpressionAttribute Remarks For more information, see: https://cve.mitre.org/cve/identifiers/index.html . Constructors | Improve this Doc View Source CveAttribute() Initializes a new instance of the CveAttribute class. Declaration public CveAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Rx.Extensions.HistoricalReactiveProcessor.html": {
    "href": "api/FGS.Rx.Extensions.HistoricalReactiveProcessor.html",
    "title": "Class HistoricalReactiveProcessor | FoxGuard Foundation Libraries",
    "keywords": "Class HistoricalReactiveProcessor Represents the capability to take a collection of timestamped events, process it with Rx operators, and await the materialization of the result back into a collection. Inheritance Object HistoricalReactiveProcessor Implements IHistoricalReactiveProcessor Namespace : FGS.Rx.Extensions Assembly : FGS.Rx.Extensions.dll Syntax public class HistoricalReactiveProcessor : object, IHistoricalReactiveProcessor Constructors | Improve this Doc View Source HistoricalReactiveProcessor(Func<HistoricalScheduler>) Initializes a new instance of the HistoricalReactiveProcessor class. Declaration public HistoricalReactiveProcessor(Func<HistoricalScheduler> historicalSchedulerFactory) Parameters Type Name Description Func < HistoricalScheduler > historicalSchedulerFactory A factory that creates or retrieves an instance of that is used to process the stream of events by ignoring the normal flow of time. Methods | Improve this Doc View Source MapAsync<TInput, TResult>(IEnumerable<Timestamped<TInput>>, Func<IObservable<TInput>, IScheduler, IObservable<TResult>>) Declaration public Task<IEnumerable<Timestamped<TResult>>> MapAsync<TInput, TResult>(IEnumerable<Timestamped<TInput>> inputs, Func<IObservable<TInput>, IScheduler, IObservable<TResult>> mapper) Parameters Type Name Description IEnumerable < Timestamped <TInput>> inputs Func < IObservable <TInput>, IScheduler , IObservable <TResult>> mapper Returns Type Description Task < IEnumerable < Timestamped <TResult>>> Type Parameters Name Description TInput TResult Implements IHistoricalReactiveProcessor Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicyCoordinator.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicyCoordinator.html",
    "title": "Interface IRetryPolicyCoordinator | FoxGuard Foundation Libraries",
    "keywords": "Interface IRetryPolicyCoordinator Represents a parameter-less factory of IRetryPolicy instances. Namespace : FGS.FaultHandling.Abstractions.Retry Assembly : FGS.FaultHandling.Abstractions.dll Syntax public interface IRetryPolicyCoordinator Methods | Improve this Doc View Source RequestPolicy() Creates an instance of IRetryPolicy . Declaration IRetryPolicy RequestPolicy() Returns Type Description IRetryPolicy Returns an IRetryPolicy . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Logging.Serilog.html": {
    "href": "api/FGS.Extensions.Logging.Serilog.html",
    "title": "Namespace FGS.Extensions.Logging.Serilog | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Logging.Serilog Classes SerilogLoggerFactoryExtensions Extends with Serilog configuration methods. SerilogLoggerProvider An that pipes events through Serilog. SerilogLoggingBuilderExtensions Extends with Serilog configuration methods."
  },
  "api/FGS.ComponentModel.DataAnnotations.CveListAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.CveListAttribute.html",
    "title": "Class CveListAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class CveListAttribute Marks a member as requiring formatting that fits a comma-separated list of Mitre CVE IDs. Inheritance Object CveListAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax public class CveListAttribute : RegularExpressionAttribute Remarks For more information, see: https://cve.mitre.org/cve/identifiers/index.html . Constructors | Improve this Doc View Source CveListAttribute() Initializes a new instance of the CveListAttribute class. Declaration public CveListAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.Middleware.Abstractions.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.Abstractions.html",
    "title": "Namespace FGS.Extensions.Hosting.Middleware.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.Hosting.Middleware.Abstractions Interfaces IHostingMiddleware Defines middleware that can be added to the application's web hosting pipeline as a means to asynchronously intercept startup and graceful shutdowns."
  },
  "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.SerilogWebHostBuilderExtensions.html": {
    "href": "api/FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.SerilogWebHostBuilderExtensions.html",
    "title": "Class SerilogWebHostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogWebHostBuilderExtensions Extends with functionality to configure Serilog. Inheritance Object SerilogWebHostBuilderExtensions Namespace : FGS.AspNetCore.Hosting.Extensions.Logging.Serilog Assembly : FGS.AspNetCore.Hosting.Extensions.Logging.Serilog.dll Syntax public static class SerilogWebHostBuilderExtensions : object Methods | Improve this Doc View Source UseSerilog(IWebHostBuilder, Action<WebHostBuilderContext, LoggerConfiguration>, Boolean) Sets Serilog as the logging provider. Declaration public static IWebHostBuilder UseSerilog(this IWebHostBuilder builder, Action<WebHostBuilderContext, LoggerConfiguration> configureLogger, bool preserveStaticLogger = false) Parameters Type Name Description IWebHostBuilder builder The web host builder to configure. Action < WebHostBuilderContext , LoggerConfiguration > configureLogger The delegate for configuring the that will be used to construct a . Boolean preserveStaticLogger Indicates whether to preserve the value of . Returns Type Description IWebHostBuilder The web host builder. Remarks A is supplied so that configuration and hosting information can be used. The logger will be shut down when application services are disposed. | Improve this Doc View Source UseSerilog(IWebHostBuilder, Serilog.ILogger, Boolean) Sets Serilog as the logging provider. Declaration public static IWebHostBuilder UseSerilog(this IWebHostBuilder builder, Serilog.ILogger logger = null, bool dispose = false) Parameters Type Name Description IWebHostBuilder builder The web host builder to configure. Serilog.ILogger logger The Serilog logger; if not supplied, the static will be used. Boolean dispose When true, dispose logger when the framework disposes the provider. If the logger is not specified but dispose is true, the method will be called on the static class instead. Returns Type Description IWebHostBuilder The web host builder. Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseSerilog() .UseStartup<Startup>(); | Improve this Doc View Source UseSerilogExternallyRegistered(IWebHostBuilder) Sets Serilog as the logging provider, using an already-registered . Declaration public static IWebHostBuilder UseSerilogExternallyRegistered(this IWebHostBuilder builder) Parameters Type Name Description IWebHostBuilder builder The web host builder to configure. Returns Type Description IWebHostBuilder The web host builder. Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseSerilogExternallyRegistered() .UseStartup<Startup>();"
  },
  "api/FGS.FaultHandling.Predicates.Win32.html": {
    "href": "api/FGS.FaultHandling.Predicates.Win32.html",
    "title": "Namespace FGS.FaultHandling.Predicates.Win32 | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Predicates.Win32 Classes Win32ExceptionRetryPredicate Indicates whether the given exception, or its inner exception, is a , for which we want to attempt to retry the operation."
  },
  "api/FGS.Autofac.CompositionRoot.Abstractions.html": {
    "href": "api/FGS.Autofac.CompositionRoot.Abstractions.html",
    "title": "Namespace FGS.Autofac.CompositionRoot.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.CompositionRoot.Abstractions Interfaces IModulesProvider Represents the ability to enumerate Autofac modules that should be registered with an Autofac container builder."
  },
  "api/FGS.Primitives.Time.FreezableClock.html": {
    "href": "api/FGS.Primitives.Time.FreezableClock.html",
    "title": "Class FreezableClock | FoxGuard Foundation Libraries",
    "keywords": "Class FreezableClock Inheritance Object FreezableClock Implements IClock IFreezableClock Namespace : FGS.Primitives.Time Assembly : FGS.Primitives.Time.dll Syntax public sealed class FreezableClock : object, IClock, IFreezableClock Constructors | Improve this Doc View Source FreezableClock(IClock) Declaration public FreezableClock(IClock clock) Parameters Type Name Description IClock clock Properties | Improve this Doc View Source Now Declaration public DateTimeOffset Now { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source UtcNow Declaration public DateTimeOffset UtcNow { get; } Property Value Type Description DateTimeOffset Methods | Improve this Doc View Source FreezeTime() Declaration public void FreezeTime() | Improve this Doc View Source UnfreezeTime() Declaration public void UnfreezeTime() Implements IClock IFreezableClock Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.ComponentModel.DataAnnotations.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.html",
    "title": "Namespace FGS.ComponentModel.DataAnnotations | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.ComponentModel.DataAnnotations Classes CveAttribute Marks a member as requiring formatting that fits a Mitre CVE ID. CveListAttribute Marks a member as requiring formatting that fits a comma-separated list of Mitre CVE IDs. MicrosoftSecurityBulletinAttribute Marks a member as requiring formatting that fits the legacy Microsoft security bulletin id number (e.g. \"MS16-XXX\"). PasswordPolicyAttribute Marks a member as having a minimum-length as per a password complexity policy. RequiredIfTrueAttribute Marks a member as possibly being required, dependent on the value of a sibling member. SafeEmailAddressAttribute Safely validates an email address. SafePhoneNumberAttribute Safely validates a phone number. SafeUrlAttribute Safely validates a Url."
  },
  "api/FGS.Extensions.Logging.Serilog.SerilogLoggerFactoryExtensions.html": {
    "href": "api/FGS.Extensions.Logging.Serilog.SerilogLoggerFactoryExtensions.html",
    "title": "Class SerilogLoggerFactoryExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogLoggerFactoryExtensions Extends with Serilog configuration methods. Inheritance Object SerilogLoggerFactoryExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Extensions.Logging.Serilog Assembly : FGS.Extensions.Logging.Serilog.dll Syntax public static class SerilogLoggerFactoryExtensions Remarks Taken and modified from: https://github.com/serilog/serilog-extensions-logging/blob/767f884a1dafb033a8232c6c8e61b8f4bf5db6ed/src/Serilog.Extensions.Logging/SerilogLoggerFactoryExtensions.cs . Methods | Improve this Doc View Source AddSerilog(ILoggerFactory, Serilog.ILogger, Boolean) Adds Serilog to the logging pipeline. Declaration public static ILoggerFactory AddSerilog(this ILoggerFactory factory, Serilog.ILogger logger = null, bool dispose = false) Parameters Type Name Description ILoggerFactory factory The logger factory to add a SerilogLoggerProvider to. Serilog.ILogger logger The Serilog logger; if not supplied, will be used. Boolean dispose When true, dispose logger when the framework disposes the provider. If the logger is not specified but dispose is true, the method will be called on the static class instead. Returns Type Description ILoggerFactory The logger factory."
  },
  "api/FGS.Interception.Annotations.FaultHandling.RetryOnFaultAttribute.html": {
    "href": "api/FGS.Interception.Annotations.FaultHandling.RetryOnFaultAttribute.html",
    "title": "Class RetryOnFaultAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class RetryOnFaultAttribute Indicates that the target type or member should be intercepted with retry-on-fault semantics. Inheritance Object Attribute RetryOnFaultAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Interception.Annotations.FaultHandling Assembly : FGS.Interception.Annotations.FaultHandling.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class RetryOnFaultAttribute : Attribute, _Attribute Remarks Does not actually perform any interception - external wiring is required for that. Implements System.Runtime.InteropServices._Attribute Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.DynamicScoping.RegistrationBuilderExtensions.html": {
    "href": "api/FGS.Autofac.DynamicScoping.RegistrationBuilderExtensions.html",
    "title": "Class RegistrationBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class RegistrationBuilderExtensions Extends with functionality that allows specififying object lifetime via an enum value. Inheritance Object RegistrationBuilderExtensions Namespace : FGS.Autofac.DynamicScoping Assembly : FGS.Autofac.DynamicScoping.dll Syntax public static class RegistrationBuilderExtensions : object Methods | Improve this Doc View Source In<TLimit, TActivatorData, TStyle>(IRegistrationBuilder<TLimit, TActivatorData, TStyle>, Scope) Configure the component so that is resolved using the semantics of the scope indicated by scope . Declaration public static IRegistrationBuilder<TLimit, TActivatorData, TStyle> In<TLimit, TActivatorData, TStyle>(this IRegistrationBuilder<TLimit, TActivatorData, TStyle> registration, Scope scope) Parameters Type Name Description IRegistrationBuilder <TLimit, TActivatorData, TStyle> registration The component registration that is being created. Scope scope Indicates the lifetime management semantics by which the component will be resolved. Returns Type Description IRegistrationBuilder <TLimit, TActivatorData, TStyle> A registration builder allowing further configuration of the component. Type Parameters Name Description TLimit TActivatorData TStyle"
  },
  "api/FGS.Tests.Support.AspNetCore.Mvc.AutoFixtureExtensions.html": {
    "href": "api/FGS.Tests.Support.AspNetCore.Mvc.AutoFixtureExtensions.html",
    "title": "Class AutoFixtureExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutoFixtureExtensions Extends with functionality to create instances of types helpful for testing code dependent on ASP.NET Core. Inheritance Object AutoFixtureExtensions Namespace : FGS.Tests.Support.AspNetCore.Mvc Assembly : FGS.Tests.Support.AspNetCore.Mvc.dll Syntax public static class AutoFixtureExtensions : object Methods | Improve this Doc View Source BuildApiController<TApiController>(Fixture, Action<Mock<HttpContext>>) Creates a that can be used to create instances of TApiController . Declaration public static IPostprocessComposer<TApiController> BuildApiController<TApiController>(this Fixture fixture, Action<Mock<HttpContext>> httpContextAdditionalSetup = null) where TApiController : ControllerBase Parameters Type Name Description Fixture fixture The used to generate values. Action < Mock < HttpContext >> httpContextAdditionalSetup An optional action that defines additional logic for configuring the that will be used in composed object graphs. Returns Type Description IPostprocessComposer <TApiController> A that can be used to create instances of TApiController . Type Parameters Name Description TApiController The type of API controller to create a composer for. | Improve this Doc View Source BuildController<TController>(Fixture, Action<Mock<HttpContext>>) Creates a that can be used to create instances of TController . Declaration public static IPostprocessComposer<TController> BuildController<TController>(this Fixture fixture, Action<Mock<HttpContext>> httpContextAdditionalSetup = null) where TController : Controller Parameters Type Name Description Fixture fixture The used to generate values. Action < Mock < HttpContext >> httpContextAdditionalSetup An optional action that defines additional logic for configuring the that will be used in composed object graphs. Returns Type Description IPostprocessComposer <TController> A that can be used to create instances of TController . Type Parameters Name Description TController The type of controller to create a composer for. | Improve this Doc View Source CreateApiController<TApiController>(Fixture, Action<Mock<HttpContext>>) Creates an API controller of type TApiController . Declaration public static TApiController CreateApiController<TApiController>(this Fixture fixture, Action<Mock<HttpContext>> httpContextAdditionalSetup = null) where TApiController : ControllerBase Parameters Type Name Description Fixture fixture The used to generate values. Action < Mock < HttpContext >> httpContextAdditionalSetup An optional action that defines additional logic for configuring the that will be used in composed object graphs. Returns Type Description TApiController An instance of TApiController . Type Parameters Name Description TApiController The type of API controller to create. | Improve this Doc View Source CreateController<TController>(Fixture, Action<Mock<HttpContext>>) Creates a controller of type TController . Declaration public static TController CreateController<TController>(this Fixture fixture, Action<Mock<HttpContext>> httpContextAdditionalSetup = null) where TController : Controller Parameters Type Name Description Fixture fixture The used to generate values. Action < Mock < HttpContext >> httpContextAdditionalSetup An optional action that defines additional logic for configuring the that will be used in composed object graphs. Returns Type Description TController An instance of TController . Type Parameters Name Description TController The type of controller to create. | Improve this Doc View Source MockUrlHelper(Fixture) Creates and registers a mocked with the fixture , and returns it for further configuration. Declaration public static Mock<IUrlHelper> MockUrlHelper(this Fixture fixture) Parameters Type Name Description Fixture fixture The into which the mock is registered. Returns Type Description Mock < IUrlHelper > A ."
  },
  "api/FGS.Autofac.Interceptors.FaultHandling.FaultHandlingModule.html": {
    "href": "api/FGS.Autofac.Interceptors.FaultHandling.FaultHandlingModule.html",
    "title": "Class FaultHandlingModule | FoxGuard Foundation Libraries",
    "keywords": "Class FaultHandlingModule Registers interception such that types annotated with RetryOnFaultAttribute will have their virtual members intercepted by RetryInterceptor , which will retry failed operations with an exponential back-off calculated by ExponentialRetryBackoffCalculator . Assumes that zero or more instances of IExceptionRetryPredicate are registered, which help shape the retry behavior. Assumes an is resolvable, with a section named FaultHandling that is mappable to FaultHandlingConfiguration . Inheritance Object FaultHandlingModule Namespace : FGS.Autofac.Interceptors.FaultHandling Assembly : FGS.Autofac.Interceptors.FaultHandling.dll Syntax public sealed class FaultHandlingModule : Module Methods | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description ContainerBuilder builder Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.ComponentModel.DataAnnotations.Extensions.ModelExtensions.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.Extensions.ModelExtensions.html",
    "title": "Class ModelExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ModelExtensions Extends all objects with the ability to retrieve model metadata. Inheritance Object ModelExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.ComponentModel.DataAnnotations.Extensions Assembly : FGS.ComponentModel.DataAnnotations.Extensions.dll Syntax public static class ModelExtensions Methods | Improve this Doc View Source GetDisplayName<TModel, TProperty>(TModel, Expression<Func<TModel, TProperty>>) Gets the display name of a model member, typically provided by an appropriate annotation of DisplayNameAttribute . Declaration public static string GetDisplayName<TModel, TProperty>(TModel model, Expression<Func<TModel, TProperty>> expression) Parameters Type Name Description TModel model The model containing the member whose display name is sought. Expression < Func <TModel, TProperty>> expression An expression that selects the subject member from the provided model . Returns Type Description String The display name of the indicated model member. Type Parameters Name Description TModel The type of model containing the member whose display name is sought. TProperty The type of the member whose display name is sought."
  },
  "api/FGS.Autofac.Options.html": {
    "href": "api/FGS.Autofac.Options.html",
    "title": "Namespace FGS.Autofac.Options | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.Options Classes AutofacOptionsBuilder<TOptions> Used to configure TOptions instances. OptionsConfigurationContainerBuilderExtensions Extension methods for adding configuration-related Options services to the Autofac-based DI container. OptionsContainerBuilderExtensions Extension methods for adding Options services to the Autofac-based DI container."
  },
  "api/FGS.Extensions.DependencyInjection.Autofac.html": {
    "href": "api/FGS.Extensions.DependencyInjection.Autofac.html",
    "title": "Namespace FGS.Extensions.DependencyInjection.Autofac | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Extensions.DependencyInjection.Autofac Classes ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> A factory for creating an Autofac-based . ServiceCollectionExtensions Extension methods on to register the ."
  },
  "api/FGS.Collections.Extensions.html": {
    "href": "api/FGS.Collections.Extensions.html",
    "title": "Namespace FGS.Collections.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Collections.Extensions Classes EnumerableExtensions Extends IEnumerable<T> with functionality that supplements the frameworks in-built collection querying mechanisms."
  },
  "api/FGS.Configuration.Abstractions.ConfigurationExtensions.html": {
    "href": "api/FGS.Configuration.Abstractions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ConfigurationExtensions Extends with functionality to read a IConnectionString . Inheritance Object ConfigurationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Configuration.Abstractions Assembly : FGS.Configuration.Abstractions.dll Syntax public static class ConfigurationExtensions Methods | Improve this Doc View Source GetConnectionStringAndProvider(IConfiguration, String) Reads a IConnectionString by reading from a section named ConnectionStrings in the given configuration . The connection string value is located at a key with the name name , whereas the ADO.NET provider name is sought at the key with the same name but suffixed with _ProviderName . Declaration public static IConnectionString GetConnectionStringAndProvider(this IConfiguration configuration, string name) Parameters Type Name Description IConfiguration configuration The configuration from which to read the IConnectionString . Must contain a section named ConnectionStrings . String name The name of the connection string that is sought. Returns Type Description IConnectionString The retrieved IConnectionString ."
  },
  "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicy.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.IRetryPolicy.html",
    "title": "Interface IRetryPolicy | FoxGuard Foundation Libraries",
    "keywords": "Interface IRetryPolicy Represents a retry policy. Namespace : FGS.FaultHandling.Abstractions.Retry Assembly : FGS.FaultHandling.Abstractions.dll Syntax public interface IRetryPolicy Methods | Improve this Doc View Source Execute(Action) Execute the given action within the retry policy. Declaration void Execute(Action action) Parameters Type Name Description Action action The action to execute. | Improve this Doc View Source Execute<TResult>(Func<TResult>) Execute the given func within the retry policy. Declaration TResult Execute<TResult>(Func<TResult> action) Parameters Type Name Description Func <TResult> action The action to execute. Returns Type Description TResult The return value of action . Type Parameters Name Description TResult The return type of the action . | Improve this Doc View Source ExecuteAsync(Func<Task>) Execute the given async action within the retry policy. Declaration Task ExecuteAsync(Func<Task> action) Parameters Type Name Description Func < Task > action The action to execute. Returns Type Description Task A Task pointing to the action . | Improve this Doc View Source ExecuteAsync<TResult>(Func<Task<TResult>>) Execute the given async func within the retry policy. Declaration Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> action) Parameters Type Name Description Func < Task <TResult>> action The action to execute. Returns Type Description Task <TResult> A Task<TResult> pointing to the return value of action . Type Parameters Name Description TResult The return type of the action . Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.Abstractions.IAsyncInvocation.html": {
    "href": "api/FGS.Interception.Abstractions.IAsyncInvocation.html",
    "title": "Interface IAsyncInvocation | FoxGuard Foundation Libraries",
    "keywords": "Interface IAsyncInvocation Represents an asynchronous method invocation that has been intercepted. Inherited Members IInvocationCommon.GetArgumentValue(Int32) IInvocationCommon.GetConcreteMethod() IInvocationCommon.GetConcreteMethodInvocationTarget() IInvocationCommon.SetArgumentValue(Int32, Object) IInvocationCommon.Arguments IInvocationCommon.GenericArguments IInvocationCommon.InvocationTarget IInvocationCommon.Method IInvocationCommon.MethodInvocationTarget IInvocationCommon.Proxy IInvocationCommon.ReturnValue IInvocationCommon.TargetType Namespace : FGS.Interception.Abstractions Assembly : FGS.Interception.Abstractions.dll Syntax public interface IAsyncInvocation : IInvocationCommon Methods | Improve this Doc View Source ProceedAsync() Asynchronously proceeds the call to the next interceptor in line, and ultimately to the target method. Declaration Task ProceedAsync() Returns Type Description Task A Task to await the completion of the method invocation. The returned task will not contain the return value of the invocation. For that, use the ReturnValue property. Remarks To get or set the invocation return value, use the ReturnValue property. Since interface proxies without a target don't have the target implementation to proceed to, it is important, that the last interceptor does not call this method, otherwise a will be thrown. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.html",
    "title": "Namespace FGS.AspNetCore.Mvc.ModelBinding | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Mvc.ModelBinding Classes Base64UrlEncodedByteArrayAttribute Indicates that the given model member should be bound with Base64UrlEncodedByteArrayModelBinder . Base64UrlEncodedByteArrayModelBinder An implementation of for base-64 encoded byte arrays that supports both of ASP.NET Core's contemporary and legacy implementations of URL encoding of such. ParseMethodInvokingModelBinder An implementation of that defers its underlying implementation to a given static Parse method with a signature shaped like primitive Parse methods such as . StringCleanupAttribute Indicates that the given model member should be bound with StringCleanupModelBinder . StringCleanupModelBinder An implementation of that trims whitespace and pairs of various kinds of quotation marks from the ends of a text member."
  },
  "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.ServiceCollectionExtensions.html": {
    "href": "api/FGS.AspNetCore.Http.Extensions.RequestStopwatch.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ServiceCollectionExtensions Extends with functionality to register middleware that wraps web requests with stopwatches. Inheritance Object ServiceCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.AspNetCore.Http.Extensions.RequestStopwatch Assembly : FGS.AspNetCore.Http.Extensions.RequestStopwatch.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddRequestStopwatch(IServiceCollection) Registers RequestStopwatchMiddleware with services . Declaration public static void AddRequestStopwatch(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Remarks Remember to use UseRequestStopwatch(IApplicationBuilder) to register the middleware with the request pipeline. Examples services.AddRequestStopwatch();"
  },
  "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.HealthChecksBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.HealthChecksBuilderExtensions.html",
    "title": "Class HealthChecksBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class HealthChecksBuilderExtensions Extends with the ability to add a that checks an Entity Framework 6 database context. Inheritance Object HealthChecksBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Extensions.Diagnostics.HealthChecks.EntityFramework Assembly : FGS.Extensions.Diagnostics.HealthChecks.EntityFramework.dll Syntax public static class HealthChecksBuilderExtensions Methods | Improve this Doc View Source AddEntityFramework<TDbContext>(IHealthChecksBuilder, Func<IServiceProvider, TDbContext>, Func<TDbContext, IQueryable<Boolean>>, String, Nullable<HealthStatus>, IEnumerable<String>) Adds an EntityFrameworkHealthCheck<TDbContext> to builder . Declaration public static void AddEntityFramework<TDbContext>(this IHealthChecksBuilder builder, Func<IServiceProvider, TDbContext> dbContextFactory, Func<TDbContext, IQueryable<bool>> healthQuery, string name = null, HealthStatus? failureStatus = default(HealthStatus? ), IEnumerable<string> tags = null) where TDbContext : DbContext Parameters Type Name Description IHealthChecksBuilder builder The that is being added to. Func < IServiceProvider , TDbContext> dbContextFactory A factory that can resolve a TDbContext from a IServiceProvider . Func <TDbContext, IQueryable < Boolean >> healthQuery The query to be executed against the database context to be checked for health. Must execute without error and return at least 1 row. The return value is ignored. String name The name of the health check being registered. If null , defaults to entityframework . Nullable < HealthStatus > failureStatus The to return if the health check fails. If null , defaults to . IEnumerable < String > tags A list of tags that can be used for filtering health checks. Type Parameters Name Description TDbContext The type of against which health is being checked. | Improve this Doc View Source AddEntityFramework<TDbContext>(IHealthChecksBuilder, Func<IServiceProvider, Lazy<TDbContext>>, Func<TDbContext, IQueryable<Boolean>>, String, Nullable<HealthStatus>, IEnumerable<String>) Adds an EntityFrameworkHealthCheck<TDbContext> to builder . Declaration public static void AddEntityFramework<TDbContext>(this IHealthChecksBuilder builder, Func<IServiceProvider, Lazy<TDbContext>> lazyDbContextFactory, Func<TDbContext, IQueryable<bool>> healthQuery, string name = null, HealthStatus? failureStatus = default(HealthStatus? ), IEnumerable<string> tags = null) where TDbContext : DbContext Parameters Type Name Description IHealthChecksBuilder builder The that is being added to. Func < IServiceProvider , Lazy <TDbContext>> lazyDbContextFactory A lazy wrapper around a factory that can resolve a TDbContext from a IServiceProvider . Func <TDbContext, IQueryable < Boolean >> healthQuery The query to be executed against the database context to be checked for health. Must execute without error and return at least 1 row. The return value is ignored. String name The name of the health check being registered. If null , defaults to entityframework . Nullable < HealthStatus > failureStatus The to return if the health check fails. If null , defaults to . IEnumerable < String > tags A list of tags that can be used for filtering health checks. Type Parameters Name Description TDbContext The type of against which health is being checked."
  },
  "api/FGS.Autofac.DynamicScoping.Abstractions.Scope.html": {
    "href": "api/FGS.Autofac.DynamicScoping.Abstractions.Scope.html",
    "title": "Enum Scope | FoxGuard Foundation Libraries",
    "keywords": "Enum Scope Indicates the lifetime management semantics by which a component will be resolved. Namespace : FGS.Autofac.DynamicScoping.Abstractions Assembly : FGS.Autofac.DynamicScoping.Abstractions.dll Syntax public enum Scope Fields Name Description PerDependency Configure the component so that every dependent component or call to Resolve() gets a new, unique instance (default). PerLifetimeScope Configure the component so that every dependent component or call to Resolve() within a single ILifetimeScope gets the same, shared instance. Dependent components in different lifetime scopes will get different instances. Singleton Configure the component so that every dependent component or call to Resolve() gets the same, shared instance. Extension Methods EnumerableExtensions.Yield<Scope>() EnumExtensions.GetDisplayName() EnumExtensions.GetDescription()"
  },
  "api/FGS.OneOf.Extensions.OneOfQueryExpressionExtensions.html": {
    "href": "api/FGS.OneOf.Extensions.OneOfQueryExpressionExtensions.html",
    "title": "Class OneOfQueryExpressionExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class OneOfQueryExpressionExtensions Inheritance Object OneOfQueryExpressionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.OneOf.Extensions Assembly : FGS.OneOf.Extensions.dll Syntax public static class OneOfQueryExpressionExtensions Methods | Improve this Doc View Source Bifold<T>(OneOf<T, T>) Declaration public static T Bifold<T>(this OneOf<T, T> source) Parameters Type Name Description FGS.OneOf <T, T> source Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Flatten<TSuccess, TError>(OneOf<OneOf<TSuccess, TError>, TError>) Declaration public static OneOf<TSuccess, TError> Flatten<TSuccess, TError>(this OneOf<OneOf<TSuccess, TError>, TError> source) Parameters Type Name Description FGS.OneOf < FGS.OneOf <TSuccess, TError>, TError> source Returns Type Description FGS.OneOf <TSuccess, TError> Type Parameters Name Description TSuccess TError | Improve this Doc View Source Select<TSuccessOriginal, TSuccessNew, TError>(OneOf<TSuccessOriginal, TError>, Func<TSuccessOriginal, TSuccessNew>) Declaration public static OneOf<TSuccessNew, TError> Select<TSuccessOriginal, TSuccessNew, TError>(this OneOf<TSuccessOriginal, TError> source, Func<TSuccessOriginal, TSuccessNew> projection) Parameters Type Name Description FGS.OneOf <TSuccessOriginal, TError> source Func <TSuccessOriginal, TSuccessNew> projection Returns Type Description FGS.OneOf <TSuccessNew, TError> Type Parameters Name Description TSuccessOriginal TSuccessNew TError | Improve this Doc View Source SelectError<TSuccess, TErrorOriginal, TErrorNew>(OneOf<TSuccess, TErrorOriginal>, Func<TErrorOriginal, TErrorNew>) Declaration public static OneOf<TSuccess, TErrorNew> SelectError<TSuccess, TErrorOriginal, TErrorNew>(this OneOf<TSuccess, TErrorOriginal> source, Func<TErrorOriginal, TErrorNew> projection) Parameters Type Name Description FGS.OneOf <TSuccess, TErrorOriginal> source Func <TErrorOriginal, TErrorNew> projection Returns Type Description FGS.OneOf <TSuccess, TErrorNew> Type Parameters Name Description TSuccess TErrorOriginal TErrorNew | Improve this Doc View Source SelectMany<TSuccess1, TSuccess2, TError, TResult>(OneOf<TSuccess1, TError>, Func<TSuccess1, OneOf<TSuccess2, TError>>, Func<TSuccess1, TSuccess2, TResult>) Declaration public static OneOf<TResult, TError> SelectMany<TSuccess1, TSuccess2, TError, TResult>(this OneOf<TSuccess1, TError> source, Func<TSuccess1, OneOf<TSuccess2, TError>> selector, Func<TSuccess1, TSuccess2, TResult> resultSelector) Parameters Type Name Description FGS.OneOf <TSuccess1, TError> source Func <TSuccess1, FGS.OneOf <TSuccess2, TError>> selector Func <TSuccess1, TSuccess2, TResult> resultSelector Returns Type Description FGS.OneOf <TResult, TError> Type Parameters Name Description TSuccess1 TSuccess2 TError TResult | Improve this Doc View Source SelectMany<TSource, TSuccess, TError, TResult>(IEnumerable<TSource>, Func<TSource, OneOf<TSuccess, TError>>, Func<TSource, TSuccess, TResult>) Declaration public static OneOf<IEnumerable<TResult>, TError> SelectMany<TSource, TSuccess, TError, TResult>(this IEnumerable<TSource> source, Func<TSource, OneOf<TSuccess, TError>> selector, Func<TSource, TSuccess, TResult> resultSelector) Parameters Type Name Description IEnumerable <TSource> source Func <TSource, FGS.OneOf <TSuccess, TError>> selector Func <TSource, TSuccess, TResult> resultSelector Returns Type Description FGS.OneOf < IEnumerable <TResult>, TError> Type Parameters Name Description TSource TSuccess TError TResult"
  },
  "api/FGS.Primitives.Time.Abstractions.IClock.html": {
    "href": "api/FGS.Primitives.Time.Abstractions.IClock.html",
    "title": "Interface IClock | FoxGuard Foundation Libraries",
    "keywords": "Interface IClock Namespace : FGS.Primitives.Time.Abstractions Assembly : FGS.Primitives.Time.Abstractions.dll Syntax public interface IClock Properties | Improve this Doc View Source Now Declaration DateTimeOffset Now { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source UtcNow Declaration DateTimeOffset UtcNow { get; } Property Value Type Description DateTimeOffset Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.ComponentModel.DataAnnotations.MicrosoftSecurityBulletinAttribute.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.MicrosoftSecurityBulletinAttribute.html",
    "title": "Class MicrosoftSecurityBulletinAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class MicrosoftSecurityBulletinAttribute Marks a member as requiring formatting that fits the legacy Microsoft security bulletin id number (e.g. \"MS16-XXX\"). Inheritance Object MicrosoftSecurityBulletinAttribute Namespace : FGS.ComponentModel.DataAnnotations Assembly : FGS.ComponentModel.DataAnnotations.dll Syntax public class MicrosoftSecurityBulletinAttribute : RegularExpressionAttribute Remarks For more information, see: https://www.microsoft.com/en-us/msrc/faqs-security-update-guide . Constructors | Improve this Doc View Source MicrosoftSecurityBulletinAttribute() Declaration public MicrosoftSecurityBulletinAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.html": {
    "href": "api/FGS.Tests.Support.html",
    "title": "Namespace FGS.Tests.Support | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support Classes AutoFixtureExtensions Extends with functionality to improve its ergonomics. AutoFixtureFactory Provides a factory method for creating a configured ."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Options.ContainerBuilderExtensions.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Options.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ContainerBuilderExtensions Extends with the ability to register mock or null-patterned implementations of and friends. Inheritance Object ContainerBuilderExtensions Namespace : FGS.Tests.Support.Autofac.Mocking.Options Assembly : FGS.Tests.Support.Autofac.Mocking.Options.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source RegisterMockOptions<TOptions>(ContainerBuilder, TOptions) Registers mock Options services (of type TOptions ) into builder , all of which will always return the optionsValue value. Declaration public static void RegisterMockOptions<TOptions>(this ContainerBuilder builder, TOptions optionsValue) where TOptions : class, new() Parameters Type Name Description ContainerBuilder builder The into which to add the registrations. TOptions optionsValue The Options value that will always be returned by the matching Options services. Type Parameters Name Description TOptions The type of Options value to wire up. | Improve this Doc View Source RegisterMockOptions<TOptions>(ContainerBuilder, Func<TOptions>, Scope) Registers mock Options services (of type TOptions ) into builder , all of which will always execute optionsProvider and return the result. Declaration public static void RegisterMockOptions<TOptions>(this ContainerBuilder builder, Func<TOptions> optionsProvider, Scope scope = Scope.Singleton) where TOptions : class, new() Parameters Type Name Description ContainerBuilder builder The into which to add the registrations. Func <TOptions> optionsProvider A factory that creates or retrieves the Options value each time it is requested. Scope scope The lifetime management semantics by which the components will be resolved. Type Parameters Name Description TOptions The type of Options value to wire up. | Improve this Doc View Source RegisterNullOptions(ContainerBuilder, Scope) Registers unbound generic Options services into builder , all of which will always return null . Declaration public static void RegisterNullOptions(this ContainerBuilder builder, Scope scope = Scope.Singleton) Parameters Type Name Description ContainerBuilder builder The into which to add the registrations. Scope scope The lifetime management semantics by which the components will be resolved."
  },
  "api/FGS.Interception.DynamicProxy.html": {
    "href": "api/FGS.Interception.DynamicProxy.html",
    "title": "Namespace FGS.Interception.DynamicProxy | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interception.DynamicProxy Classes AsyncInvocationAdapter AttributeProxyGenerationHook<TAttribute> InterceptorAdapter<TInterceptor, TInterceptorInstantiationData> Adapts our TInterceptor interceptor as an implementation of . InvocationAdapter InvocationAdapterBase"
  },
  "api/FGS.Autofac.Options.OptionsConfigurationContainerBuilderExtensions.html": {
    "href": "api/FGS.Autofac.Options.OptionsConfigurationContainerBuilderExtensions.html",
    "title": "Class OptionsConfigurationContainerBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class OptionsConfigurationContainerBuilderExtensions Extension methods for adding configuration-related Options services to the Autofac-based DI container. Inheritance Object OptionsConfigurationContainerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Autofac.Options Assembly : FGS.Autofac.Options.dll Syntax public static class OptionsConfigurationContainerBuilderExtensions Remarks Taken and modified from: https://github.com/aspnet/Extensions/blob/e311a440d51cddd8f645160d9e27a574c77955a1/src/Options/ConfigurationExtensions/src/OptionsConfigurationServiceCollectionExtensions.cs . Methods | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, IConfiguration) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, IConfiguration config) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. IConfiguration config The configuration being bound. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, IConfiguration, Action<BinderOptions>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, IConfiguration config, Action<BinderOptions> configureBinder) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. IConfiguration config The configuration being bound. Action < BinderOptions > configureBinder Used to configure the . Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, Func<IComponentContext, IConfiguration>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, Func<IComponentContext, IConfiguration> resolveConfig) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Func < IComponentContext , IConfiguration > resolveConfig Resolves the configuration being bound. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, Func<IComponentContext, IConfiguration>, Action<BinderOptions>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, Func<IComponentContext, IConfiguration> resolveConfig, Action<BinderOptions> configureBinder) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. Func < IComponentContext , IConfiguration > resolveConfig Resolves the configuration being bound. Action < BinderOptions > configureBinder Used to configure the . Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, String, IConfiguration) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, string name, IConfiguration config) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. IConfiguration config The configuration being bound. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, String, IConfiguration, Action<BinderOptions>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, string name, IConfiguration config, Action<BinderOptions> configureBinder) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. IConfiguration config The configuration being bound. Action < BinderOptions > configureBinder Used to configure the . Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, String, Func<IComponentContext, IConfiguration>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, string name, Func<IComponentContext, IConfiguration> resolveConfig) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. Func < IComponentContext , IConfiguration > resolveConfig Resolves the configuration being bound. Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured. | Improve this Doc View Source Configure<TOptions>(ContainerBuilder, String, Func<IComponentContext, IConfiguration>, Action<BinderOptions>) Registers a configuration instance which TOptions will bind against. Declaration public static ContainerBuilder Configure<TOptions>(this ContainerBuilder containerBuilder, string name, Func<IComponentContext, IConfiguration> resolveConfig, Action<BinderOptions> configureBinder) where TOptions : class Parameters Type Name Description ContainerBuilder containerBuilder The to add the services to. String name The name of the Options instance. Func < IComponentContext , IConfiguration > resolveConfig Resolves the configuration being bound. Action < BinderOptions > configureBinder Used to configure the . Returns Type Description ContainerBuilder The so that additional calls can be chained. Type Parameters Name Description TOptions The type of Options being configured."
  },
  "api/FGS.Tests.Support.TestCategories.UnitAttribute.html": {
    "href": "api/FGS.Tests.Support.TestCategories.UnitAttribute.html",
    "title": "Class UnitAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class UnitAttribute Inheritance Object UnitAttribute Namespace : FGS.Tests.Support.TestCategories Assembly : FGS.Tests.Support.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class UnitAttribute : CategoryAttribute Constructors | Improve this Doc View Source UnitAttribute() Tests the smallest unit of functionality, typically a method/function. Declaration public UnitAttribute() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.Interception.DynamicProxy.html": {
    "href": "api/FGS.Autofac.Interception.DynamicProxy.html",
    "title": "Namespace FGS.Autofac.Interception.DynamicProxy | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.Interception.DynamicProxy Classes AttributeBasedInterceptionModule<TAttribute, TInterceptor> CustomInterceptionModuleBase An abstraction representing an Autofac module that dynamically wires up interceptors to resolved types. InterceptorAdapterModule Contains registrations common to all interceptors."
  },
  "api/FGS.Autofac.DynamicScoping.Abstractions.Specialized.html": {
    "href": "api/FGS.Autofac.DynamicScoping.Abstractions.Specialized.html",
    "title": "Namespace FGS.Autofac.DynamicScoping.Abstractions.Specialized | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.DynamicScoping.Abstractions.Specialized Interfaces IOverridableHttpScopeAutofacModule Represents an Autofac module which must behave differently based on the lifetime management semantics of an HTTP request for the current container."
  },
  "api/FGS.Linq.Extensions.Pagination.EntityFramework.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.EntityFramework.html",
    "title": "Namespace FGS.Linq.Extensions.Pagination.EntityFramework | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.Pagination.EntityFramework Classes PageQueryExtensions Extends PageQuery<T> with materialization functionality."
  },
  "api/FGS.Primitives.Time.Abstractions.IFreezableClock.html": {
    "href": "api/FGS.Primitives.Time.Abstractions.IFreezableClock.html",
    "title": "Interface IFreezableClock | FoxGuard Foundation Libraries",
    "keywords": "Interface IFreezableClock Namespace : FGS.Primitives.Time.Abstractions Assembly : FGS.Primitives.Time.Abstractions.dll Syntax public interface IFreezableClock Methods | Improve this Doc View Source FreezeTime() Declaration void FreezeTime() | Improve this Doc View Source UnfreezeTime() Declaration void UnfreezeTime() Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.MockUrlHelperExtensions.html": {
    "href": "api/FGS.Tests.Support.AspNetCore.Mvc.Routing.MockUrlHelperExtensions.html",
    "title": "Class MockUrlHelperExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class MockUrlHelperExtensions Extends with functionality to help setup and verify invocations, except in terms of the extension methods of that are provided by . Inheritance Object MockUrlHelperExtensions Namespace : FGS.Tests.Support.AspNetCore.Mvc.Routing Assembly : FGS.Tests.Support.AspNetCore.Mvc.dll Syntax public static class MockUrlHelperExtensions : object Methods | Improve this Doc View Source SetupRouteUrl(Mock<IUrlHelper>, String) Adds an invocation setup to mockUrlHelper to match an invocation that would be generated by . Declaration public static ISetup<IUrlHelper, string> SetupRouteUrl(this Mock<IUrlHelper> mockUrlHelper, string routeName) Parameters Type Name Description Mock < IUrlHelper > mockUrlHelper The mock to add the invocation setup to. String routeName The name of the route that invocations must match. Returns Type Description ISetup < IUrlHelper , String > Returns an so that additional configuration calls can be chained. | Improve this Doc View Source SetupRouteUrl<TRouteValues>(Mock<IUrlHelper>, String, TRouteValues) Adds an invocation setup to mockUrlHelper to match an invocation that would be generated by . Declaration public static ISetup<IUrlHelper, string> SetupRouteUrl<TRouteValues>(this Mock<IUrlHelper> mockUrlHelper, string routeName, TRouteValues routeValues) Parameters Type Name Description Mock < IUrlHelper > mockUrlHelper The mock to add the invocation setup to. String routeName The name of the route that invocations must match. TRouteValues routeValues The route values that invocations must match. Returns Type Description ISetup < IUrlHelper , String > Returns an so that additional configuration calls can be chained. Type Parameters Name Description TRouteValues The type of route values being provided as the comparand for invocation setup. | Improve this Doc View Source VerifyRouteUrl(Mock<IUrlHelper>, String, Times) Performs a verification on the mockUrlHelper that it has recieved an invocation matching that which would be generated by . Declaration public static void VerifyRouteUrl(this Mock<IUrlHelper> mockUrlHelper, string routeName, Times times) Parameters Type Name Description Mock < IUrlHelper > mockUrlHelper The mock to add the invocation setup to. String routeName The name of the route that invocations must match. Times times The number of times the invocation must match in order for the verification to pass. | Improve this Doc View Source VerifyRouteUrl<TRouteValues>(Mock<IUrlHelper>, String, TRouteValues, Times) Performs a verification on the mockUrlHelper that it has recieved an invocation matching that which would be generated by . Declaration public static void VerifyRouteUrl<TRouteValues>(this Mock<IUrlHelper> mockUrlHelper, string routeName, TRouteValues routeValues, Times times) Parameters Type Name Description Mock < IUrlHelper > mockUrlHelper The mock to add the invocation setup to. String routeName The name of the route that invocations must match. TRouteValues routeValues The route values that invocations must match. Times times The number of times the invocation must match in order for the verification to pass. Type Parameters Name Description TRouteValues The type of route values being provided as the comparand for invocation verification request."
  },
  "api/FGS.Autofac.DynamicScoping.Abstractions.html": {
    "href": "api/FGS.Autofac.DynamicScoping.Abstractions.html",
    "title": "Namespace FGS.Autofac.DynamicScoping.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.DynamicScoping.Abstractions Enums Scope Indicates the lifetime management semantics by which a component will be resolved."
  },
  "api/FGS.Autofac.AspNetCore.Mvc.Routing.SingletonCompatibleUrlHelper.html": {
    "href": "api/FGS.Autofac.AspNetCore.Mvc.Routing.SingletonCompatibleUrlHelper.html",
    "title": "Class SingletonCompatibleUrlHelper | FoxGuard Foundation Libraries",
    "keywords": "Class SingletonCompatibleUrlHelper An implementation of that attempts to retains most of 's functionality when used in a singleton context, when an HttpContext is likely available but ActionContext is not. To use this, provide it to an Autofac registration with . Inheritance Object SingletonCompatibleUrlHelper Namespace : FGS.Autofac.AspNetCore.Mvc.Routing Assembly : FGS.Autofac.AspNetCore.Mvc.Routing.dll Syntax public class SingletonCompatibleUrlHelper : IUrlHelper Remarks This implementation is bound by these constraints: can be used in singleton scope because ASP.NET Core registers it as such. cannot be used in singleton scope, because ASP.NET Core registrations only register it in the scope of a request. Properties | Improve this Doc View Source ActionContext Declaration public ActionContext ActionContext { get; } Property Value Type Description ActionContext | Improve this Doc View Source HttpContext Declaration protected HttpContext HttpContext { get; } Property Value Type Description HttpContext Methods | Improve this Doc View Source Action(UrlActionContext) Declaration public virtual string Action(UrlActionContext actionContext) Parameters Type Name Description UrlActionContext actionContext Returns Type Description String | Improve this Doc View Source Content(String) Declaration public virtual string Content(string contentPath) Parameters Type Name Description String contentPath Returns Type Description String Remarks Taken and modified from: https://github.com/aspnet/AspNetCore/blob/7a26d27e8b7f67a1ac80532e5872bfde6c28f952/src/Mvc/Mvc.Core/src/Routing/UrlHelperBase.cs . | Improve this Doc View Source IsLocalUrl(String) Declaration public virtual bool IsLocalUrl(string url) Parameters Type Name Description String url Returns Type Description Boolean Remarks Taken from: https://github.com/aspnet/AspNetCore/blob/7a26d27e8b7f67a1ac80532e5872bfde6c28f952/src/Mvc/Mvc.Core/src/Routing/UrlHelperBase.cs . | Improve this Doc View Source Link(String, Object) Declaration public virtual string Link(string routeName, object values) Parameters Type Name Description String routeName Object values Returns Type Description String | Improve this Doc View Source RouteUrl(UrlRouteContext) Declaration public virtual string RouteUrl(UrlRouteContext routeContext) Parameters Type Name Description UrlRouteContext routeContext Returns Type Description String Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Reflection.Extensions.html": {
    "href": "api/FGS.Reflection.Extensions.html",
    "title": "Namespace FGS.Reflection.Extensions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Reflection.Extensions Classes EmbeddedResourceLoader Provides functionality that helps assist with loading assembly-embedded resources. MemberInfoExtensions Provides functionality to assist with reading information about the members of types."
  },
  "api/FGS.Extensions.Logging.Serilog.SerilogLoggingBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Logging.Serilog.SerilogLoggingBuilderExtensions.html",
    "title": "Class SerilogLoggingBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class SerilogLoggingBuilderExtensions Extends with Serilog configuration methods. Inheritance Object SerilogLoggingBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Extensions.Logging.Serilog Assembly : FGS.Extensions.Logging.Serilog.dll Syntax public static class SerilogLoggingBuilderExtensions Remarks Taken and modified from: https://github.com/serilog/serilog-extensions-logging/blob/767f884a1dafb033a8232c6c8e61b8f4bf5db6ed/src/Serilog.Extensions.Logging/SerilogLoggingBuilderExtensions.cs . Methods | Improve this Doc View Source AddSerilog(ILoggingBuilder, Serilog.ILogger, Boolean) Adds Serilog to the logging pipeline. Declaration public static ILoggingBuilder AddSerilog(this ILoggingBuilder builder, Serilog.ILogger logger = null, bool dispose = false) Parameters Type Name Description ILoggingBuilder builder The to add a SerilogLoggerProvider to. Serilog.ILogger logger The Serilog logger; if not supplied, the static will be used. Boolean dispose When true, dispose logger when the framework disposes the provider. If the logger is not specified but dispose is true, the method will be called on the static class instead. Returns Type Description ILoggingBuilder The logger factory."
  },
  "api/FGS.ComponentModel.DataAnnotations.Extensions.EnumExtensions.html": {
    "href": "api/FGS.ComponentModel.DataAnnotations.Extensions.EnumExtensions.html",
    "title": "Class EnumExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class EnumExtensions Extends enums with the ability to retrieve value-specific metadata. Inheritance Object EnumExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.ComponentModel.DataAnnotations.Extensions Assembly : FGS.ComponentModel.DataAnnotations.Extensions.dll Syntax public static class EnumExtensions Methods | Improve this Doc View Source GetDescription(Enum) Gets the human-readable description of an enum value. If the member is annotated with (with a ) then such is used as the source of the human-readable description. Otherwise, the name of the enum member itself is used as a fallback value. Declaration public static string GetDescription(this Enum value) Parameters Type Name Description Enum value The enum value to retrieve the human-readable name for. Returns Type Description String Returns the description of the given value . | Improve this Doc View Source GetDisplayName(Enum) Gets the human-readable name of an enum value. If the member is annotated with then such is used as the source of the human-readable name. Otherwise, the name of the enum member itself is used as a fallback value. Declaration public static string GetDisplayName(this Enum value) Parameters Type Name Description Enum value The enum value to retrieve the human-readable name for. Returns Type Description String Returns the name of the given value ."
  },
  "api/FGS.FaultHandling.Abstractions.FaultHandlingConfiguration.html": {
    "href": "api/FGS.FaultHandling.Abstractions.FaultHandlingConfiguration.html",
    "title": "Class FaultHandlingConfiguration | FoxGuard Foundation Libraries",
    "keywords": "Class FaultHandlingConfiguration Fault-handling configuration. Inheritance Object FaultHandlingConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.FaultHandling.Abstractions Assembly : FGS.FaultHandling.Abstractions.dll Syntax public sealed class FaultHandlingConfiguration Properties | Improve this Doc View Source MaxRetries Gets or sets the maximum number of times an operation will be retried. Declaration public int MaxRetries { get; set; } Property Value Type Description Int32 Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.DynamicProxy.AttributeProxyGenerationHook-1.html": {
    "href": "api/FGS.Interception.DynamicProxy.AttributeProxyGenerationHook-1.html",
    "title": "Class AttributeProxyGenerationHook<TAttribute> | FoxGuard Foundation Libraries",
    "keywords": "Class AttributeProxyGenerationHook<TAttribute> Inheritance Object AttributeProxyGenerationHook<TAttribute> Namespace : FGS.Interception.DynamicProxy Assembly : FGS.Interception.DynamicProxy.dll Syntax public class AttributeProxyGenerationHook<TAttribute> : IProxyGenerationHook where TAttribute : Attribute Type Parameters Name Description TAttribute Methods | Improve this Doc View Source MethodsInspected() Declaration public void MethodsInspected() | Improve this Doc View Source NonProxyableMemberNotification(Type, MemberInfo) Declaration public void NonProxyableMemberNotification(Type type, MemberInfo memberInfo) Parameters Type Name Description Type type MemberInfo memberInfo | Improve this Doc View Source ShouldInterceptMethod(Type, MethodInfo) Declaration public bool ShouldInterceptMethod(Type type, MethodInfo methodInfo) Parameters Type Name Description Type type MethodInfo methodInfo Returns Type Description Boolean Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.RequiredIfTrueValidationAdapter.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.RequiredIfTrueValidationAdapter.html",
    "title": "Class RequiredIfTrueValidationAdapter | FoxGuard Foundation Libraries",
    "keywords": "Class RequiredIfTrueValidationAdapter Implements server-side logic for RequiredIfTrueAttribute , and sets up the annotated model for client-side validation as well. Inheritance Object RequiredIfTrueValidationAdapter Namespace : FGS.AspNetCore.Mvc.ModelBinding.Validation Assembly : FGS.AspNetCore.Mvc.ModelBinding.Validation.dll Syntax public class RequiredIfTrueValidationAdapter : AttributeAdapterBase<RequiredIfTrueAttribute> Remarks Taken and modified from: https://github.com/rpgkaiser/FoolProof.Core/blob/268c8afc60dc020089ea03920b1499162b0987b4/FoolProof.Core/Utilities/ValidationAdapter.cs . Methods | Improve this Doc View Source AddValidation(ClientModelValidationContext) Declaration public override void AddValidation(ClientModelValidationContext context) Parameters Type Name Description ClientModelValidationContext context | Improve this Doc View Source GetErrorMessage(ModelValidationContextBase) Declaration public override string GetErrorMessage(ModelValidationContextBase validationContext) Parameters Type Name Description ModelValidationContextBase validationContext Returns Type Description String Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interceptors.FaultHandling.Retry.html": {
    "href": "api/FGS.Interceptors.FaultHandling.Retry.html",
    "title": "Namespace FGS.Interceptors.FaultHandling.Retry | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interceptors.FaultHandling.Retry Classes RetryInterceptor An implementation of IInterceptor that uses an IRetryPolicyCoordinator to execute (and potentially retry) an invocation."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Logging.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Logging.html",
    "title": "Namespace FGS.Tests.Support.Autofac.Mocking.Logging | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Autofac.Mocking.Logging Classes ContainerBuilderExtensions Extends with the ability to register null-patterned implementations of and friends."
  },
  "api/FGS.Linq.Extensions.Pagination.html": {
    "href": "api/FGS.Linq.Extensions.Pagination.html",
    "title": "Namespace FGS.Linq.Extensions.Pagination | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Linq.Extensions.Pagination Classes PaginationQueryableExtensions Extends with pagination capabilities."
  },
  "api/FGS.Tests.Support.Autofac.Mocking.Options.html": {
    "href": "api/FGS.Tests.Support.Autofac.Mocking.Options.html",
    "title": "Namespace FGS.Tests.Support.Autofac.Mocking.Options | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Autofac.Mocking.Options Classes ContainerBuilderExtensions Extends with the ability to register mock or null-patterned implementations of and friends."
  },
  "api/FGS.Tests.Support.AspNetCore.Mvc.html": {
    "href": "api/FGS.Tests.Support.AspNetCore.Mvc.html",
    "title": "Namespace FGS.Tests.Support.AspNetCore.Mvc | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.AspNetCore.Mvc Classes AutoFixtureExtensions Extends with functionality to create instances of types helpful for testing code dependent on ASP.NET Core."
  },
  "api/FGS.Interception.Annotations.Time.FreezeTimeAttribute.html": {
    "href": "api/FGS.Interception.Annotations.Time.FreezeTimeAttribute.html",
    "title": "Class FreezeTimeAttribute | FoxGuard Foundation Libraries",
    "keywords": "Class FreezeTimeAttribute Indicates that the target type or member should be intercepted with time-freezing semantics. Inheritance Object Attribute FreezeTimeAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Interception.Annotations.Time Assembly : FGS.Interception.Annotations.Time.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class FreezeTimeAttribute : Attribute, _Attribute Remarks Does not actually perform any interception - external wiring is required for that. Implements System.Runtime.InteropServices._Attribute Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.DynamicScoping.html": {
    "href": "api/FGS.Autofac.DynamicScoping.html",
    "title": "Namespace FGS.Autofac.DynamicScoping | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.DynamicScoping Classes ContainerBuilderFactory Provides the ability to create a . RegistrationBuilderExtensions Extends with functionality that allows specififying object lifetime via an enum value."
  },
  "api/FGS.Interception.DynamicProxy.AsyncInvocationAdapter.html": {
    "href": "api/FGS.Interception.DynamicProxy.AsyncInvocationAdapter.html",
    "title": "Class AsyncInvocationAdapter | FoxGuard Foundation Libraries",
    "keywords": "Class AsyncInvocationAdapter Inheritance Object InvocationAdapterBase AsyncInvocationAdapter Implements IAsyncInvocation IInvocationCommon Inherited Members InvocationAdapterBase.Adapted InvocationAdapterBase.GetArgumentValue(Int32) InvocationAdapterBase.GetConcreteMethod() InvocationAdapterBase.GetConcreteMethodInvocationTarget() InvocationAdapterBase.SetArgumentValue(Int32, Object) InvocationAdapterBase.Arguments InvocationAdapterBase.GenericArguments InvocationAdapterBase.InvocationTarget InvocationAdapterBase.Method InvocationAdapterBase.MethodInvocationTarget InvocationAdapterBase.Proxy InvocationAdapterBase.ReturnValue InvocationAdapterBase.TargetType Namespace : FGS.Interception.DynamicProxy Assembly : FGS.Interception.DynamicProxy.dll Syntax public sealed class AsyncInvocationAdapter : InvocationAdapterBase, IAsyncInvocation, IInvocationCommon Constructors | Improve this Doc View Source AsyncInvocationAdapter(Castle.DynamicProxy.IInvocation) Initializes a new instance of the AsyncInvocationAdapter class. Declaration public AsyncInvocationAdapter(Castle.DynamicProxy.IInvocation adapted) Parameters Type Name Description Castle.DynamicProxy.IInvocation adapted The underlying implementation that is being adapted. Methods | Improve this Doc View Source ProceedAsync() Declaration public Task ProceedAsync() Returns Type Description Task Implements IAsyncInvocation IInvocationCommon Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Collections.Extensions.OneOf.Units.NoElements.html": {
    "href": "api/FGS.Collections.Extensions.OneOf.Units.NoElements.html",
    "title": "Struct NoElements | FoxGuard Foundation Libraries",
    "keywords": "Struct NoElements A unit type for usage in discriminated unions. Signifies that an element was expected, but none were found. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : FGS.Collections.Extensions.OneOf.Units Assembly : FGS.Collections.Extensions.OneOf.Units.dll Syntax public struct NoElements Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interceptors.Time.FreezeTimeInterceptor.html": {
    "href": "api/FGS.Interceptors.Time.FreezeTimeInterceptor.html",
    "title": "Class FreezeTimeInterceptor | FoxGuard Foundation Libraries",
    "keywords": "Class FreezeTimeInterceptor An implementation of IInterceptor that uses a retrievable IFreezableClock to freeze time before an inbound invocation, and then unfreeze after the invocation has been completed. Inheritance Object FreezeTimeInterceptor Implements IInterceptor Namespace : FGS.Interceptors.Time Assembly : FGS.Interceptors.Time.dll Syntax public sealed class FreezeTimeInterceptor : object, IInterceptor Constructors | Improve this Doc View Source FreezeTimeInterceptor(Func<IFreezableClock>) Initializes a new instance of the FreezeTimeInterceptor class. Declaration public FreezeTimeInterceptor(Func<IFreezableClock> freezableClockFactory) Parameters Type Name Description Func < IFreezableClock > freezableClockFactory The factory that creates or retrieves the IFreezableClock for which time will be manipulated. Methods | Improve this Doc View Source Intercept(IInvocation) The implementation that is invoked to intercept a member with a synchronous signature. Declaration public void Intercept(IInvocation invocation) Parameters Type Name Description IInvocation invocation Represents a method invocation that has been intercepted. | Improve this Doc View Source InterceptAsync(IAsyncInvocation) Declaration public Task InterceptAsync(IAsyncInvocation invocation) Parameters Type Name Description IAsyncInvocation invocation Returns Type Description Task Implements IInterceptor Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Collections.Extensions.Pagination.html": {
    "href": "api/FGS.Collections.Extensions.Pagination.html",
    "title": "Namespace FGS.Collections.Extensions.Pagination | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Collections.Extensions.Pagination Classes EnumerableExtensions Extends with functionality to facilitate pagination."
  },
  "api/FGS.Interception.Annotations.FaultHandling.html": {
    "href": "api/FGS.Interception.Annotations.FaultHandling.html",
    "title": "Namespace FGS.Interception.Annotations.FaultHandling | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Interception.Annotations.FaultHandling Classes RetryOnFaultAttribute Indicates that the target type or member should be intercepted with retry-on-fault semantics."
  },
  "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.html": {
    "href": "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.html",
    "title": "Namespace FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking Classes FakedServiceScopeHostBuilderFactory Provides the ability to create a fake which is robust enough for common testing scenarios. HostCallingHostingMiddleware Implements an IHostingMiddleware that DOES continue execution into nested middleware. HostSkippingHostingMiddleware Implements an IHostingMiddleware that does NOT continue execution into nested middleware. HostSpy Provides a singleton-bound mechanism for a deferred resolution of to have its invocations spied upon."
  },
  "api/FGS.Extensions.Hosting.Middleware.Abstractions.IHostingMiddleware.html": {
    "href": "api/FGS.Extensions.Hosting.Middleware.Abstractions.IHostingMiddleware.html",
    "title": "Interface IHostingMiddleware | FoxGuard Foundation Libraries",
    "keywords": "Interface IHostingMiddleware Defines middleware that can be added to the application's web hosting pipeline as a means to asynchronously intercept startup and graceful shutdowns. Namespace : FGS.Extensions.Hosting.Middleware.Abstractions Assembly : FGS.Extensions.Hosting.Middleware.Abstractions.dll Syntax public interface IHostingMiddleware Methods | Improve this Doc View Source StartAsync(Func<Task>, CancellationToken) Represents functionality that runs before and/or after the underlying web host starts listening on the configured address. Declaration Task StartAsync(Func<Task> next, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Func < Task > next The delegate representing the remaining middleware in the web hosting pipeline. CancellationToken cancellationToken Propagates notification that operations should be canceled. Returns Type Description Task | Improve this Doc View Source StopAsync(Func<Task>, CancellationToken) Represents functionality that runs before and/or after attempting to gracefully stop the underlying web host. Declaration Task StopAsync(Func<Task> next, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Func < Task > next The delegate representing the remaining middleware in the web hosting pipeline. CancellationToken cancellationToken Propagates notification that operations should be canceled. Returns Type Description Task Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Polly.Retry.html": {
    "href": "api/FGS.FaultHandling.Polly.Retry.html",
    "title": "Namespace FGS.FaultHandling.Polly.Retry | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Polly.Retry Classes PollyRetryPolicyAdapter Implements an IRetryPolicy using Polly. RetryPolicyFactory Represents a factory of IRetryPolicy instances based on Polly."
  },
  "api/FGS.Autofac.AspNetCore.Mvc.Routing.html": {
    "href": "api/FGS.Autofac.AspNetCore.Mvc.Routing.html",
    "title": "Namespace FGS.Autofac.AspNetCore.Mvc.Routing | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Autofac.AspNetCore.Mvc.Routing Classes RegistrationBuilderExtensions Extends a with the capability to provide a singleton-compatible . SingletonCompatibleUrlHelper An implementation of that attempts to retains most of 's functionality when used in a singleton context, when an HttpContext is likely available but ActionContext is not. To use this, provide it to an Autofac registration with ."
  },
  "api/FGS.Tests.Support.AutoFixture.Mocking.AutoFixtureExtensions.html": {
    "href": "api/FGS.Tests.Support.AutoFixture.Mocking.AutoFixtureExtensions.html",
    "title": "Class AutoFixtureExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutoFixtureExtensions Extends with functionality for registering mocks. Inheritance Object AutoFixtureExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Tests.Support.AutoFixture.Mocking Assembly : FGS.Tests.Support.AutoFixture.Mocking.dll Syntax public static class AutoFixtureExtensions Methods | Improve this Doc View Source Mock<T>(IFixture) Registers a with fixture . Declaration public static Mock<T> Mock<T>(this IFixture fixture) where T : class Parameters Type Name Description IFixture fixture The into which the mock will be registered. Returns Type Description Mock <T> The registered so that it configuration calls can be chained to it. Type Parameters Name Description T The type of Mock to register and return. | Improve this Doc View Source Mock<T>(IFixture, MockBehavior) Registers a with fixture , specifying the of the mock. Declaration public static Mock<T> Mock<T>(this IFixture fixture, MockBehavior behavior) where T : class Parameters Type Name Description IFixture fixture The into which the mock will be registered. MockBehavior behavior Specifies the behavior of the mock. Returns Type Description Mock <T> The registered so that it configuration calls can be chained to it. Type Parameters Name Description T The type of Mock to register and return. | Improve this Doc View Source Mock<T>(IFixture, MockBehavior, Object[]) Registers a with fixture , specifying the of the mock and the arguments that the generated Mock type should pass to the base constructor. Declaration public static Mock<T> Mock<T>(this IFixture fixture, MockBehavior behavior, params object[] args) where T : class Parameters Type Name Description IFixture fixture The into which the mock will be registered. MockBehavior behavior Specifies the behavior of the mock. Object [] args The arguments that the generated Mock type will pass to the base constructor. Returns Type Description Mock <T> The registered so that it configuration calls can be chained to it. Type Parameters Name Description T The type of Mock to register and return. | Improve this Doc View Source Mock<T>(IFixture, Object[]) Registers a with fixture , specifying the arguments that the generated Mock type should pass to the base constructor. Declaration public static Mock<T> Mock<T>(this IFixture fixture, params object[] args) where T : class Parameters Type Name Description IFixture fixture The into which the mock will be registered. Object [] args The arguments that the generated Mock type will pass to the base constructor. Returns Type Description Mock <T> The registered so that it configuration calls can be chained to it. Type Parameters Name Description T The type of Mock to register and return. | Improve this Doc View Source MockMany<T>(IFixture, Int32) Registers multiple instances of with fixture . Declaration public static IEnumerable<Mock<T>> MockMany<T>(this IFixture fixture, int count = 3) where T : class Parameters Type Name Description IFixture fixture The into which the mocks will be registered. Int32 count The number of mocks to create and register. Returns Type Description IEnumerable < Mock <T>> The registered s so that additional configuration calls can be made to them. Type Parameters Name Description T The type of Mock to register and return."
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.StringCleanupModelBinder.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.StringCleanupModelBinder.html",
    "title": "Class StringCleanupModelBinder | FoxGuard Foundation Libraries",
    "keywords": "Class StringCleanupModelBinder An implementation of that trims whitespace and pairs of various kinds of quotation marks from the ends of a text member. Inheritance Object StringCleanupModelBinder Namespace : FGS.AspNetCore.Mvc.ModelBinding Assembly : FGS.AspNetCore.Mvc.ModelBinding.dll Syntax public class StringCleanupModelBinder : IModelBinder Methods | Improve this Doc View Source BindModelAsync(ModelBindingContext) Declaration public Task BindModelAsync(ModelBindingContext bindingContext) Parameters Type Name Description ModelBindingContext bindingContext Returns Type Description Task Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.AspNetCore.Mvc.Routing.RegistrationBuilderExtensions.html": {
    "href": "api/FGS.Autofac.AspNetCore.Mvc.Routing.RegistrationBuilderExtensions.html",
    "title": "Class RegistrationBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class RegistrationBuilderExtensions Extends a with the capability to provide a singleton-compatible . Inheritance Object RegistrationBuilderExtensions Namespace : FGS.Autofac.AspNetCore.Mvc.Routing Assembly : FGS.Autofac.AspNetCore.Mvc.Routing.dll Syntax public static class RegistrationBuilderExtensions : object Methods | Improve this Doc View Source WithSingletonCompatibleUrlHelper<TLimit, TReflectionActivatorData, TStyle>(IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle>) Provides a parameter to TLimit that resolves a singleton-compatible . Declaration public static IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> WithSingletonCompatibleUrlHelper<TLimit, TReflectionActivatorData, TStyle>(this IRegistrationBuilder<TLimit, TReflectionActivatorData, TStyle> registration) where TReflectionActivatorData : ReflectionActivatorData Parameters Type Name Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> registration Returns Type Description IRegistrationBuilder <TLimit, TReflectionActivatorData, TStyle> Type Parameters Name Description TLimit TReflectionActivatorData TStyle Examples Use this in an Autofac registration: containerBuilder .RegisterType<MyConcreteType>() .As<IMyAbstractType>() .WithSingletonCompatibleUrlHelper() .SingleInstance();"
  },
  "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.html": {
    "href": "api/FGS.AspNetCore.Mvc.ModelBinding.Validation.html",
    "title": "Namespace FGS.AspNetCore.Mvc.ModelBinding.Validation | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.AspNetCore.Mvc.ModelBinding.Validation Classes RequiredIfTrueValidationAdapter Implements server-side logic for RequiredIfTrueAttribute , and sets up the annotated model for client-side validation as well. RequiredIfTrueValidationAdapterProvider Wire this into dependency injection in order for RequiredIfTrueAttribute to be adapted to have its correct implementation."
  },
  "api/FGS.Extensions.DependencyInjection.Autofac.ServiceCollectionExtensions.html": {
    "href": "api/FGS.Extensions.DependencyInjection.Autofac.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class ServiceCollectionExtensions Extension methods on to register the . Inheritance Object ServiceCollectionExtensions Namespace : FGS.Extensions.DependencyInjection.Autofac Assembly : FGS.Extensions.DependencyInjection.Autofac.dll Syntax public static class ServiceCollectionExtensions : object Remarks Taken and modified from: https://github.com/autofac/Autofac.Extensions.DependencyInjection/blob/36d487749ef7184357bbc4d162bf425b8474eb36/src/Autofac.Extensions.DependencyInjection/ServiceCollectionExtensions.cs . Methods | Improve this Doc View Source AddAutofacWithModulesProvider<TModulesProvider>(IServiceCollection, Action<IModule>, Action<ContainerBuilder>) Adds the ModulesProviderBasedAutofacServiceProviderFactory<TModulesProvider> to the service collection. Declaration public static IServiceCollection AddAutofacWithModulesProvider<TModulesProvider>(this IServiceCollection services, Action<IModule> forEachModule = null, Action<ContainerBuilder> configurationAction = null) where TModulesProvider : IModulesProvider, new() Parameters Type Name Description IServiceCollection services The service collection to add the factory to. Action < IModule > forEachModule Action for each that can provide additional configuration before it is registered. Action < ContainerBuilder > configurationAction Action on a that adds component registrations to the container. Returns Type Description IServiceCollection The service collection. Type Parameters Name Description TModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered."
  },
  "api/FGS.Interception.Abstractions.IInvocationCommon.html": {
    "href": "api/FGS.Interception.Abstractions.IInvocationCommon.html",
    "title": "Interface IInvocationCommon | FoxGuard Foundation Libraries",
    "keywords": "Interface IInvocationCommon Represents the commonalities between synchronous and asynchronous method invocations that are being intercepted. Namespace : FGS.Interception.Abstractions Assembly : FGS.Interception.Abstractions.dll Syntax public interface IInvocationCommon Remarks Despite this API being heavily based on that of Castle.DynamicProxy , CaptureProceedInfo is purposefully excluded because it is only exposed by Castle.DynamicProxy in order to let consumers opt-in to thread safety. Thread-safety should be considered the default when implementing this API. Properties | Improve this Doc View Source Arguments Gets the arguments that the intercepted method has been invoked with. Declaration object[] Arguments { get; } Property Value Type Description Object [] | Improve this Doc View Source GenericArguments Gets the generic arguments of the intercepted method. Declaration Type[] GenericArguments { get; } Property Value Type Description Type [] | Improve this Doc View Source InvocationTarget Gets the object on which the invocation is performed. This is different from proxy object because most of the time this will be the proxy target object. Declaration object InvocationTarget { get; } Property Value Type Description Object | Improve this Doc View Source Method Gets the MethodInfo representing the method being invoked on the proxy. Declaration MethodInfo Method { get; } Property Value Type Description MethodInfo | Improve this Doc View Source MethodInvocationTarget Gets the MethodInfo - for interface proxies - on the target class. Declaration MethodInfo MethodInvocationTarget { get; } Property Value Type Description MethodInfo | Improve this Doc View Source Proxy Gets the proxy object on which the intercepted method is invoked. Declaration object Proxy { get; } Property Value Type Description Object | Improve this Doc View Source ReturnValue Gets or sets the return value of the intercepted method. Declaration object ReturnValue { get; set; } Property Value Type Description Object | Improve this Doc View Source TargetType Gets the type of the target object for the intercepted method. Declaration Type TargetType { get; } Property Value Type Description Type Methods | Improve this Doc View Source GetArgumentValue(Int32) Gets the value of the argument, of the intercepted method invocation, at the given index. Declaration object GetArgumentValue(int index) Parameters Type Name Description Int32 index The index of the argument, of the intercepted method invocation, to get. Returns Type Description Object The value of the specified argument. | Improve this Doc View Source GetConcreteMethod() Returns the concrete instantiation of Method on the proxy, with any generic parameters bound to real types. Declaration MethodInfo GetConcreteMethod() Returns Type Description MethodInfo The concrete instantiation of Method on the proxy if a generic method is being intercepted, or otherwise the same value as Method . | Improve this Doc View Source GetConcreteMethodInvocationTarget() Returns the concrete instantiation of MethodInvocationTarget , with any generic parameters bound to real types. For interface proxies, this will point to the MethodInfo on the target class. Declaration MethodInfo GetConcreteMethodInvocationTarget() Returns Type Description MethodInfo The concrete instantiation of MethodInvocationTarget if a generic method is being intercepted, or otherwise the same value as MethodInvocationTarget . | Improve this Doc View Source SetArgumentValue(Int32, Object) Overrides the value of an argument at the given index with the new value provided. Declaration void SetArgumentValue(int index, object value) Parameters Type Name Description Int32 index The index of the argument to override. Object value The new value for the argument. Remarks This method accepts an Object , however the value provided must be compatible with the type of the argument defined on the method, otherwise an exception will be thrown. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Hosting.DependencyInjection.Autofac.AutofacHostBuilderExtensions.html": {
    "href": "api/FGS.Extensions.Hosting.DependencyInjection.Autofac.AutofacHostBuilderExtensions.html",
    "title": "Class AutofacHostBuilderExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class AutofacHostBuilderExtensions Extension methods for the interface. Inheritance Object AutofacHostBuilderExtensions Namespace : FGS.Extensions.Hosting.DependencyInjection.Autofac Assembly : FGS.Extensions.Hosting.DependencyInjection.Autofac.dll Syntax public static class AutofacHostBuilderExtensions : object Remarks Taken and modified from: https://github.com/autofac/Autofac.AspNetCore/blob/e8254995519b96c568de194371edad4d2c20db0e/src/Autofac.Integration.AspNetCore/AutofacWebHostBuilderExtensions.cs . Methods | Improve this Doc View Source UseAutofacWithModulesProvider<TModulesProvider>(IHostBuilder, Action<IModule>, Action<ContainerBuilder>) Adds a custom implementation of Autofac's to the being built by builder . Declaration public static IHostBuilder UseAutofacWithModulesProvider<TModulesProvider>(this IHostBuilder builder, Action<IModule> forEachModule = null, Action<ContainerBuilder> configurationAction = null) where TModulesProvider : IModulesProvider, new() Parameters Type Name Description IHostBuilder builder The instance being configured. Action < IModule > forEachModule An optional action used to configure each being added to the container. Action < ContainerBuilder > configurationAction An optional action used to configure the container. Returns Type Description IHostBuilder The existing instance. Type Parameters Name Description TModulesProvider The type of provider that can enumerate all of the Autofac modules to be registered. Examples public static IWebHostBuilder CreateWebHostBuilder(string[] args) => WebHost.CreateDefaultBuilder(args) .UseAutofacWithModulesProvider<MyAutofacModulesProvider>() .UseStartup<Startup>();"
  },
  "api/FGS.Linq.Extensions.EntityFramework.MaterializingQueryableExtensions.html": {
    "href": "api/FGS.Linq.Extensions.EntityFramework.MaterializingQueryableExtensions.html",
    "title": "Class MaterializingQueryableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class MaterializingQueryableExtensions Extends with a facade of materialization methods. Inheritance Object MaterializingQueryableExtensions Namespace : FGS.Linq.Extensions.EntityFramework Assembly : FGS.Linq.Extensions.EntityFrameworkCore.dll Syntax public static class MaterializingQueryableExtensions : object Methods | Improve this Doc View Source MaterializeAsync<T>(IQueryable<T>, CancellationToken) Asynchronously executes the query represented by source and returns all of the results. Declaration public static Task<IReadOnlyList<T>> MaterializeAsync<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task < IReadOnlyList <T>> A task that represents the asynchronous operation. The task result contains a that contains elements from the input query. Type Parameters Name Description T The type of items that source queries for. | Improve this Doc View Source MaterializeFirstAsync<T>(IQueryable<T>, CancellationToken) Asynchronously returns the first element from the query represented by source , and throws an exception if there are no elements. Declaration public static Task<T> MaterializeFirstAsync<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task <T> A task that represents the asynchronous operation. The task result contains the first element from the input query. Type Parameters Name Description T The type of items that source queries for. | Improve this Doc View Source MaterializeFirstOrDefaultAsync<T>(IQueryable<T>, CancellationToken) Asynchronously returns the first element from the query represented by source , and returns null if there are no elements. Declaration public static Task<T> MaterializeFirstOrDefaultAsync<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task <T> A task that represents the asynchronous operation. The task result contains the first element from the input query. Type Parameters Name Description T The type of items that source queries for. | Improve this Doc View Source MaterializeSingleAsync<T>(IQueryable<T>, CancellationToken) Asynchronously returns a single element from the query represented by source , and throws an exception if there is not exactly one element. Declaration public static Task<T> MaterializeSingleAsync<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task <T> A task that represents the asynchronous operation. The task result contains the single element from the input query. Type Parameters Name Description T The type of items that source queries for. | Improve this Doc View Source MaterializeSingleOrDefaultAsync<T>(IQueryable<T>, CancellationToken) Asynchronously returns a single element from the query represented by source , returns null if there are no elements, and throws an exception if there is more than one element. Declaration public static Task<T> MaterializeSingleOrDefaultAsync<T>(this IQueryable<T> source, CancellationToken cancellationToken = null) Parameters Type Name Description IQueryable <T> source The source query. CancellationToken cancellationToken A to observe while waiting for the materialization to complete. Returns Type Description Task <T> A task that represents the asynchronous operation. The task result contains the single element from the input query. Type Parameters Name Description T The type of items that source queries for."
  },
  "api/FGS.Autofac.Interception.DynamicProxy.InterceptorAdapterModule.html": {
    "href": "api/FGS.Autofac.Interception.DynamicProxy.InterceptorAdapterModule.html",
    "title": "Class InterceptorAdapterModule | FoxGuard Foundation Libraries",
    "keywords": "Class InterceptorAdapterModule Contains registrations common to all interceptors. Inheritance Object InterceptorAdapterModule Namespace : FGS.Autofac.Interception.DynamicProxy Assembly : FGS.Autofac.Interception.DynamicProxy.dll Syntax public class InterceptorAdapterModule : Module Methods | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description ContainerBuilder builder Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Interception.Abstractions.IInvocation.html": {
    "href": "api/FGS.Interception.Abstractions.IInvocation.html",
    "title": "Interface IInvocation | FoxGuard Foundation Libraries",
    "keywords": "Interface IInvocation Represents a method invocation that has been intercepted. Inherited Members IInvocationCommon.GetArgumentValue(Int32) IInvocationCommon.GetConcreteMethod() IInvocationCommon.GetConcreteMethodInvocationTarget() IInvocationCommon.SetArgumentValue(Int32, Object) IInvocationCommon.Arguments IInvocationCommon.GenericArguments IInvocationCommon.InvocationTarget IInvocationCommon.Method IInvocationCommon.MethodInvocationTarget IInvocationCommon.Proxy IInvocationCommon.ReturnValue IInvocationCommon.TargetType Namespace : FGS.Interception.Abstractions Assembly : FGS.Interception.Abstractions.dll Syntax public interface IInvocation : IInvocationCommon Methods | Improve this Doc View Source Proceed() Proceeds the call to the next interceptor in line, and ultimately to the target method. Declaration void Proceed() Remarks To get or set the invocation return value, use the ReturnValue property. Since interface proxies without a target don't have the target implementation to proceed to, it is important, that the last interceptor does not call this method, otherwise a NotImplementedException will be thrown. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Collections.Extensions.Pagination.Abstractions.html": {
    "href": "api/FGS.Collections.Extensions.Pagination.Abstractions.html",
    "title": "Namespace FGS.Collections.Extensions.Pagination.Abstractions | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.Collections.Extensions.Pagination.Abstractions Classes Page<T> Represents a page of items taken from a larger set of items. Structs PaginationSpecification Specifies how a set of items can be subdivided into sequential pages, and then a specific page of them individually selected."
  },
  "api/FGS.FaultHandling.Predicates.Mssql.SqlExceptionRetryPredicate.html": {
    "href": "api/FGS.FaultHandling.Predicates.Mssql.SqlExceptionRetryPredicate.html",
    "title": "Class SqlExceptionRetryPredicate | FoxGuard Foundation Libraries",
    "keywords": "Class SqlExceptionRetryPredicate Indicates whether the given exception, or its inner exception, is a with a for which we want to attempt to retry the operation. Inheritance Object SqlExceptionRetryPredicate Implements IExceptionRetryPredicate Namespace : FGS.FaultHandling.Predicates.Mssql Assembly : FGS.FaultHandling.Predicates.Mssql.dll Syntax public sealed class SqlExceptionRetryPredicate : object, IExceptionRetryPredicate Remarks SqlErrors with a class greater than or equal to 17 indicate that a hardware or software error occurred. For such errors we would want to attempt to retry the operation. SqlErrors with a class less than 17 are used to indicate that the user needs to correct something before the operation can succeed, and so we do not want to retry if there are any of those. See https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlerror.class(v=vs.110).aspx . Methods | Improve this Doc View Source ShouldRetry(Exception) Declaration public bool ShouldRetry(Exception ex) Parameters Type Name Description Exception ex Returns Type Description Boolean Implements IExceptionRetryPredicate Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Autofac.DynamicScoping.Abstractions.Specialized.IOverridableHttpScopeAutofacModule.html": {
    "href": "api/FGS.Autofac.DynamicScoping.Abstractions.Specialized.IOverridableHttpScopeAutofacModule.html",
    "title": "Interface IOverridableHttpScopeAutofacModule | FoxGuard Foundation Libraries",
    "keywords": "Interface IOverridableHttpScopeAutofacModule Represents an Autofac module which must behave differently based on the lifetime management semantics of an HTTP request for the current container. Namespace : FGS.Autofac.DynamicScoping.Abstractions.Specialized Assembly : FGS.Autofac.DynamicScoping.Abstractions.dll Syntax public interface IOverridableHttpScopeAutofacModule : IModule Methods | Improve this Doc View Source SetHttpScope(Scope) Sets the lifetime management semantics of HTTP dependencies being registered. Declaration void SetHttpScope(Scope scope) Parameters Type Name Description Scope scope Indicates the lifetime management semantics by which the HTTP-dependent components will be resolved. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostSkippingHostingMiddleware.html": {
    "href": "api/FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.HostSkippingHostingMiddleware.html",
    "title": "Class HostSkippingHostingMiddleware | FoxGuard Foundation Libraries",
    "keywords": "Class HostSkippingHostingMiddleware Implements an IHostingMiddleware that does NOT continue execution into nested middleware. Inheritance Object HostSkippingHostingMiddleware Implements IHostingMiddleware Namespace : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking Assembly : FGS.Tests.Support.Extensions.Hosting.Middleware.Mocking.dll Syntax public sealed class HostSkippingHostingMiddleware : object, IHostingMiddleware Implements IHostingMiddleware Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Primitives.Time.SystemClock.html": {
    "href": "api/FGS.Primitives.Time.SystemClock.html",
    "title": "Class SystemClock | FoxGuard Foundation Libraries",
    "keywords": "Class SystemClock Inheritance Object SystemClock Implements IClock Namespace : FGS.Primitives.Time Assembly : FGS.Primitives.Time.dll Syntax public class SystemClock : object, IClock Properties | Improve this Doc View Source Now Declaration public DateTimeOffset Now { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source UtcNow Declaration public DateTimeOffset UtcNow { get; } Property Value Type Description DateTimeOffset Implements IClock Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.FaultHandling.Abstractions.Retry.html": {
    "href": "api/FGS.FaultHandling.Abstractions.Retry.html",
    "title": "Namespace FGS.FaultHandling.Abstractions.Retry | FoxGuard Foundation Libraries",
    "keywords": "Namespace FGS.FaultHandling.Abstractions.Retry Interfaces IExceptionRetryPredicate Represents conditional logic as to whether or not an operation that failed from a given exception should be retried. IRetryBackoffCalculator Represents a calculation for how long the retry of an operation should be delayed based on which retry attempt ordinal it is. IRetryPolicy Represents a retry policy. IRetryPolicyCoordinator Represents a parameter-less factory of IRetryPolicy instances. IRetryPolicyFactory Represents a factory of IRetryPolicy instances that takes exception predicates as a parameter."
  },
  "api/FGS.Tests.Support.Extensions.EnumerableExtensions.html": {
    "href": "api/FGS.Tests.Support.Extensions.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | FoxGuard Foundation Libraries",
    "keywords": "Class EnumerableExtensions Provides functionality for interacting with collections. Inheritance Object EnumerableExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FGS.Tests.Support.Extensions Assembly : FGS.Tests.Support.dll Syntax public static class EnumerableExtensions Methods | Improve this Doc View Source Yield<T>(T) Amplifies this instance into an IEnumerable<T> consisting of a single item. Declaration public static IEnumerable<T> Yield<T>(this T item) Parameters Type Name Description T item The instance that will be amplified. Returns Type Description IEnumerable <T> An IEnumerable{T} consisting of a single item. Type Parameters Name Description T Type of the object. Remarks If item is null, the resulting IEnumerable<T> will be empty."
  },
  "api/FGS.Rx.Extensions.Abstractions.IHistoricalReactiveProcessor.html": {
    "href": "api/FGS.Rx.Extensions.Abstractions.IHistoricalReactiveProcessor.html",
    "title": "Interface IHistoricalReactiveProcessor | FoxGuard Foundation Libraries",
    "keywords": "Interface IHistoricalReactiveProcessor Represents the capability to take a collection of timestamped events, process it with Rx operators, and await the materialization of the result back into a collection. Namespace : FGS.Rx.Extensions.Abstractions Assembly : FGS.Rx.Extensions.Abstractions.dll Syntax public interface IHistoricalReactiveProcessor Methods | Improve this Doc View Source MapAsync<TInput, TResult>(IEnumerable<Timestamped<TInput>>, Func<IObservable<TInput>, IScheduler, IObservable<TResult>>) Takes a collection of timestamped events, processes it with Rx operators, and then allows the caller to await the materialization of the result back into a collection. Declaration Task<IEnumerable<Timestamped<TResult>>> MapAsync<TInput, TResult>(IEnumerable<Timestamped<TInput>> inputs, Func<IObservable<TInput>, IScheduler, IObservable<TResult>> mapper) Parameters Type Name Description IEnumerable < Timestamped <TInput>> inputs The input collection of timestamped events. Func < IObservable <TInput>, IScheduler , IObservable <TResult>> mapper A function representing an Rx-based transformation of inputs into outputs. Returns Type Description Task < IEnumerable < Timestamped <TResult>>> An awaitable materialization of timestamped events. Type Parameters Name Description TInput The type of events that are the input. TResult The type of events that are the output. Extension Methods EnumerableExtensions.Yield<T>(T)"
  },
  "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkContainerConfigurationConfigurationSource.html": {
    "href": "api/FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.AwsElasticBeanstalkContainerConfigurationConfigurationSource.html",
    "title": "Class AwsElasticBeanstalkContainerConfigurationConfigurationSource | FoxGuard Foundation Libraries",
    "keywords": "Class AwsElasticBeanstalkContainerConfigurationConfigurationSource Represents a that retrieves data from the \"IIS Environment\" values in a \"container configuration\" file as part of an AWS Elastic Beanstalk instance. Inheritance Object AwsElasticBeanstalkContainerConfigurationConfigurationSource Namespace : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv Assembly : FGS.Extensions.Configuration.AWS.ElasticBeanstalk.IisEnv.dll Syntax public class AwsElasticBeanstalkContainerConfigurationConfigurationSource : JsonConfigurationSource Methods | Improve this Doc View Source Build(IConfigurationBuilder) Builds the AwsElasticBeanstalkIisEnvConfigurationProvider for this source. Declaration public override IConfigurationProvider Build(IConfigurationBuilder builder) Parameters Type Name Description IConfigurationBuilder builder The . Returns Type Description IConfigurationProvider A AwsElasticBeanstalkIisEnvConfigurationProvider Extension Methods EnumerableExtensions.Yield<T>(T)"
  }
}